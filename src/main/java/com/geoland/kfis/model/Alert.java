package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

import com.geoland.framework.persistence.base.AbstractPersistentObject;
import com.geoland.framework.persistence.model.rbac.RbacRole;

// TODO: Auto-generated Javadoc
/**
 * Alert generated by hbm2java.
 */
@Entity
@Table(name = "talert", schema = "public")
public class Alert extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The rbac role. */
	private RbacRole rbacRole;
	
	/** The alert rule. */
	private AlertRule alertRule;
	
	/** The person by createdby. */
	private Person personByCreatedby;
	
	/** The person by updatedby. */
	private Person personByUpdatedby;
	
	/** The person by person id. */
	private Person personByPersonId;
	
	/** The organisation. */
	private Organisation organisation;
	
	/** The isactive. */
	private String isactive;
	
	/** The created. */
	private Date created;
	
	/** The updated. */
	private Date updated;
	
	/** The name. */
	private String name;
	
	/** The description. */
	private String description;
	
	/** The isfixed. */
	private String isfixed;
	
	/** The note. */
	private String note;
	
	/** The table name. */
	private String tableName;
	
	/** The table id. */
	private Long tableId;
	
	/** The referencekey id. */
	private String referencekeyId;
	
	/** The status. */
	private String status;
	
	/** The errormsg. */
	private String errormsg;

	/**
	 * Instantiates a new alert.
	 */
	public Alert() {
	}

	/**
	 * Instantiates a new alert.
	 *
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param organisation the organisation
	 * @param isactive the isactive
	 * @param created the created
	 * @param updated the updated
	 * @param name the name
	 * @param referencekeyId the referencekey id
	 */
	public Alert(Person personByCreatedby, Person personByUpdatedby,
			Organisation organisation, String isactive, Date created,
			Date updated, String name, String referencekeyId) {
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.organisation = organisation;
		this.isactive = isactive;
		this.created = created;
		this.updated = updated;
		this.name = name;
		this.referencekeyId = referencekeyId;
	}

	/**
	 * Instantiates a new alert.
	 *
	 * @param rbacRole the rbac role
	 * @param alertRule the alert rule
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param personByPersonId the person by person id
	 * @param organisation the organisation
	 * @param isactive the isactive
	 * @param created the created
	 * @param updated the updated
	 * @param name the name
	 * @param description the description
	 * @param isfixed the isfixed
	 * @param note the note
	 * @param tableName the table name
	 * @param tableId the table id
	 * @param referencekeyId the referencekey id
	 * @param status the status
	 * @param errormsg the errormsg
	 */
	public Alert(RbacRole rbacRole, AlertRule alertRule,
			Person personByCreatedby, Person personByUpdatedby,
			Person personByPersonId, Organisation organisation,
			String isactive, Date created, Date updated, String name,
			String description, String isfixed, String note, String tableName,
			Long tableId, String referencekeyId, String status, String errormsg) {
		this.rbacRole = rbacRole;
		this.alertRule = alertRule;
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.personByPersonId = personByPersonId;
		this.organisation = organisation;
		this.isactive = isactive;
		this.created = created;
		this.updated = updated;
		this.name = name;
		this.description = description;
		this.isfixed = isfixed;
		this.note = note;
		this.tableName = tableName;
		this.tableId = tableId;
		this.referencekeyId = referencekeyId;
		this.status = status;
		this.errormsg = errormsg;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the rbac role.
	 *
	 * @return the rbac role
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id")
	public RbacRole getRbacRole() {
		return this.rbacRole;
	}

	/**
	 * Sets the rbac role.
	 *
	 * @param rbacRole the new rbac role
	 */
	public void setRbacRole(RbacRole rbacRole) {
		this.rbacRole = rbacRole;
	}

	/**
	 * Gets the alert rule.
	 *
	 * @return the alert rule
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "alertrule_id")
	public AlertRule getAlertRule() {
		return this.alertRule;
	}

	/**
	 * Sets the alert rule.
	 *
	 * @param alertRule the new alert rule
	 */
	public void setAlertRule(AlertRule alertRule) {
		this.alertRule = alertRule;
	}

	/**
	 * Gets the person by createdby.
	 *
	 * @return the person by createdby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdby", nullable = false)
	public Person getPersonByCreatedby() {
		return this.personByCreatedby;
	}

	/**
	 * Sets the person by createdby.
	 *
	 * @param personByCreatedby the new person by createdby
	 */
	public void setPersonByCreatedby(Person personByCreatedby) {
		this.personByCreatedby = personByCreatedby;
	}

	/**
	 * Gets the person by updatedby.
	 *
	 * @return the person by updatedby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedby", nullable = false)
	public Person getPersonByUpdatedby() {
		return this.personByUpdatedby;
	}

	/**
	 * Sets the person by updatedby.
	 *
	 * @param personByUpdatedby the new person by updatedby
	 */
	public void setPersonByUpdatedby(Person personByUpdatedby) {
		this.personByUpdatedby = personByUpdatedby;
	}

	/**
	 * Gets the person by person id.
	 *
	 * @return the person by person id
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "person_id")
	public Person getPersonByPersonId() {
		return this.personByPersonId;
	}

	/**
	 * Sets the person by person id.
	 *
	 * @param personByPersonId the new person by person id
	 */
	public void setPersonByPersonId(Person personByPersonId) {
		this.personByPersonId = personByPersonId;
	}

	/**
	 * Gets the organisation.
	 *
	 * @return the organisation
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "org_id", nullable = false)
	public Organisation getOrganisation() {
		return this.organisation;
	}

	/**
	 * Sets the organisation.
	 *
	 * @param organisation the new organisation
	 */
	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	/**
	 * Gets the isactive.
	 *
	 * @return the isactive
	 */
	@Column(name = "isactive", nullable = false, length = 1)
	public String getIsactive() {
		return this.isactive;
	}

	/**
	 * Sets the isactive.
	 *
	 * @param isactive the new isactive
	 */
	public void setIsactive(String isactive) {
		this.isactive = isactive;
	}

	/**
	 * Gets the created.
	 *
	 * @return the created
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	/**
	 * Sets the created.
	 *
	 * @param created the new created
	 */
	public void setCreated(Date created) {
		this.created = created;
	}

	/**
	 * Gets the updated.
	 *
	 * @return the updated
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	/**
	 * Sets the updated.
	 *
	 * @param updated the new updated
	 */
	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false, length = 60)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the isfixed.
	 *
	 * @return the isfixed
	 */
	@Column(name = "isfixed", length = 1)
	public String getIsfixed() {
		return this.isfixed;
	}

	/**
	 * Sets the isfixed.
	 *
	 * @param isfixed the new isfixed
	 */
	public void setIsfixed(String isfixed) {
		this.isfixed = isfixed;
	}

	/**
	 * Gets the note.
	 *
	 * @return the note
	 */
	@Column(name = "note", length = 2000)
	public String getNote() {
		return this.note;
	}

	/**
	 * Sets the note.
	 *
	 * @param note the new note
	 */
	public void setNote(String note) {
		this.note = note;
	}

	/**
	 * Gets the table name.
	 *
	 * @return the table name
	 */
	@Column(name = "table_name", length = 150)
	public String getTableName() {
		return this.tableName;
	}

	/**
	 * Sets the table name.
	 *
	 * @param tableName the new table name
	 */
	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	/**
	 * Gets the table id.
	 *
	 * @return the table id
	 */
	@Column(name = "table_id")
	public Long getTableId() {
		return this.tableId;
	}

	/**
	 * Sets the table id.
	 *
	 * @param tableId the new table id
	 */
	public void setTableId(Long tableId) {
		this.tableId = tableId;
	}

	/**
	 * Gets the referencekey id.
	 *
	 * @return the referencekey id
	 */
	@Column(name = "referencekey_id", nullable = false, length = 32)
	public String getReferencekeyId() {
		return this.referencekeyId;
	}

	/**
	 * Sets the referencekey id.
	 *
	 * @param referencekeyId the new referencekey id
	 */
	public void setReferencekeyId(String referencekeyId) {
		this.referencekeyId = referencekeyId;
	}

	/**
	 * Gets the status.
	 *
	 * @return the status
	 */
	@Column(name = "status", length = 60)
	public String getStatus() {
		return this.status;
	}

	/**
	 * Sets the status.
	 *
	 * @param status the new status
	 */
	public void setStatus(String status) {
		this.status = status;
	}

	/**
	 * Gets the errormsg.
	 *
	 * @return the errormsg
	 */
	@Column(name = "errormsg", length = 2000)
	public String getErrormsg() {
		return this.errormsg;
	}

	/**
	 * Sets the errormsg.
	 *
	 * @param errormsg the new errormsg
	 */
	public void setErrormsg(String errormsg) {
		this.errormsg = errormsg;
	}

}
