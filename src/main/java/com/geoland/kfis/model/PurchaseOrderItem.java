package com.geoland.kfis.model;

// Generated Mar 7, 2015 12:39:09 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * PurchaseOrderItem generated by hbm2java.
 */
@Entity
@Table(name = "tpurchase_order_item", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"order_id", "item_number" }))
public class PurchaseOrderItem extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The currency. */
	private Currency currency;
	
	/** The purchase order. */
	private PurchaseOrder purchaseOrder;
	
	/** The bpartner. */
	private Bpartner bpartner;
	
	/** The uom. */
	private Uom uom;
	
	/** The person by createdby. */
	private Person personByCreatedby;
	
	/** The person by updatedby. */
	private Person personByUpdatedby;
	
	/** The tax. */
	private Tax tax;
	
	/** The bpartner location. */
	private BpartnerLocation bpartnerLocation;
	
	/** The isactive. */
	private String isactive;
	
	/** The status code. */
	private String statusCode;
	
	/** The item name. */
	private String itemName;
	
	/** The item number. */
	private String itemNumber;
	
	/** The item desc. */
	private String itemDesc;
	
	/** The unit price. */
	private BigDecimal unitPrice;
	
	/** The line total. */
	private BigDecimal lineTotal;
	
	/** The dateordered. */
	private Date dateordered;
	
	/** The datepromised. */
	private Date datepromised;
	
	/** The datedelivered. */
	private Date datedelivered;
	
	/** The dateinvoiced. */
	private Date dateinvoiced;
	
	/** The description. */
	private String description;
	
	/** The directship. */
	private String directship;
	
	/** The shipper. */
	private String shipper;
	
	/** The qtyordered. */
	private BigDecimal qtyordered;
	
	/** The qtyreserved. */
	private BigDecimal qtyreserved;
	
	/** The qtydelivered. */
	private BigDecimal qtydelivered;
	
	/** The qtyrejected. */
	private BigDecimal qtyrejected;
	
	/** The qtyinvoiced. */
	private BigDecimal qtyinvoiced;
	
	/** The qtystocked. */
	private BigDecimal qtystocked;
	
	/** The pricelist. */
	private BigDecimal pricelist;
	
	/** The priceactual. */
	private BigDecimal priceactual;
	
	/** The pricelimit. */
	private BigDecimal pricelimit;
	
	/** The linenetamt. */
	private BigDecimal linenetamt;
	
	/** The discount. */
	private BigDecimal discount;
	
	/** The freightamt. */
	private BigDecimal freightamt;
	
	/** The gross unit price. */
	private BigDecimal grossUnitPrice;
	
	/** The line gross amount. */
	private BigDecimal lineGrossAmount;
	
	/** The grosspricelist. */
	private BigDecimal grosspricelist;
	
	/** The created. */
	private Date created;
	
	/** The updated. */
	private Date updated;

	/**
	 * Instantiates a new purchase order item.
	 */
	public PurchaseOrderItem() {
	}

	/**
	 * Instantiates a new purchase order item.
	 *
	 * @param currency the currency
	 * @param purchaseOrder the purchase order
	 * @param uom the uom
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param tax the tax
	 * @param isactive the isactive
	 * @param statusCode the status code
	 * @param itemName the item name
	 * @param itemNumber the item number
	 * @param unitPrice the unit price
	 * @param lineTotal the line total
	 * @param dateordered the dateordered
	 * @param directship the directship
	 * @param qtyordered the qtyordered
	 * @param created the created
	 * @param updated the updated
	 */
	public PurchaseOrderItem(Currency currency, PurchaseOrder purchaseOrder,
			Uom uom, Person personByCreatedby, Person personByUpdatedby,
			Tax tax, String isactive, String statusCode, String itemName,
			String itemNumber, BigDecimal unitPrice, BigDecimal lineTotal,
			Date dateordered, String directship, BigDecimal qtyordered,
			Date created, Date updated) {
		this.currency = currency;
		this.purchaseOrder = purchaseOrder;
		this.uom = uom;
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.tax = tax;
		this.isactive = isactive;
		this.statusCode = statusCode;
		this.itemName = itemName;
		this.itemNumber = itemNumber;
		this.unitPrice = unitPrice;
		this.lineTotal = lineTotal;
		this.dateordered = dateordered;
		this.directship = directship;
		this.qtyordered = qtyordered;
		this.created = created;
		this.updated = updated;
	}

	/**
	 * Instantiates a new purchase order item.
	 *
	 * @param currency the currency
	 * @param purchaseOrder the purchase order
	 * @param bpartner the bpartner
	 * @param uom the uom
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param tax the tax
	 * @param bpartnerLocation the bpartner location
	 * @param isactive the isactive
	 * @param statusCode the status code
	 * @param itemName the item name
	 * @param itemNumber the item number
	 * @param itemDesc the item desc
	 * @param unitPrice the unit price
	 * @param lineTotal the line total
	 * @param dateordered the dateordered
	 * @param datepromised the datepromised
	 * @param datedelivered the datedelivered
	 * @param dateinvoiced the dateinvoiced
	 * @param description the description
	 * @param directship the directship
	 * @param shipper the shipper
	 * @param qtyordered the qtyordered
	 * @param qtyreserved the qtyreserved
	 * @param qtydelivered the qtydelivered
	 * @param qtyrejected the qtyrejected
	 * @param qtyinvoiced the qtyinvoiced
	 * @param qtystocked the qtystocked
	 * @param pricelist the pricelist
	 * @param priceactual the priceactual
	 * @param pricelimit the pricelimit
	 * @param linenetamt the linenetamt
	 * @param discount the discount
	 * @param freightamt the freightamt
	 * @param grossUnitPrice the gross unit price
	 * @param lineGrossAmount the line gross amount
	 * @param grosspricelist the grosspricelist
	 * @param created the created
	 * @param updated the updated
	 */
	public PurchaseOrderItem(Currency currency, PurchaseOrder purchaseOrder,
			Bpartner bpartner, Uom uom, Person personByCreatedby,
			Person personByUpdatedby, Tax tax,
			BpartnerLocation bpartnerLocation, String isactive,
			String statusCode, String itemName, String itemNumber,
			String itemDesc, BigDecimal unitPrice, BigDecimal lineTotal,
			Date dateordered, Date datepromised, Date datedelivered,
			Date dateinvoiced, String description, String directship,
			String shipper, BigDecimal qtyordered, BigDecimal qtyreserved,
			BigDecimal qtydelivered, BigDecimal qtyrejected,
			BigDecimal qtyinvoiced, BigDecimal qtystocked,
			BigDecimal pricelist, BigDecimal priceactual,
			BigDecimal pricelimit, BigDecimal linenetamt, BigDecimal discount,
			BigDecimal freightamt, BigDecimal grossUnitPrice,
			BigDecimal lineGrossAmount, BigDecimal grosspricelist,
			Date created, Date updated) {
		this.currency = currency;
		this.purchaseOrder = purchaseOrder;
		this.bpartner = bpartner;
		this.uom = uom;
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.tax = tax;
		this.bpartnerLocation = bpartnerLocation;
		this.isactive = isactive;
		this.statusCode = statusCode;
		this.itemName = itemName;
		this.itemNumber = itemNumber;
		this.itemDesc = itemDesc;
		this.unitPrice = unitPrice;
		this.lineTotal = lineTotal;
		this.dateordered = dateordered;
		this.datepromised = datepromised;
		this.datedelivered = datedelivered;
		this.dateinvoiced = dateinvoiced;
		this.description = description;
		this.directship = directship;
		this.shipper = shipper;
		this.qtyordered = qtyordered;
		this.qtyreserved = qtyreserved;
		this.qtydelivered = qtydelivered;
		this.qtyrejected = qtyrejected;
		this.qtyinvoiced = qtyinvoiced;
		this.qtystocked = qtystocked;
		this.pricelist = pricelist;
		this.priceactual = priceactual;
		this.pricelimit = pricelimit;
		this.linenetamt = linenetamt;
		this.discount = discount;
		this.freightamt = freightamt;
		this.grossUnitPrice = grossUnitPrice;
		this.lineGrossAmount = lineGrossAmount;
		this.grosspricelist = grosspricelist;
		this.created = created;
		this.updated = updated;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the currency.
	 *
	 * @return the currency
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "currency_id", nullable = false)
	public Currency getCurrency() {
		return this.currency;
	}

	/**
	 * Sets the currency.
	 *
	 * @param currency the new currency
	 */
	public void setCurrency(Currency currency) {
		this.currency = currency;
	}

	/**
	 * Gets the purchase order.
	 *
	 * @return the purchase order
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_id", nullable = false)
	public PurchaseOrder getPurchaseOrder() {
		return this.purchaseOrder;
	}

	/**
	 * Sets the purchase order.
	 *
	 * @param purchaseOrder the new purchase order
	 */
	public void setPurchaseOrder(PurchaseOrder purchaseOrder) {
		this.purchaseOrder = purchaseOrder;
	}

	/**
	 * Gets the bpartner.
	 *
	 * @return the bpartner
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bpartner_id")
	public Bpartner getBpartner() {
		return this.bpartner;
	}

	/**
	 * Sets the bpartner.
	 *
	 * @param bpartner the new bpartner
	 */
	public void setBpartner(Bpartner bpartner) {
		this.bpartner = bpartner;
	}

	/**
	 * Gets the uom.
	 *
	 * @return the uom
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uom_id", nullable = false)
	public Uom getUom() {
		return this.uom;
	}

	/**
	 * Sets the uom.
	 *
	 * @param uom the new uom
	 */
	public void setUom(Uom uom) {
		this.uom = uom;
	}

	/**
	 * Gets the person by createdby.
	 *
	 * @return the person by createdby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdby", nullable = false)
	public Person getPersonByCreatedby() {
		return this.personByCreatedby;
	}

	/**
	 * Sets the person by createdby.
	 *
	 * @param personByCreatedby the new person by createdby
	 */
	public void setPersonByCreatedby(Person personByCreatedby) {
		this.personByCreatedby = personByCreatedby;
	}

	/**
	 * Gets the person by updatedby.
	 *
	 * @return the person by updatedby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedby", nullable = false)
	public Person getPersonByUpdatedby() {
		return this.personByUpdatedby;
	}

	/**
	 * Sets the person by updatedby.
	 *
	 * @param personByUpdatedby the new person by updatedby
	 */
	public void setPersonByUpdatedby(Person personByUpdatedby) {
		this.personByUpdatedby = personByUpdatedby;
	}

	/**
	 * Gets the tax.
	 *
	 * @return the tax
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tax_id", nullable = false)
	public Tax getTax() {
		return this.tax;
	}

	/**
	 * Sets the tax.
	 *
	 * @param tax the new tax
	 */
	public void setTax(Tax tax) {
		this.tax = tax;
	}

	/**
	 * Gets the bpartner location.
	 *
	 * @return the bpartner location
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bpartner_location_id")
	public BpartnerLocation getBpartnerLocation() {
		return this.bpartnerLocation;
	}

	/**
	 * Sets the bpartner location.
	 *
	 * @param bpartnerLocation the new bpartner location
	 */
	public void setBpartnerLocation(BpartnerLocation bpartnerLocation) {
		this.bpartnerLocation = bpartnerLocation;
	}

	/**
	 * Gets the isactive.
	 *
	 * @return the isactive
	 */
	@Column(name = "isactive", nullable = false, length = 1)
	public String getIsactive() {
		return this.isactive;
	}

	/**
	 * Sets the isactive.
	 *
	 * @param isactive the new isactive
	 */
	public void setIsactive(String isactive) {
		this.isactive = isactive;
	}

	/**
	 * Gets the status code.
	 *
	 * @return the status code
	 */
	@Column(name = "status_code", nullable = false, length = 2)
	public String getStatusCode() {
		return this.statusCode;
	}

	/**
	 * Sets the status code.
	 *
	 * @param statusCode the new status code
	 */
	public void setStatusCode(String statusCode) {
		this.statusCode = statusCode;
	}

	/**
	 * Gets the item name.
	 *
	 * @return the item name
	 */
	@Column(name = "item_name", nullable = false, length = 100)
	public String getItemName() {
		return this.itemName;
	}

	/**
	 * Sets the item name.
	 *
	 * @param itemName the new item name
	 */
	public void setItemName(String itemName) {
		this.itemName = itemName;
	}

	/**
	 * Gets the item number.
	 *
	 * @return the item number
	 */
	@Column(name = "item_number", nullable = false, length = 20)
	public String getItemNumber() {
		return this.itemNumber;
	}

	/**
	 * Sets the item number.
	 *
	 * @param itemNumber the new item number
	 */
	public void setItemNumber(String itemNumber) {
		this.itemNumber = itemNumber;
	}

	/**
	 * Gets the item desc.
	 *
	 * @return the item desc
	 */
	@Column(name = "item_desc")
	public String getItemDesc() {
		return this.itemDesc;
	}

	/**
	 * Sets the item desc.
	 *
	 * @param itemDesc the new item desc
	 */
	public void setItemDesc(String itemDesc) {
		this.itemDesc = itemDesc;
	}

	/**
	 * Gets the unit price.
	 *
	 * @return the unit price
	 */
	@Column(name = "unit_price", nullable = false, precision = 20, scale = 5)
	public BigDecimal getUnitPrice() {
		return this.unitPrice;
	}

	/**
	 * Sets the unit price.
	 *
	 * @param unitPrice the new unit price
	 */
	public void setUnitPrice(BigDecimal unitPrice) {
		this.unitPrice = unitPrice;
	}

	/**
	 * Gets the line total.
	 *
	 * @return the line total
	 */
	@Column(name = "line_total", nullable = false, precision = 20, scale = 5)
	public BigDecimal getLineTotal() {
		return this.lineTotal;
	}

	/**
	 * Sets the line total.
	 *
	 * @param lineTotal the new line total
	 */
	public void setLineTotal(BigDecimal lineTotal) {
		this.lineTotal = lineTotal;
	}

	/**
	 * Gets the dateordered.
	 *
	 * @return the dateordered
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateordered", nullable = false, length = 29)
	public Date getDateordered() {
		return this.dateordered;
	}

	/**
	 * Sets the dateordered.
	 *
	 * @param dateordered the new dateordered
	 */
	public void setDateordered(Date dateordered) {
		this.dateordered = dateordered;
	}

	/**
	 * Gets the datepromised.
	 *
	 * @return the datepromised
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "datepromised", length = 29)
	public Date getDatepromised() {
		return this.datepromised;
	}

	/**
	 * Sets the datepromised.
	 *
	 * @param datepromised the new datepromised
	 */
	public void setDatepromised(Date datepromised) {
		this.datepromised = datepromised;
	}

	/**
	 * Gets the datedelivered.
	 *
	 * @return the datedelivered
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "datedelivered", length = 29)
	public Date getDatedelivered() {
		return this.datedelivered;
	}

	/**
	 * Sets the datedelivered.
	 *
	 * @param datedelivered the new datedelivered
	 */
	public void setDatedelivered(Date datedelivered) {
		this.datedelivered = datedelivered;
	}

	/**
	 * Gets the dateinvoiced.
	 *
	 * @return the dateinvoiced
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateinvoiced", length = 29)
	public Date getDateinvoiced() {
		return this.dateinvoiced;
	}

	/**
	 * Sets the dateinvoiced.
	 *
	 * @param dateinvoiced the new dateinvoiced
	 */
	public void setDateinvoiced(Date dateinvoiced) {
		this.dateinvoiced = dateinvoiced;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description", length = 2000)
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the directship.
	 *
	 * @return the directship
	 */
	@Column(name = "directship", nullable = false, length = 1)
	public String getDirectship() {
		return this.directship;
	}

	/**
	 * Sets the directship.
	 *
	 * @param directship the new directship
	 */
	public void setDirectship(String directship) {
		this.directship = directship;
	}

	/**
	 * Gets the shipper.
	 *
	 * @return the shipper
	 */
	@Column(name = "shipper", length = 60)
	public String getShipper() {
		return this.shipper;
	}

	/**
	 * Sets the shipper.
	 *
	 * @param shipper the new shipper
	 */
	public void setShipper(String shipper) {
		this.shipper = shipper;
	}

	/**
	 * Gets the qtyordered.
	 *
	 * @return the qtyordered
	 */
	@Column(name = "qtyordered", nullable = false, precision = 131089, scale = 0)
	public BigDecimal getQtyordered() {
		return this.qtyordered;
	}

	/**
	 * Sets the qtyordered.
	 *
	 * @param qtyordered the new qtyordered
	 */
	public void setQtyordered(BigDecimal qtyordered) {
		this.qtyordered = qtyordered;
	}

	/**
	 * Gets the qtyreserved.
	 *
	 * @return the qtyreserved
	 */
	@Column(name = "qtyreserved", precision = 131089, scale = 0)
	public BigDecimal getQtyreserved() {
		return this.qtyreserved;
	}

	/**
	 * Sets the qtyreserved.
	 *
	 * @param qtyreserved the new qtyreserved
	 */
	public void setQtyreserved(BigDecimal qtyreserved) {
		this.qtyreserved = qtyreserved;
	}

	/**
	 * Gets the qtydelivered.
	 *
	 * @return the qtydelivered
	 */
	@Column(name = "qtydelivered", precision = 131089, scale = 0)
	public BigDecimal getQtydelivered() {
		return this.qtydelivered;
	}

	/**
	 * Sets the qtydelivered.
	 *
	 * @param qtydelivered the new qtydelivered
	 */
	public void setQtydelivered(BigDecimal qtydelivered) {
		this.qtydelivered = qtydelivered;
	}

	/**
	 * Gets the qtyrejected.
	 *
	 * @return the qtyrejected
	 */
	@Column(name = "qtyrejected", precision = 131089, scale = 0)
	public BigDecimal getQtyrejected() {
		return this.qtyrejected;
	}

	/**
	 * Sets the qtyrejected.
	 *
	 * @param qtyrejected the new qtyrejected
	 */
	public void setQtyrejected(BigDecimal qtyrejected) {
		this.qtyrejected = qtyrejected;
	}

	/**
	 * Gets the qtyinvoiced.
	 *
	 * @return the qtyinvoiced
	 */
	@Column(name = "qtyinvoiced", precision = 131089, scale = 0)
	public BigDecimal getQtyinvoiced() {
		return this.qtyinvoiced;
	}

	/**
	 * Sets the qtyinvoiced.
	 *
	 * @param qtyinvoiced the new qtyinvoiced
	 */
	public void setQtyinvoiced(BigDecimal qtyinvoiced) {
		this.qtyinvoiced = qtyinvoiced;
	}

	/**
	 * Gets the qtystocked.
	 *
	 * @return the qtystocked
	 */
	@Column(name = "qtystocked", precision = 131089, scale = 0)
	public BigDecimal getQtystocked() {
		return this.qtystocked;
	}

	/**
	 * Sets the qtystocked.
	 *
	 * @param qtystocked the new qtystocked
	 */
	public void setQtystocked(BigDecimal qtystocked) {
		this.qtystocked = qtystocked;
	}

	/**
	 * Gets the pricelist.
	 *
	 * @return the pricelist
	 */
	@Column(name = "pricelist", precision = 20, scale = 5)
	public BigDecimal getPricelist() {
		return this.pricelist;
	}

	/**
	 * Sets the pricelist.
	 *
	 * @param pricelist the new pricelist
	 */
	public void setPricelist(BigDecimal pricelist) {
		this.pricelist = pricelist;
	}

	/**
	 * Gets the priceactual.
	 *
	 * @return the priceactual
	 */
	@Column(name = "priceactual", precision = 20, scale = 5)
	public BigDecimal getPriceactual() {
		return this.priceactual;
	}

	/**
	 * Sets the priceactual.
	 *
	 * @param priceactual the new priceactual
	 */
	public void setPriceactual(BigDecimal priceactual) {
		this.priceactual = priceactual;
	}

	/**
	 * Gets the pricelimit.
	 *
	 * @return the pricelimit
	 */
	@Column(name = "pricelimit", precision = 20, scale = 5)
	public BigDecimal getPricelimit() {
		return this.pricelimit;
	}

	/**
	 * Sets the pricelimit.
	 *
	 * @param pricelimit the new pricelimit
	 */
	public void setPricelimit(BigDecimal pricelimit) {
		this.pricelimit = pricelimit;
	}

	/**
	 * Gets the linenetamt.
	 *
	 * @return the linenetamt
	 */
	@Column(name = "linenetamt", precision = 20, scale = 5)
	public BigDecimal getLinenetamt() {
		return this.linenetamt;
	}

	/**
	 * Sets the linenetamt.
	 *
	 * @param linenetamt the new linenetamt
	 */
	public void setLinenetamt(BigDecimal linenetamt) {
		this.linenetamt = linenetamt;
	}

	/**
	 * Gets the discount.
	 *
	 * @return the discount
	 */
	@Column(name = "discount", precision = 20, scale = 5)
	public BigDecimal getDiscount() {
		return this.discount;
	}

	/**
	 * Sets the discount.
	 *
	 * @param discount the new discount
	 */
	public void setDiscount(BigDecimal discount) {
		this.discount = discount;
	}

	/**
	 * Gets the freightamt.
	 *
	 * @return the freightamt
	 */
	@Column(name = "freightamt", precision = 20, scale = 5)
	public BigDecimal getFreightamt() {
		return this.freightamt;
	}

	/**
	 * Sets the freightamt.
	 *
	 * @param freightamt the new freightamt
	 */
	public void setFreightamt(BigDecimal freightamt) {
		this.freightamt = freightamt;
	}

	/**
	 * Gets the gross unit price.
	 *
	 * @return the gross unit price
	 */
	@Column(name = "gross_unit_price", precision = 20, scale = 5)
	public BigDecimal getGrossUnitPrice() {
		return this.grossUnitPrice;
	}

	/**
	 * Sets the gross unit price.
	 *
	 * @param grossUnitPrice the new gross unit price
	 */
	public void setGrossUnitPrice(BigDecimal grossUnitPrice) {
		this.grossUnitPrice = grossUnitPrice;
	}

	/**
	 * Gets the line gross amount.
	 *
	 * @return the line gross amount
	 */
	@Column(name = "line_gross_amount", precision = 20, scale = 5)
	public BigDecimal getLineGrossAmount() {
		return this.lineGrossAmount;
	}

	/**
	 * Sets the line gross amount.
	 *
	 * @param lineGrossAmount the new line gross amount
	 */
	public void setLineGrossAmount(BigDecimal lineGrossAmount) {
		this.lineGrossAmount = lineGrossAmount;
	}

	/**
	 * Gets the grosspricelist.
	 *
	 * @return the grosspricelist
	 */
	@Column(name = "grosspricelist", precision = 20, scale = 5)
	public BigDecimal getGrosspricelist() {
		return this.grosspricelist;
	}

	/**
	 * Sets the grosspricelist.
	 *
	 * @param grosspricelist the new grosspricelist
	 */
	public void setGrosspricelist(BigDecimal grosspricelist) {
		this.grosspricelist = grosspricelist;
	}

	/**
	 * Gets the created.
	 *
	 * @return the created
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	/**
	 * Sets the created.
	 *
	 * @param created the new created
	 */
	public void setCreated(Date created) {
		this.created = created;
	}

	/**
	 * Gets the updated.
	 *
	 * @return the updated
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	/**
	 * Sets the updated.
	 *
	 * @param updated the new updated
	 */
	public void setUpdated(Date updated) {
		this.updated = updated;
	}

}
