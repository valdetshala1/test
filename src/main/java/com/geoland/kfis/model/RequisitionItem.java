package com.geoland.kfis.model;

// Generated Mar 7, 2015 12:39:09 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * RequisitionItem generated by hbm2java.
 */
@Entity
@Table(name = "trequisition_item", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"requisition_id", "item_number" }))
public class RequisitionItem extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The requisition. */
	private Requisition requisition;
	
	/** The uom. */
	private Uom uom;
	
	/** The person by createdby. */
	private Person personByCreatedby;
	
	/** The person by updatedby. */
	private Person personByUpdatedby;
	
	/** The isactive. */
	private String isactive;
	
	/** The status code. */
	private String statusCode;
	
	/** The item name. */
	private String itemName;
	
	/** The unit of issue code. */
	private String unitOfIssueCode;
	
	/** The item number. */
	private String itemNumber;
	
	/** The quantity. */
	private Long quantity;
	
	/** The unit price. */
	private BigDecimal unitPrice;
	
	/** The unit price amount. */
	private BigDecimal unitPriceAmount;
	
	/** The item desc. */
	private String itemDesc;
	
	/** The received date. */
	private Date receivedDate;
	
	/** The accept date. */
	private Date acceptDate;
	
	/** The need by date. */
	private Date needByDate;
	
	/** The created. */
	private Date created;
	
	/** The updated. */
	private Date updated;
	
	/** The textmsg. */
	private String textmsg;

	/**
	 * Instantiates a new requisition item.
	 */
	public RequisitionItem() {
	}

	/**
	 * Instantiates a new requisition item.
	 *
	 * @param requisition the requisition
	 * @param uom the uom
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param isactive the isactive
	 * @param statusCode the status code
	 * @param itemName the item name
	 * @param unitOfIssueCode the unit of issue code
	 * @param quantity the quantity
	 * @param unitPrice the unit price
	 * @param receivedDate the received date
	 * @param acceptDate the accept date
	 * @param created the created
	 * @param updated the updated
	 */
	public RequisitionItem(Requisition requisition, Uom uom,
			Person personByCreatedby, Person personByUpdatedby,
			String isactive, String statusCode, String itemName,
			String unitOfIssueCode, Long quantity, BigDecimal unitPrice,
			Date receivedDate, Date acceptDate, Date created, Date updated) {
		this.requisition = requisition;
		this.uom = uom;
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.isactive = isactive;
		this.statusCode = statusCode;
		this.itemName = itemName;
		this.unitOfIssueCode = unitOfIssueCode;
		this.quantity = quantity;
		this.unitPrice = unitPrice;
		this.receivedDate = receivedDate;
		this.acceptDate = acceptDate;
		this.created = created;
		this.updated = updated;
	}

	/**
	 * Instantiates a new requisition item.
	 *
	 * @param requisition the requisition
	 * @param uom the uom
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param isactive the isactive
	 * @param statusCode the status code
	 * @param itemName the item name
	 * @param unitOfIssueCode the unit of issue code
	 * @param itemNumber the item number
	 * @param quantity the quantity
	 * @param unitPrice the unit price
	 * @param unitPriceAmount the unit price amount
	 * @param itemDesc the item desc
	 * @param receivedDate the received date
	 * @param acceptDate the accept date
	 * @param needByDate the need by date
	 * @param created the created
	 * @param updated the updated
	 * @param textmsg the textmsg
	 */
	public RequisitionItem(Requisition requisition, Uom uom,
			Person personByCreatedby, Person personByUpdatedby,
			String isactive, String statusCode, String itemName,
			String unitOfIssueCode, String itemNumber, Long quantity,
			BigDecimal unitPrice, BigDecimal unitPriceAmount, String itemDesc,
			Date receivedDate, Date acceptDate, Date needByDate, Date created,
			Date updated, String textmsg) {
		this.requisition = requisition;
		this.uom = uom;
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.isactive = isactive;
		this.statusCode = statusCode;
		this.itemName = itemName;
		this.unitOfIssueCode = unitOfIssueCode;
		this.itemNumber = itemNumber;
		this.quantity = quantity;
		this.unitPrice = unitPrice;
		this.unitPriceAmount = unitPriceAmount;
		this.itemDesc = itemDesc;
		this.receivedDate = receivedDate;
		this.acceptDate = acceptDate;
		this.needByDate = needByDate;
		this.created = created;
		this.updated = updated;
		this.textmsg = textmsg;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the requisition.
	 *
	 * @return the requisition
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "requisition_id", nullable = false)
	public Requisition getRequisition() {
		return this.requisition;
	}

	/**
	 * Sets the requisition.
	 *
	 * @param requisition the new requisition
	 */
	public void setRequisition(Requisition requisition) {
		this.requisition = requisition;
	}

	/**
	 * Gets the uom.
	 *
	 * @return the uom
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uom_id", nullable = false)
	public Uom getUom() {
		return this.uom;
	}

	/**
	 * Sets the uom.
	 *
	 * @param uom the new uom
	 */
	public void setUom(Uom uom) {
		this.uom = uom;
	}

	/**
	 * Gets the person by createdby.
	 *
	 * @return the person by createdby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdby", nullable = false)
	public Person getPersonByCreatedby() {
		return this.personByCreatedby;
	}

	/**
	 * Sets the person by createdby.
	 *
	 * @param personByCreatedby the new person by createdby
	 */
	public void setPersonByCreatedby(Person personByCreatedby) {
		this.personByCreatedby = personByCreatedby;
	}

	/**
	 * Gets the person by updatedby.
	 *
	 * @return the person by updatedby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedby", nullable = false)
	public Person getPersonByUpdatedby() {
		return this.personByUpdatedby;
	}

	/**
	 * Sets the person by updatedby.
	 *
	 * @param personByUpdatedby the new person by updatedby
	 */
	public void setPersonByUpdatedby(Person personByUpdatedby) {
		this.personByUpdatedby = personByUpdatedby;
	}

	/**
	 * Gets the isactive.
	 *
	 * @return the isactive
	 */
	@Column(name = "isactive", nullable = false, length = 1)
	public String getIsactive() {
		return this.isactive;
	}

	/**
	 * Sets the isactive.
	 *
	 * @param isactive the new isactive
	 */
	public void setIsactive(String isactive) {
		this.isactive = isactive;
	}

	/**
	 * Gets the status code.
	 *
	 * @return the status code
	 */
	@Column(name = "status_code", nullable = false, length = 2)
	public String getStatusCode() {
		return this.statusCode;
	}

	/**
	 * Sets the status code.
	 *
	 * @param statusCode the new status code
	 */
	public void setStatusCode(String statusCode) {
		this.statusCode = statusCode;
	}

	/**
	 * Gets the item name.
	 *
	 * @return the item name
	 */
	@Column(name = "item_name", nullable = false, length = 100)
	public String getItemName() {
		return this.itemName;
	}

	/**
	 * Sets the item name.
	 *
	 * @param itemName the new item name
	 */
	public void setItemName(String itemName) {
		this.itemName = itemName;
	}

	/**
	 * Gets the unit of issue code.
	 *
	 * @return the unit of issue code
	 */
	@Column(name = "unit_of_issue_code", nullable = false, length = 5)
	public String getUnitOfIssueCode() {
		return this.unitOfIssueCode;
	}

	/**
	 * Sets the unit of issue code.
	 *
	 * @param unitOfIssueCode the new unit of issue code
	 */
	public void setUnitOfIssueCode(String unitOfIssueCode) {
		this.unitOfIssueCode = unitOfIssueCode;
	}

	/**
	 * Gets the item number.
	 *
	 * @return the item number
	 */
	@Column(name = "item_number", length = 100)
	public String getItemNumber() {
		return this.itemNumber;
	}

	/**
	 * Sets the item number.
	 *
	 * @param itemNumber the new item number
	 */
	public void setItemNumber(String itemNumber) {
		this.itemNumber = itemNumber;
	}

	/**
	 * Gets the quantity.
	 *
	 * @return the quantity
	 */
	@Column(name = "quantity", nullable = false)
	public Long getQuantity() {
		return this.quantity;
	}

	/**
	 * Sets the quantity.
	 *
	 * @param quantity the new quantity
	 */
	public void setQuantity(Long quantity) {
		this.quantity = quantity;
	}

	/**
	 * Gets the unit price.
	 *
	 * @return the unit price
	 */
	@Column(name = "unit_price", nullable = false, precision = 20, scale = 5)
	public BigDecimal getUnitPrice() {
		return this.unitPrice;
	}

	/**
	 * Sets the unit price.
	 *
	 * @param unitPrice the new unit price
	 */
	public void setUnitPrice(BigDecimal unitPrice) {
		this.unitPrice = unitPrice;
	}

	/**
	 * Gets the unit price amount.
	 *
	 * @return the unit price amount
	 */
	@Column(name = "unit_price_amount", precision = 20, scale = 5)
	public BigDecimal getUnitPriceAmount() {
		return this.unitPriceAmount;
	}

	/**
	 * Sets the unit price amount.
	 *
	 * @param unitPriceAmount the new unit price amount
	 */
	public void setUnitPriceAmount(BigDecimal unitPriceAmount) {
		this.unitPriceAmount = unitPriceAmount;
	}

	/**
	 * Gets the item desc.
	 *
	 * @return the item desc
	 */
	@Column(name = "item_desc")
	public String getItemDesc() {
		return this.itemDesc;
	}

	/**
	 * Sets the item desc.
	 *
	 * @param itemDesc the new item desc
	 */
	public void setItemDesc(String itemDesc) {
		this.itemDesc = itemDesc;
	}

	/**
	 * Gets the received date.
	 *
	 * @return the received date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "received_date", nullable = false, length = 29)
	public Date getReceivedDate() {
		return this.receivedDate;
	}

	/**
	 * Sets the received date.
	 *
	 * @param receivedDate the new received date
	 */
	public void setReceivedDate(Date receivedDate) {
		this.receivedDate = receivedDate;
	}

	/**
	 * Gets the accept date.
	 *
	 * @return the accept date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "accept_date", nullable = false, length = 29)
	public Date getAcceptDate() {
		return this.acceptDate;
	}

	/**
	 * Sets the accept date.
	 *
	 * @param acceptDate the new accept date
	 */
	public void setAcceptDate(Date acceptDate) {
		this.acceptDate = acceptDate;
	}

	/**
	 * Gets the need by date.
	 *
	 * @return the need by date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "need_by_date", length = 29)
	public Date getNeedByDate() {
		return this.needByDate;
	}

	/**
	 * Sets the need by date.
	 *
	 * @param needByDate the new need by date
	 */
	public void setNeedByDate(Date needByDate) {
		this.needByDate = needByDate;
	}

	/**
	 * Gets the created.
	 *
	 * @return the created
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	/**
	 * Sets the created.
	 *
	 * @param created the new created
	 */
	public void setCreated(Date created) {
		this.created = created;
	}

	/**
	 * Gets the updated.
	 *
	 * @return the updated
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	/**
	 * Sets the updated.
	 *
	 * @param updated the new updated
	 */
	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	/**
	 * Gets the textmsg.
	 *
	 * @return the textmsg
	 */
	@Column(name = "textmsg")
	public String getTextmsg() {
		return this.textmsg;
	}

	/**
	 * Sets the textmsg.
	 *
	 * @param textmsg the new textmsg
	 */
	public void setTextmsg(String textmsg) {
		this.textmsg = textmsg;
	}

}
