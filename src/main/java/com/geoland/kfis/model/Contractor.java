package com.geoland.kfis.model;

// Generated Sep 10, 2015 2:22:23 PM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * Contractor generated by hbm2java.
 */
@Entity
@Table(name = "tfin_contractor", schema = "public")
public class Contractor extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The party. */
	private Party party;
	
	/** The comopany name. */
	private String comopanyName;
	
	/** The fiscal number. */
	private String fiscalNumber;
	
	/** The attachment. */
	private byte[] attachment;
	
	/** The address. */
	private String address;
	
	/** The phone. */
	private String phone;
	
	/** The E mail. */
	private String EMail;
	
	/** The contact person. */
	private String contactPerson;
	
	/** The created time. */
	private Date createdTime;
	
	/** The note. */
	private String note;
	
	/** The business number. */
	private String businessNumber;
	
	/** The stand planting activities. */
	private Set<StandPlantingActivity> standPlantingActivities = new HashSet<StandPlantingActivity>(
			0);
	
	/** The contracts. */
	private Set<Contract> contracts = new HashSet<Contract>(0);

	/**
	 * Instantiates a new contractor.
	 */
	public Contractor() {
	}

	/**
	 * Instantiates a new contractor.
	 *
	 * @param party the party
	 * @param comopanyName the comopany name
	 * @param fiscalNumber the fiscal number
	 * @param createdTime the created time
	 * @param businessNumber the business number
	 */
	public Contractor(Party party, String comopanyName, String fiscalNumber,
			Date createdTime, String businessNumber) {
		this.party = party;
		this.comopanyName = comopanyName;
		this.fiscalNumber = fiscalNumber;
		this.createdTime = createdTime;
		this.businessNumber = businessNumber;
	}

	/**
	 * Instantiates a new contractor.
	 *
	 * @param party the party
	 * @param comopanyName the comopany name
	 * @param fiscalNumber the fiscal number
	 * @param attachment the attachment
	 * @param address the address
	 * @param phone the phone
	 * @param EMail the e mail
	 * @param contactPerson the contact person
	 * @param createdTime the created time
	 * @param note the note
	 * @param businessNumber the business number
	 * @param standPlantingActivities the stand planting activities
	 * @param contracts the contracts
	 */
	public Contractor(Party party, String comopanyName, String fiscalNumber,
			byte[] attachment, String address, String phone, String EMail,
			String contactPerson, Date createdTime, String note,
			String businessNumber,
			Set<StandPlantingActivity> standPlantingActivities,
			Set<Contract> contracts) {
		this.party = party;
		this.comopanyName = comopanyName;
		this.fiscalNumber = fiscalNumber;
		this.attachment = attachment;
		this.address = address;
		this.phone = phone;
		this.EMail = EMail;
		this.contactPerson = contactPerson;
		this.createdTime = createdTime;
		this.note = note;
		this.businessNumber = businessNumber;
		this.standPlantingActivities = standPlantingActivities;
		this.contracts = contracts;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the party.
	 *
	 * @return the party
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Party getParty() {
		return this.party;
	}

	/**
	 * Sets the party.
	 *
	 * @param party the new party
	 */
	public void setParty(Party party) {
		this.party = party;
	}

	/**
	 * Gets the comopany name.
	 *
	 * @return the comopany name
	 */
	@Column(name = "comopany_name", nullable = false, length = 100)
	public String getComopanyName() {
		return this.comopanyName;
	}

	/**
	 * Sets the comopany name.
	 *
	 * @param comopanyName the new comopany name
	 */
	public void setComopanyName(String comopanyName) {
		this.comopanyName = comopanyName;
	}

	/**
	 * Gets the fiscal number.
	 *
	 * @return the fiscal number
	 */
	@Column(name = "fiscal_number", nullable = false, length = 50)
	public String getFiscalNumber() {
		return this.fiscalNumber;
	}

	/**
	 * Sets the fiscal number.
	 *
	 * @param fiscalNumber the new fiscal number
	 */
	public void setFiscalNumber(String fiscalNumber) {
		this.fiscalNumber = fiscalNumber;
	}

	/**
	 * Gets the attachment.
	 *
	 * @return the attachment
	 */
	@Column(name = "attachment")
	public byte[] getAttachment() {
		return this.attachment;
	}

	/**
	 * Sets the attachment.
	 *
	 * @param attachment the new attachment
	 */
	public void setAttachment(byte[] attachment) {
		this.attachment = attachment;
	}

	/**
	 * Gets the address.
	 *
	 * @return the address
	 */
	@Column(name = "address", length = 100)
	public String getAddress() {
		return this.address;
	}

	/**
	 * Sets the address.
	 *
	 * @param address the new address
	 */
	public void setAddress(String address) {
		this.address = address;
	}

	/**
	 * Gets the phone.
	 *
	 * @return the phone
	 */
	@Column(name = "phone", length = 20)
	public String getPhone() {
		return this.phone;
	}

	/**
	 * Sets the phone.
	 *
	 * @param phone the new phone
	 */
	public void setPhone(String phone) {
		this.phone = phone;
	}

	/**
	 * Gets the e mail.
	 *
	 * @return the e mail
	 */
	@Column(name = "e_mail", length = 50)
	public String getEMail() {
		return this.EMail;
	}

	/**
	 * Sets the e mail.
	 *
	 * @param EMail the new e mail
	 */
	public void setEMail(String EMail) {
		this.EMail = EMail;
	}

	/**
	 * Gets the contact person.
	 *
	 * @return the contact person
	 */
	@Column(name = "contact_person", length = 50)
	public String getContactPerson() {
		return this.contactPerson;
	}

	/**
	 * Sets the contact person.
	 *
	 * @param contactPerson the new contact person
	 */
	public void setContactPerson(String contactPerson) {
		this.contactPerson = contactPerson;
	}

	/**
	 * Gets the created time.
	 *
	 * @return the created time
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_time", nullable = false, length = 29)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	/**
	 * Sets the created time.
	 *
	 * @param createdTime the new created time
	 */
	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	/**
	 * Gets the note.
	 *
	 * @return the note
	 */
	@Column(name = "note")
	public String getNote() {
		return this.note;
	}

	/**
	 * Sets the note.
	 *
	 * @param note the new note
	 */
	public void setNote(String note) {
		this.note = note;
	}

	/**
	 * Gets the business number.
	 *
	 * @return the business number
	 */
	@Column(name = "business_number", nullable = false, length = 50)
	public String getBusinessNumber() {
		return this.businessNumber;
	}

	/**
	 * Sets the business number.
	 *
	 * @param businessNumber the new business number
	 */
	public void setBusinessNumber(String businessNumber) {
		this.businessNumber = businessNumber;
	}

	/**
	 * Gets the stand planting activities.
	 *
	 * @return the stand planting activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contractor")
	public Set<StandPlantingActivity> getStandPlantingActivities() {
		return this.standPlantingActivities;
	}

	/**
	 * Sets the stand planting activities.
	 *
	 * @param standPlantingActivities the new stand planting activities
	 */
	public void setStandPlantingActivities(
			Set<StandPlantingActivity> standPlantingActivities) {
		this.standPlantingActivities = standPlantingActivities;
	}

	/**
	 * Gets the contracts.
	 *
	 * @return the contracts
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "contractor")
	public Set<Contract> getContracts() {
		return this.contracts;
	}

	/**
	 * Sets the contracts.
	 *
	 * @param contracts the new contracts
	 */
	public void setContracts(Set<Contract> contracts) {
		this.contracts = contracts;
	}

}
