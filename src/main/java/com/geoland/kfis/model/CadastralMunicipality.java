package com.geoland.kfis.model;

// Generated Oct 19, 2015 3:54:57 PM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import com.vividsolutions.jts.geom.Geometry;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;

// TODO: Auto-generated Javadoc
/**
 * CadastralMunicipality generated by hbm2java.
 */
@Entity
@Table(name = "tgis_cadastral_municipality", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "nr"))
public class CadastralMunicipality extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The region. */
	private Region region;
	
	/** The name. */
	private String name;
	
	/** The name sr. */
	private String nameSr;
	
	/** The name en. */
	private String nameEn;
	
	/** The nr. */
	private Long nr;
	
	/** The code. */
	private String code;
	
	/** The geom. */
	private Geometry theGeom;
	
	/** The fire reports. */
	private Set<FireReport> fireReports = new HashSet<FireReport>(0);
	
	/** The fiskos datas. */
	private Set<FiskosData> fiskosDatas = new HashSet<FiskosData>(0);
	
	/** The annual plannings. */
	private Set<AnnualPlanning> annualPlannings = new HashSet<AnnualPlanning>(0);
	
	/** The roads. */
	private Set<Road> roads = new HashSet<Road>(0);
	
	/** The private requests. */
	private Set<PrivateRequest> privateRequests = new HashSet<PrivateRequest>(0);
	
	/** The protection activities. */
	private Set<ProtectionActivity> protectionActivities = new HashSet<ProtectionActivity>(
			0);
	
	/** The cadastral zones. */
	private Set<CadastralZone> cadastralZones = new HashSet<CadastralZone>(0);
	
	/** The compartments. */
	private Set<Compartment> compartments = new HashSet<Compartment>(0);
	
	/** The dhpet locations. */
	private Set<DhpetLocation> dhpetLocations = new HashSet<DhpetLocation>(0);
	
	/** The inspections. */
	private Set<Inspection> inspections = new HashSet<Inspection>(0);
	
	/** The private activities. */
	private Set<PrivateActivity> privateActivities = new HashSet<PrivateActivity>(
			0);
	
	/** The organisation muns. */
	private Set<OrganisationMun> organisationMuns = new HashSet<OrganisationMun>(
			0);

	/**
	 * Instantiates a new cadastral municipality.
	 */
	public CadastralMunicipality() {
	}

	/**
	 * Instantiates a new cadastral municipality.
	 *
	 * @param region the region
	 * @param name the name
	 * @param nr the nr
	 * @param theGeom the the geom
	 */
	public CadastralMunicipality(Region region, String name, Long nr,
			Geometry theGeom) {
		this.region = region;
		this.name = name;
		this.nr = nr;
		this.theGeom = theGeom;
	}

	/**
	 * Instantiates a new cadastral municipality.
	 *
	 * @param region the region
	 * @param name the name
	 * @param nameSr the name sr
	 * @param nameEn the name en
	 * @param nr the nr
	 * @param code the code
	 * @param theGeom the the geom
	 * @param fireReports the fire reports
	 * @param fiskosDatas the fiskos datas
	 * @param annualPlannings the annual plannings
	 * @param roads the roads
	 * @param privateRequests the private requests
	 * @param protectionActivities the protection activities
	 * @param cadastralZones the cadastral zones
	 * @param compartments the compartments
	 * @param dhpetLocations the dhpet locations
	 * @param inspections the inspections
	 * @param privateActivities the private activities
	 * @param organisationMuns the organisation muns
	 */
	public CadastralMunicipality(Region region, String name, String nameSr,
			String nameEn, Long nr, String code, Geometry theGeom,
			Set<FireReport> fireReports, Set<FiskosData> fiskosDatas,
			Set<AnnualPlanning> annualPlannings, Set<Road> roads,
			Set<PrivateRequest> privateRequests,
			Set<ProtectionActivity> protectionActivities,
			Set<CadastralZone> cadastralZones, Set<Compartment> compartments,
			Set<DhpetLocation> dhpetLocations, Set<Inspection> inspections,
			Set<PrivateActivity> privateActivities,
			Set<OrganisationMun> organisationMuns) {
		this.region = region;
		this.name = name;
		this.nameSr = nameSr;
		this.nameEn = nameEn;
		this.nr = nr;
		this.code = code;
		this.theGeom = theGeom;
		this.fireReports = fireReports;
		this.fiskosDatas = fiskosDatas;
		this.annualPlannings = annualPlannings;
		this.roads = roads;
		this.privateRequests = privateRequests;
		this.protectionActivities = protectionActivities;
		this.cadastralZones = cadastralZones;
		this.compartments = compartments;
		this.dhpetLocations = dhpetLocations;
		this.inspections = inspections;
		this.privateActivities = privateActivities;
		this.organisationMuns = organisationMuns;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the region.
	 *
	 * @return the region
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "region_id", nullable = false)
	public Region getRegion() {
		return this.region;
	}

	/**
	 * Sets the region.
	 *
	 * @param region the new region
	 */
	public void setRegion(Region region) {
		this.region = region;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the name sr.
	 *
	 * @return the name sr
	 */
	@Column(name = "name_sr", length = 100)
	public String getNameSr() {
		return this.nameSr;
	}

	/**
	 * Sets the name sr.
	 *
	 * @param nameSr the new name sr
	 */
	public void setNameSr(String nameSr) {
		this.nameSr = nameSr;
	}

	/**
	 * Gets the name en.
	 *
	 * @return the name en
	 */
	@Column(name = "name_en", length = 100)
	public String getNameEn() {
		return this.nameEn;
	}

	/**
	 * Sets the name en.
	 *
	 * @param nameEn the new name en
	 */
	public void setNameEn(String nameEn) {
		this.nameEn = nameEn;
	}

	/**
	 * Gets the nr.
	 *
	 * @return the nr
	 */
	@Column(name = "nr", unique = true, nullable = false)
	public Long getNr() {
		return this.nr;
	}

	/**
	 * Sets the nr.
	 *
	 * @param nr the new nr
	 */
	public void setNr(Long nr) {
		this.nr = nr;
	}

	/**
	 * Gets the code.
	 *
	 * @return the code
	 */
	@Column(name = "code", length = 3)
	public String getCode() {
		return this.code;
	}

	/**
	 * Sets the code.
	 *
	 * @param code the new code
	 */
	public void setCode(String code) {
		this.code = code;
	}

	/**
	 * Gets the the geom.
	 *
	 * @return the the geom
	 */
	@Column(name = "the_geom", nullable = false)
	@Type(type = "org.hibernate.spatial.GeometryType")
	public Geometry getTheGeom() {
		return this.theGeom;
	}

	/**
	 * Sets the the geom.
	 *
	 * @param theGeom the new the geom
	 */
	public void setTheGeom(Geometry theGeom) {
		this.theGeom = theGeom;
	}

	/**
	 * Gets the fire reports.
	 *
	 * @return the fire reports
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<FireReport> getFireReports() {
		return this.fireReports;
	}

	/**
	 * Sets the fire reports.
	 *
	 * @param fireReports the new fire reports
	 */
	public void setFireReports(Set<FireReport> fireReports) {
		this.fireReports = fireReports;
	}

	/**
	 * Gets the fiskos datas.
	 *
	 * @return the fiskos datas
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<FiskosData> getFiskosDatas() {
		return this.fiskosDatas;
	}

	/**
	 * Sets the fiskos datas.
	 *
	 * @param fiskosDatas the new fiskos datas
	 */
	public void setFiskosDatas(Set<FiskosData> fiskosDatas) {
		this.fiskosDatas = fiskosDatas;
	}

	/**
	 * Gets the annual plannings.
	 *
	 * @return the annual plannings
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<AnnualPlanning> getAnnualPlannings() {
		return this.annualPlannings;
	}

	/**
	 * Sets the annual plannings.
	 *
	 * @param annualPlannings the new annual plannings
	 */
	public void setAnnualPlannings(Set<AnnualPlanning> annualPlannings) {
		this.annualPlannings = annualPlannings;
	}

	/**
	 * Gets the roads.
	 *
	 * @return the roads
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<Road> getRoads() {
		return this.roads;
	}

	/**
	 * Sets the roads.
	 *
	 * @param roads the new roads
	 */
	public void setRoads(Set<Road> roads) {
		this.roads = roads;
	}

	/**
	 * Gets the private requests.
	 *
	 * @return the private requests
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<PrivateRequest> getPrivateRequests() {
		return this.privateRequests;
	}

	/**
	 * Sets the private requests.
	 *
	 * @param privateRequests the new private requests
	 */
	public void setPrivateRequests(Set<PrivateRequest> privateRequests) {
		this.privateRequests = privateRequests;
	}

	/**
	 * Gets the protection activities.
	 *
	 * @return the protection activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<ProtectionActivity> getProtectionActivities() {
		return this.protectionActivities;
	}

	/**
	 * Sets the protection activities.
	 *
	 * @param protectionActivities the new protection activities
	 */
	public void setProtectionActivities(
			Set<ProtectionActivity> protectionActivities) {
		this.protectionActivities = protectionActivities;
	}

	/**
	 * Gets the cadastral zones.
	 *
	 * @return the cadastral zones
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<CadastralZone> getCadastralZones() {
		return this.cadastralZones;
	}

	/**
	 * Sets the cadastral zones.
	 *
	 * @param cadastralZones the new cadastral zones
	 */
	public void setCadastralZones(Set<CadastralZone> cadastralZones) {
		this.cadastralZones = cadastralZones;
	}

	/**
	 * Gets the compartments.
	 *
	 * @return the compartments
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<Compartment> getCompartments() {
		return this.compartments;
	}

	/**
	 * Sets the compartments.
	 *
	 * @param compartments the new compartments
	 */
	public void setCompartments(Set<Compartment> compartments) {
		this.compartments = compartments;
	}

	/**
	 * Gets the dhpet locations.
	 *
	 * @return the dhpet locations
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<DhpetLocation> getDhpetLocations() {
		return this.dhpetLocations;
	}

	/**
	 * Sets the dhpet locations.
	 *
	 * @param dhpetLocations the new dhpet locations
	 */
	public void setDhpetLocations(Set<DhpetLocation> dhpetLocations) {
		this.dhpetLocations = dhpetLocations;
	}

	/**
	 * Gets the inspections.
	 *
	 * @return the inspections
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<Inspection> getInspections() {
		return this.inspections;
	}

	/**
	 * Sets the inspections.
	 *
	 * @param inspections the new inspections
	 */
	public void setInspections(Set<Inspection> inspections) {
		this.inspections = inspections;
	}

	/**
	 * Gets the private activities.
	 *
	 * @return the private activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<PrivateActivity> getPrivateActivities() {
		return this.privateActivities;
	}

	/**
	 * Sets the private activities.
	 *
	 * @param privateActivities the new private activities
	 */
	public void setPrivateActivities(Set<PrivateActivity> privateActivities) {
		this.privateActivities = privateActivities;
	}

	/**
	 * Gets the organisation muns.
	 *
	 * @return the organisation muns
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cadastralMunicipality")
	public Set<OrganisationMun> getOrganisationMuns() {
		return this.organisationMuns;
	}

	/**
	 * Sets the organisation muns.
	 *
	 * @param organisationMuns the new organisation muns
	 */
	public void setOrganisationMuns(Set<OrganisationMun> organisationMuns) {
		this.organisationMuns = organisationMuns;
	}

}
