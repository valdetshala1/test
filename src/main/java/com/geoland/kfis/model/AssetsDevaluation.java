package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * AssetsDevaluation generated by hbm2java.
 */
@Entity
@Table(name = "tassets_devaluation", schema = "public")
public class AssetsDevaluation extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The employee. */
	private Employee employee;
	
	/** The assets. */
	private Assets assets;
	
	/** The year of deval. */
	private Long yearOfDeval;
	
	/** The net after deval year. */
	private Double netAfterDevalYear;
	
	/** The created date. */
	private Date createdDate;

	/**
	 * Instantiates a new assets devaluation.
	 */
	public AssetsDevaluation() {
	}

	/**
	 * Instantiates a new assets devaluation.
	 *
	 * @param employee the employee
	 * @param assets the assets
	 * @param yearOfDeval the year of deval
	 * @param createdDate the created date
	 */
	public AssetsDevaluation(Employee employee, Assets assets,
			Long yearOfDeval, Date createdDate) {
		this.employee = employee;
		this.assets = assets;
		this.yearOfDeval = yearOfDeval;
		this.createdDate = createdDate;
	}

	/**
	 * Instantiates a new assets devaluation.
	 *
	 * @param employee the employee
	 * @param assets the assets
	 * @param yearOfDeval the year of deval
	 * @param netAfterDevalYear the net after deval year
	 * @param createdDate the created date
	 */
	public AssetsDevaluation(Employee employee, Assets assets,
			Long yearOfDeval, Double netAfterDevalYear, Date createdDate) {
		this.employee = employee;
		this.assets = assets;
		this.yearOfDeval = yearOfDeval;
		this.netAfterDevalYear = netAfterDevalYear;
		this.createdDate = createdDate;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the employee.
	 *
	 * @return the employee
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	/**
	 * Sets the employee.
	 *
	 * @param employee the new employee
	 */
	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	/**
	 * Gets the assets.
	 *
	 * @return the assets
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "asset_id", nullable = false)
	public Assets getAssets() {
		return this.assets;
	}

	/**
	 * Sets the assets.
	 *
	 * @param assets the new assets
	 */
	public void setAssets(Assets assets) {
		this.assets = assets;
	}

	/**
	 * Gets the year of deval.
	 *
	 * @return the year of deval
	 */
	@Column(name = "year_of_deval", nullable = false)
	public Long getYearOfDeval() {
		return this.yearOfDeval;
	}

	/**
	 * Sets the year of deval.
	 *
	 * @param yearOfDeval the new year of deval
	 */
	public void setYearOfDeval(Long yearOfDeval) {
		this.yearOfDeval = yearOfDeval;
	}

	/**
	 * Gets the net after deval year.
	 *
	 * @return the net after deval year
	 */
	@Column(name = "net_after_deval_year", precision = 17, scale = 17)
	public Double getNetAfterDevalYear() {
		return this.netAfterDevalYear;
	}

	/**
	 * Sets the net after deval year.
	 *
	 * @param netAfterDevalYear the new net after deval year
	 */
	public void setNetAfterDevalYear(Double netAfterDevalYear) {
		this.netAfterDevalYear = netAfterDevalYear;
	}

	/**
	 * Gets the created date.
	 *
	 * @return the created date
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", nullable = false, length = 13)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	/**
	 * Sets the created date.
	 *
	 * @param createdDate the new created date
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

}
