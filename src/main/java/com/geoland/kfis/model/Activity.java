package com.geoland.kfis.model;

// Generated Jan 6, 2016 2:54:04 PM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;
import org.hibernate.spatial.GeometryType;
import com.geoland.kfis.persistence.hibernate.usertypes.Activityfield;
import com.vividsolutions.jts.geom.Geometry;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;

// TODO: Auto-generated Javadoc
/**
 * Activity generated by hbm2java.
 */
@Entity
@Table(name = "tfrm_activity", schema = "public")
@TypeDef(name = "geometry", typeClass = GeometryType.class)
public class Activity extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The annual planning. */
	private AnnualPlanning annualPlanning;
	
	/** The person. */
	private Person person;
	
	/** The activity domain. */
	private ActivityDomain activityDomain;
	
	/** The activity no. */
	private String activityNo;
	
	/** The activity field. */
	private Activityfield activityField;
	
	/** The operation level. */
	private Short operationLevel;
	
	/** The planed geom. */
	private Geometry planedGeom;
	
	/** The implemented geom. */
	private Geometry implementedGeom;
	
	/** The created date. */
	private Date createdDate;
	
	/** The qr code. */
	private byte[] qrCode;
	
	/** The road activities. */
	private Set<RoadActivity> roadActivities = new HashSet<RoadActivity>(0);
	
	/** The seed activities. */
	private Set<SeedActivity> seedActivities = new HashSet<SeedActivity>(0);
	
	/** The private activities. */
	private Set<PrivateActivity> privateActivities = new HashSet<PrivateActivity>(
			0);
	
	/** The private requests. */
	private Set<PrivateRequest> privateRequests = new HashSet<PrivateRequest>(0);
	
	/** The protection activities. */
	private Set<ProtectionActivity> protectionActivities = new HashSet<ProtectionActivity>(
			0);
	
	/** The stand silviculture activities. */
	private Set<StandSilvicultureActivity> standSilvicultureActivities = new HashSet<StandSilvicultureActivity>(
			0);
	
	/** The stand planting activities. */
	private Set<StandPlantingActivity> standPlantingActivities = new HashSet<StandPlantingActivity>(
			0);
	
	/** The activity statuses. */
	private Set<ActivityStatus> activityStatuses = new HashSet<ActivityStatus>(
			0);
	
	/** The stand harvest activities. */
	private Set<StandHarvestActivity> standHarvestActivities = new HashSet<StandHarvestActivity>(
			0);

	/**
	 * Instantiates a new activity.
	 */
	public Activity() {
	}

	/**
	 * Instantiates a new activity.
	 *
	 * @param annualPlanning the annual planning
	 * @param person the person
	 * @param activityDomain the activity domain
	 * @param activityNo the activity no
	 * @param activityField the activity field
	 * @param operationLevel the operation level
	 * @param createdDate the created date
	 * @param qrCode the qr code
	 */
	public Activity(AnnualPlanning annualPlanning, Person person,
			ActivityDomain activityDomain, String activityNo,
			Activityfield activityField, Short operationLevel,
			Date createdDate, byte[] qrCode) {
		this.annualPlanning = annualPlanning;
		this.person = person;
		this.activityDomain = activityDomain;
		this.activityNo = activityNo;
		this.activityField = activityField;
		this.operationLevel = operationLevel;
		this.createdDate = createdDate;
		this.qrCode = qrCode;
	}

	/**
	 * Instantiates a new activity.
	 *
	 * @param annualPlanning the annual planning
	 * @param person the person
	 * @param activityDomain the activity domain
	 * @param activityNo the activity no
	 * @param activityField the activity field
	 * @param operationLevel the operation level
	 * @param planedGeom the planed geom
	 * @param implementedGeom the implemented geom
	 * @param createdDate the created date
	 * @param qrCode the qr code
	 * @param roadActivities the road activities
	 * @param seedActivities the seed activities
	 * @param privateActivities the private activities
	 * @param privateRequests the private requests
	 * @param protectionActivities the protection activities
	 * @param standSilvicultureActivities the stand silviculture activities
	 * @param standPlantingActivities the stand planting activities
	 * @param activityStatuses the activity statuses
	 * @param standHarvestActivities the stand harvest activities
	 */
	public Activity(AnnualPlanning annualPlanning, Person person,
			ActivityDomain activityDomain, String activityNo,
			Activityfield activityField, Short operationLevel,
			Geometry planedGeom, Geometry implementedGeom, Date createdDate,
			byte[] qrCode, Set<RoadActivity> roadActivities,
			Set<SeedActivity> seedActivities,
			Set<PrivateActivity> privateActivities,
			Set<PrivateRequest> privateRequests,
			Set<ProtectionActivity> protectionActivities,
			Set<StandSilvicultureActivity> standSilvicultureActivities,
			Set<StandPlantingActivity> standPlantingActivities,
			Set<ActivityStatus> activityStatuses,
			Set<StandHarvestActivity> standHarvestActivities) {
		this.annualPlanning = annualPlanning;
		this.person = person;
		this.activityDomain = activityDomain;
		this.activityNo = activityNo;
		this.activityField = activityField;
		this.operationLevel = operationLevel;
		this.planedGeom = planedGeom;
		this.implementedGeom = implementedGeom;
		this.createdDate = createdDate;
		this.qrCode = qrCode;
		this.roadActivities = roadActivities;
		this.seedActivities = seedActivities;
		this.privateActivities = privateActivities;
		this.privateRequests = privateRequests;
		this.protectionActivities = protectionActivities;
		this.standSilvicultureActivities = standSilvicultureActivities;
		this.standPlantingActivities = standPlantingActivities;
		this.activityStatuses = activityStatuses;
		this.standHarvestActivities = standHarvestActivities;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the annual planning.
	 *
	 * @return the annual planning
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "annual_planning_id", nullable = false)
	public AnnualPlanning getAnnualPlanning() {
		return this.annualPlanning;
	}

	/**
	 * Sets the annual planning.
	 *
	 * @param annualPlanning the new annual planning
	 */
	public void setAnnualPlanning(AnnualPlanning annualPlanning) {
		this.annualPlanning = annualPlanning;
	}

	/**
	 * Gets the person.
	 *
	 * @return the person
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	/**
	 * Sets the person.
	 *
	 * @param person the new person
	 */
	public void setPerson(Person person) {
		this.person = person;
	}

	/**
	 * Gets the activity domain.
	 *
	 * @return the activity domain
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "activity_domain_id", nullable = false)
	public ActivityDomain getActivityDomain() {
		return this.activityDomain;
	}

	/**
	 * Sets the activity domain.
	 *
	 * @param activityDomain the new activity domain
	 */
	public void setActivityDomain(ActivityDomain activityDomain) {
		this.activityDomain = activityDomain;
	}

	/**
	 * Gets the activity no.
	 *
	 * @return the activity no
	 */
	@Column(name = "activity_no", nullable = false, length = 30)
	public String getActivityNo() {
		return this.activityNo;
	}

	/**
	 * Sets the activity no.
	 *
	 * @param activityNo the new activity no
	 */
	public void setActivityNo(String activityNo) {
		this.activityNo = activityNo;
	}

	/**
	 * Gets the activity field.
	 *
	 * @return the activity field
	 */
	@Column(name = "activity_field", nullable = false, length = 3)
	@Type(type = "com.geoland.kfis.persistence.hibernate.usertypes.ActivityfieldUserType")
	public Activityfield getActivityField() {
		return this.activityField;
	}

	/**
	 * Sets the activity field.
	 *
	 * @param activityField the new activity field
	 */
	public void setActivityField(Activityfield activityField) {
		this.activityField = activityField;
	}

	/**
	 * Gets the operation level.
	 *
	 * @return the operation level
	 */
	@Column(name = "operation_level", nullable = false)
	public Short getOperationLevel() {
		return this.operationLevel;
	}

	/**
	 * Sets the operation level.
	 *
	 * @param operationLevel the new operation level
	 */
	public void setOperationLevel(Short operationLevel) {
		this.operationLevel = operationLevel;
	}

	/**
	 * Gets the planed geom.
	 *
	 * @return the planed geom
	 */
	@Column(name = "planed_geom")
	@Type(type = "org.hibernate.spatial.GeometryType")
	public Geometry getPlanedGeom() {
		return this.planedGeom;
	}

	/**
	 * Sets the planed geom.
	 *
	 * @param planedGeom the new planed geom
	 */
	public void setPlanedGeom(Geometry planedGeom) {
		this.planedGeom = planedGeom;
	}

	/**
	 * Gets the implemented geom.
	 *
	 * @return the implemented geom
	 */
	@Column(name = "implemented_geom")
	@Type(type = "org.hibernate.spatial.GeometryType")
	public Geometry getImplementedGeom() {
		return this.implementedGeom;
	}

	/**
	 * Sets the implemented geom.
	 *
	 * @param implementedGeom the new implemented geom
	 */
	public void setImplementedGeom(Geometry implementedGeom) {
		this.implementedGeom = implementedGeom;
	}

	/**
	 * Gets the created date.
	 *
	 * @return the created date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	/**
	 * Sets the created date.
	 *
	 * @param createdDate the new created date
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	/**
	 * Gets the qr code.
	 *
	 * @return the qr code
	 */
	@Column(name = "qr_code", nullable = false)
	public byte[] getQrCode() {
		return this.qrCode;
	}

	/**
	 * Sets the qr code.
	 *
	 * @param qrCode the new qr code
	 */
	public void setQrCode(byte[] qrCode) {
		this.qrCode = qrCode;
	}

	/**
	 * Gets the road activities.
	 *
	 * @return the road activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<RoadActivity> getRoadActivities() {
		return this.roadActivities;
	}

	/**
	 * Sets the road activities.
	 *
	 * @param roadActivities the new road activities
	 */
	public void setRoadActivities(Set<RoadActivity> roadActivities) {
		this.roadActivities = roadActivities;
	}

	/**
	 * Gets the seed activities.
	 *
	 * @return the seed activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<SeedActivity> getSeedActivities() {
		return this.seedActivities;
	}

	/**
	 * Sets the seed activities.
	 *
	 * @param seedActivities the new seed activities
	 */
	public void setSeedActivities(Set<SeedActivity> seedActivities) {
		this.seedActivities = seedActivities;
	}

	/**
	 * Gets the private activities.
	 *
	 * @return the private activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<PrivateActivity> getPrivateActivities() {
		return this.privateActivities;
	}

	/**
	 * Sets the private activities.
	 *
	 * @param privateActivities the new private activities
	 */
	public void setPrivateActivities(Set<PrivateActivity> privateActivities) {
		this.privateActivities = privateActivities;
	}

	/**
	 * Gets the private requests.
	 *
	 * @return the private requests
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<PrivateRequest> getPrivateRequests() {
		return this.privateRequests;
	}

	/**
	 * Sets the private requests.
	 *
	 * @param privateRequests the new private requests
	 */
	public void setPrivateRequests(Set<PrivateRequest> privateRequests) {
		this.privateRequests = privateRequests;
	}

	/**
	 * Gets the protection activities.
	 *
	 * @return the protection activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<ProtectionActivity> getProtectionActivities() {
		return this.protectionActivities;
	}

	/**
	 * Sets the protection activities.
	 *
	 * @param protectionActivities the new protection activities
	 */
	public void setProtectionActivities(
			Set<ProtectionActivity> protectionActivities) {
		this.protectionActivities = protectionActivities;
	}

	/**
	 * Gets the stand silviculture activities.
	 *
	 * @return the stand silviculture activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<StandSilvicultureActivity> getStandSilvicultureActivities() {
		return this.standSilvicultureActivities;
	}

	/**
	 * Sets the stand silviculture activities.
	 *
	 * @param standSilvicultureActivities the new stand silviculture activities
	 */
	public void setStandSilvicultureActivities(
			Set<StandSilvicultureActivity> standSilvicultureActivities) {
		this.standSilvicultureActivities = standSilvicultureActivities;
	}

	/**
	 * Gets the stand planting activities.
	 *
	 * @return the stand planting activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<StandPlantingActivity> getStandPlantingActivities() {
		return this.standPlantingActivities;
	}

	/**
	 * Sets the stand planting activities.
	 *
	 * @param standPlantingActivities the new stand planting activities
	 */
	public void setStandPlantingActivities(
			Set<StandPlantingActivity> standPlantingActivities) {
		this.standPlantingActivities = standPlantingActivities;
	}

	/**
	 * Gets the activity statuses.
	 *
	 * @return the activity statuses
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<ActivityStatus> getActivityStatuses() {
		return this.activityStatuses;
	}

	/**
	 * Sets the activity statuses.
	 *
	 * @param activityStatuses the new activity statuses
	 */
	public void setActivityStatuses(Set<ActivityStatus> activityStatuses) {
		this.activityStatuses = activityStatuses;
	}

	/**
	 * Gets the stand harvest activities.
	 *
	 * @return the stand harvest activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "activity")
	public Set<StandHarvestActivity> getStandHarvestActivities() {
		return this.standHarvestActivities;
	}

	/**
	 * Sets the stand harvest activities.
	 *
	 * @param standHarvestActivities the new stand harvest activities
	 */
	public void setStandHarvestActivities(
			Set<StandHarvestActivity> standHarvestActivities) {
		this.standHarvestActivities = standHarvestActivities;
	}

}
