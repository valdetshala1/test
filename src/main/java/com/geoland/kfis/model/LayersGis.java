package com.geoland.kfis.model;
// Generated Nov 17, 2017 10:17:28 AM by Hibernate Tools 4.0.1.Final

import com.geoland.framework.persistence.base.*;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * LayersGis generated by hbm2java.
 */
@Entity
@Table(name = "tlayers_gis", schema = "public")
public class LayersGis extends AbstractPersistentObject implements java.io.Serializable {

	/** The id. */
	private Long id;
	
	/** The layers gis. */
	private LayersGis layersGis;
	
	/** The url. */
	private String url;
	
	/** The service type. */
	private String serviceType;
	
	/** The featurens. */
	private String featurens;
	
	/** The store. */
	private String store;
	
	/** The feature type layer. */
	private String featureTypeLayer;
	
	/** The is base layer. */
	private Boolean isBaseLayer;
	
	/** The min scale. */
	private Long minScale;
	
	/** The srs name. */
	private String srsName;
	
	/** The outputformat. */
	private String outputformat;
	
	/** The tiled. */
	private Boolean tiled;
	
	/** The transparent. */
	private Boolean transparent;
	
	/** The visibility. */
	private Boolean visibility;
	
	/** The tilesize. */
	private Long tilesize;
	
	/** The module. */
	private String module;
	
	/** The sort. */
	private Long sort;
	
	/** The layers gises. */
	private Set<LayersGis> layersGises = new HashSet<LayersGis>(0);
   
	/**
	 * Instantiates a new layers gis.
	 */
	public LayersGis() {
	}

	/**
	 * Instantiates a new layers gis.
	 *
	 * @param featureTypeLayer the feature type layer
	 */
	public LayersGis(String featureTypeLayer) {
		this.featureTypeLayer = featureTypeLayer;
	}

	/**
	 * Instantiates a new layers gis.
	 *
	 * @param layersGis the layers gis
	 * @param url the url
	 * @param serviceType the service type
	 * @param featurens the featurens
	 * @param store the store
	 * @param featureTypeLayer the feature type layer
	 * @param isBaseLayer the is base layer
	 * @param minScale the min scale
	 * @param srsName the srs name
	 * @param outputformat the outputformat
	 * @param tiled the tiled
	 * @param transparent the transparent
	 * @param visibility the visibility
	 * @param tilesize the tilesize
	 * @param module the module
	 * @param sort the sort
	 * @param layersGises the layers gises
	 */
	public LayersGis(LayersGis layersGis, String url, String serviceType, String featurens, String store,
			String featureTypeLayer, Boolean isBaseLayer, Long minScale, String srsName, String outputformat,
			Boolean tiled, Boolean transparent, Boolean visibility, Long tilesize, String module, Long sort,
			Set<LayersGis> layersGises) {
		this.layersGis = layersGis;
		this.url = url;
		this.serviceType = serviceType;
		this.featurens = featurens;
		this.store = store;
		this.featureTypeLayer = featureTypeLayer;
		this.isBaseLayer = isBaseLayer;
		this.minScale = minScale;
		this.srsName = srsName;
		this.outputformat = outputformat;
		this.tiled = tiled;
		this.transparent = transparent;
		this.visibility = visibility;
		this.tilesize = tilesize;
		this.module = module;
		this.sort = sort;
		this.layersGises = layersGises;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the layers gis.
	 *
	 * @return the layers gis
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_id")
	public LayersGis getLayersGis() {
		return this.layersGis;
	}

	/**
	 * Sets the layers gis.
	 *
	 * @param layersGis the new layers gis
	 */
	public void setLayersGis(LayersGis layersGis) {
		this.layersGis = layersGis;
	}

	/**
	 * Gets the url.
	 *
	 * @return the url
	 */
	@Column(name = "url")
	public String getUrl() {
		return this.url;
	}

	/**
	 * Sets the url.
	 *
	 * @param url the new url
	 */
	public void setUrl(String url) {
		this.url = url;
	}

	/**
	 * Gets the service type.
	 *
	 * @return the service type
	 */
	@Column(name = "service_type", length = 3)
	public String getServiceType() {
		return this.serviceType;
	}

	/**
	 * Sets the service type.
	 *
	 * @param serviceType the new service type
	 */
	public void setServiceType(String serviceType) {
		this.serviceType = serviceType;
	}

	/**
	 * Gets the featurens.
	 *
	 * @return the featurens
	 */
	@Column(name = "featurens", length = 250)
	public String getFeaturens() {
		return this.featurens;
	}

	/**
	 * Sets the featurens.
	 *
	 * @param featurens the new featurens
	 */
	public void setFeaturens(String featurens) {
		this.featurens = featurens;
	}

	/**
	 * Gets the store.
	 *
	 * @return the store
	 */
	@Column(name = "store", length = 100)
	public String getStore() {
		return this.store;
	}

	/**
	 * Sets the store.
	 *
	 * @param store the new store
	 */
	public void setStore(String store) {
		this.store = store;
	}

	/**
	 * Gets the feature type layer.
	 *
	 * @return the feature type layer
	 */
	@Column(name = "feature_type_layer", nullable = false, length = 100)
	public String getFeatureTypeLayer() {
		return this.featureTypeLayer;
	}

	/**
	 * Sets the feature type layer.
	 *
	 * @param featureTypeLayer the new feature type layer
	 */
	public void setFeatureTypeLayer(String featureTypeLayer) {
		this.featureTypeLayer = featureTypeLayer;
	}

	/**
	 * Gets the checks if is base layer.
	 *
	 * @return the checks if is base layer
	 */
	@Column(name = "is_base_layer")
	public Boolean getIsBaseLayer() {
		return this.isBaseLayer;
	}

	/**
	 * Sets the checks if is base layer.
	 *
	 * @param isBaseLayer the new checks if is base layer
	 */
	public void setIsBaseLayer(Boolean isBaseLayer) {
		this.isBaseLayer = isBaseLayer;
	}

	/**
	 * Gets the min scale.
	 *
	 * @return the min scale
	 */
	@Column(name = "min_scale")
	public Long getMinScale() {
		return this.minScale;
	}

	/**
	 * Sets the min scale.
	 *
	 * @param minScale the new min scale
	 */
	public void setMinScale(Long minScale) {
		this.minScale = minScale;
	}

	/**
	 * Gets the srs name.
	 *
	 * @return the srs name
	 */
	@Column(name = "srs_name", length = 100)
	public String getSrsName() {
		return this.srsName;
	}

	/**
	 * Sets the srs name.
	 *
	 * @param srsName the new srs name
	 */
	public void setSrsName(String srsName) {
		this.srsName = srsName;
	}

	/**
	 * Gets the outputformat.
	 *
	 * @return the outputformat
	 */
	@Column(name = "outputformat", length = 10)
	public String getOutputformat() {
		return this.outputformat;
	}

	/**
	 * Sets the outputformat.
	 *
	 * @param outputformat the new outputformat
	 */
	public void setOutputformat(String outputformat) {
		this.outputformat = outputformat;
	}

	/**
	 * Gets the tiled.
	 *
	 * @return the tiled
	 */
	@Column(name = "tiled")
	public Boolean getTiled() {
		return this.tiled;
	}

	/**
	 * Sets the tiled.
	 *
	 * @param tiled the new tiled
	 */
	public void setTiled(Boolean tiled) {
		this.tiled = tiled;
	}

	/**
	 * Gets the transparent.
	 *
	 * @return the transparent
	 */
	@Column(name = "transparent")
	public Boolean getTransparent() {
		return this.transparent;
	}

	/**
	 * Sets the transparent.
	 *
	 * @param transparent the new transparent
	 */
	public void setTransparent(Boolean transparent) {
		this.transparent = transparent;
	}

	/**
	 * Gets the visibility.
	 *
	 * @return the visibility
	 */
	@Column(name = "visibility")
	public Boolean getVisibility() {
		return this.visibility;
	}

	/**
	 * Sets the visibility.
	 *
	 * @param visibility the new visibility
	 */
	public void setVisibility(Boolean visibility) {
		this.visibility = visibility;
	}

	/**
	 * Gets the tilesize.
	 *
	 * @return the tilesize
	 */
	@Column(name = "tilesize")
	public Long getTilesize() {
		return this.tilesize;
	}

	/**
	 * Sets the tilesize.
	 *
	 * @param tilesize the new tilesize
	 */
	public void setTilesize(Long tilesize) {
		this.tilesize = tilesize;
	}

	/**
	 * Gets the module.
	 *
	 * @return the module
	 */
	@Column(name = "module", length = 250)
	public String getModule() {
		return this.module;
	}

	/**
	 * Sets the module.
	 *
	 * @param module the new module
	 */
	public void setModule(String module) {
		this.module = module;
	}

	/**
	 * Gets the sort.
	 *
	 * @return the sort
	 */
	@Column(name = "sort")
	public Long getSort() {
		return this.sort;
	}

	/**
	 * Sets the sort.
	 *
	 * @param sort the new sort
	 */
	public void setSort(Long sort) {
		this.sort = sort;
	}

	/**
	 * Gets the layers gises.
	 *
	 * @return the layers gises
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "layersGis")
	public Set<LayersGis> getLayersGises() {
		return this.layersGises;
	}

	/**
	 * Sets the layers gises.
	 *
	 * @param layersGises the new layers gises
	 */
	public void setLayersGises(Set<LayersGis> layersGises) {
		this.layersGises = layersGises;
	}

}
