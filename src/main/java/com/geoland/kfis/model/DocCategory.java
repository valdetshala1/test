package com.geoland.kfis.model;

// Generated Mar 27, 2015 10:47:12 AM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * DocCategory generated by hbm2java.
 */
@Entity
@Table(name = "tdoc_category", schema = "public")
public class DocCategory extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The person by createdby. */
	private Person personByCreatedby;
	
	/** The person by updatedby. */
	private Person personByUpdatedby;
	
	/** The isactive. */
	private String isactive;
	
	/** The created. */
	private Date created;
	
	/** The updated. */
	private Date updated;
	
	/** The name. */
	private String name;
	
	/** The name en. */
	private String nameEn;
	
	/** The name sr. */
	private String nameSr;
	
	/** The description. */
	private String description;
	
	/** The categorytype. */
	private String categorytype;
	
	/** The isdefault. */
	private String isdefault;
	
	/** The docbasetype. */
	private String docbasetype;
	
	/** The doc types. */
	private Set<DocType> docTypes = new HashSet<DocType>(0);

	/**
	 * Instantiates a new doc category.
	 */
	public DocCategory() {
	}

	/**
	 * Instantiates a new doc category.
	 *
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param isactive the isactive
	 * @param created the created
	 * @param updated the updated
	 * @param name the name
	 * @param nameEn the name en
	 * @param categorytype the categorytype
	 * @param isdefault the isdefault
	 */
	public DocCategory(Person personByCreatedby, Person personByUpdatedby,
			String isactive, Date created, Date updated, String name,
			String nameEn, String categorytype, String isdefault) {
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.isactive = isactive;
		this.created = created;
		this.updated = updated;
		this.name = name;
		this.nameEn = nameEn;
		this.categorytype = categorytype;
		this.isdefault = isdefault;
	}

	/**
	 * Instantiates a new doc category.
	 *
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param isactive the isactive
	 * @param created the created
	 * @param updated the updated
	 * @param name the name
	 * @param nameEn the name en
	 * @param nameSr the name sr
	 * @param description the description
	 * @param categorytype the categorytype
	 * @param isdefault the isdefault
	 * @param docbasetype the docbasetype
	 * @param docTypes the doc types
	 */
	public DocCategory(Person personByCreatedby, Person personByUpdatedby,
			String isactive, Date created, Date updated, String name,
			String nameEn, String nameSr, String description,
			String categorytype, String isdefault, String docbasetype,
			Set<DocType> docTypes) {
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.isactive = isactive;
		this.created = created;
		this.updated = updated;
		this.name = name;
		this.nameEn = nameEn;
		this.nameSr = nameSr;
		this.description = description;
		this.categorytype = categorytype;
		this.isdefault = isdefault;
		this.docbasetype = docbasetype;
		this.docTypes = docTypes;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the person by createdby.
	 *
	 * @return the person by createdby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdby", nullable = false)
	public Person getPersonByCreatedby() {
		return this.personByCreatedby;
	}

	/**
	 * Sets the person by createdby.
	 *
	 * @param personByCreatedby the new person by createdby
	 */
	public void setPersonByCreatedby(Person personByCreatedby) {
		this.personByCreatedby = personByCreatedby;
	}

	/**
	 * Gets the person by updatedby.
	 *
	 * @return the person by updatedby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedby", nullable = false)
	public Person getPersonByUpdatedby() {
		return this.personByUpdatedby;
	}

	/**
	 * Sets the person by updatedby.
	 *
	 * @param personByUpdatedby the new person by updatedby
	 */
	public void setPersonByUpdatedby(Person personByUpdatedby) {
		this.personByUpdatedby = personByUpdatedby;
	}

	/**
	 * Gets the isactive.
	 *
	 * @return the isactive
	 */
	@Column(name = "isactive", nullable = false, length = 1)
	public String getIsactive() {
		return this.isactive;
	}

	/**
	 * Sets the isactive.
	 *
	 * @param isactive the new isactive
	 */
	public void setIsactive(String isactive) {
		this.isactive = isactive;
	}

	/**
	 * Gets the created.
	 *
	 * @return the created
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	/**
	 * Sets the created.
	 *
	 * @param created the new created
	 */
	public void setCreated(Date created) {
		this.created = created;
	}

	/**
	 * Gets the updated.
	 *
	 * @return the updated
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	/**
	 * Sets the updated.
	 *
	 * @param updated the new updated
	 */
	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false, length = 60)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the name en.
	 *
	 * @return the name en
	 */
	@Column(name = "name_en", nullable = false, length = 60)
	public String getNameEn() {
		return this.nameEn;
	}

	/**
	 * Sets the name en.
	 *
	 * @param nameEn the new name en
	 */
	public void setNameEn(String nameEn) {
		this.nameEn = nameEn;
	}

	/**
	 * Gets the name sr.
	 *
	 * @return the name sr
	 */
	@Column(name = "name_sr", length = 60)
	public String getNameSr() {
		return this.nameSr;
	}

	/**
	 * Sets the name sr.
	 *
	 * @param nameSr the new name sr
	 */
	public void setNameSr(String nameSr) {
		this.nameSr = nameSr;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the categorytype.
	 *
	 * @return the categorytype
	 */
	@Column(name = "categorytype", nullable = false, length = 60)
	public String getCategorytype() {
		return this.categorytype;
	}

	/**
	 * Sets the categorytype.
	 *
	 * @param categorytype the new categorytype
	 */
	public void setCategorytype(String categorytype) {
		this.categorytype = categorytype;
	}

	/**
	 * Gets the isdefault.
	 *
	 * @return the isdefault
	 */
	@Column(name = "isdefault", nullable = false, length = 1)
	public String getIsdefault() {
		return this.isdefault;
	}

	/**
	 * Sets the isdefault.
	 *
	 * @param isdefault the new isdefault
	 */
	public void setIsdefault(String isdefault) {
		this.isdefault = isdefault;
	}

	/**
	 * Gets the docbasetype.
	 *
	 * @return the docbasetype
	 */
	@Column(name = "docbasetype", length = 60)
	public String getDocbasetype() {
		return this.docbasetype;
	}

	/**
	 * Sets the docbasetype.
	 *
	 * @param docbasetype the new docbasetype
	 */
	public void setDocbasetype(String docbasetype) {
		this.docbasetype = docbasetype;
	}

	/**
	 * Gets the doc types.
	 *
	 * @return the doc types
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "docCategory")
	public Set<DocType> getDocTypes() {
		return this.docTypes;
	}

	/**
	 * Sets the doc types.
	 *
	 * @param docTypes the new doc types
	 */
	public void setDocTypes(Set<DocType> docTypes) {
		this.docTypes = docTypes;
	}

}
