package com.geoland.kfis.model;

// Generated May 5, 2015 10:02:12 AM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * Assets generated by hbm2java.
 */
@Entity
@Table(name = "tassets", schema = "public")
public class Assets extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The employee. */
	private Employee employee;
	
	/** The organisation. */
	private Organisation organisation;
	
	/** The barcode. */
	private String barcode;
	
	/** The location. */
	private String location;
	
	/** The in function. */
	private boolean inFunction;
	
	/** The damaged. */
	private Boolean damaged;
	
	/** The date of purchase. */
	private Date dateOfPurchase;
	
	/** The quantity. */
	private Double quantity;
	
	/** The purchase value. */
	private Double purchaseValue;
	
	/** The purchase total. */
	private Double purchaseTotal;
	
	/** The amortization grade. */
	private Double amortizationGrade;
	
	/** The net after deval year. */
	private Double netAfterDevalYear;
	
	/** The serial no. */
	private String serialNo;
	
	/** The comments. */
	private String comments;
	
	/** The deleted. */
	private boolean deleted;
	
	/** The note. */
	private String note;
	
	/** The created date. */
	private Date createdDate;
	
	/** The name. */
	private String name;
	
	/** The assets staff assigns. */
	private Set<AssetsStaffAssign> assetsStaffAssigns = new HashSet<AssetsStaffAssign>(
			0);
	
	/** The assets devaluations. */
	private Set<AssetsDevaluation> assetsDevaluations = new HashSet<AssetsDevaluation>(
			0);
	
	/** The purchase orders. */
	private Set<PurchaseOrder> purchaseOrders = new HashSet<PurchaseOrder>(0);

	/**
	 * Instantiates a new assets.
	 */
	public Assets() {
	}

	/**
	 * Instantiates a new assets.
	 *
	 * @param employee the employee
	 * @param inFunction the in function
	 * @param deleted the deleted
	 * @param createdDate the created date
	 * @param name the name
	 */
	public Assets(Employee employee, boolean inFunction, boolean deleted,
			Date createdDate, String name) {
		this.employee = employee;
		this.inFunction = inFunction;
		this.deleted = deleted;
		this.createdDate = createdDate;
		this.name = name;
	}

	/**
	 * Instantiates a new assets.
	 *
	 * @param employee the employee
	 * @param organisation the organisation
	 * @param barcode the barcode
	 * @param location the location
	 * @param inFunction the in function
	 * @param damaged the damaged
	 * @param dateOfPurchase the date of purchase
	 * @param quantity the quantity
	 * @param purchaseValue the purchase value
	 * @param purchaseTotal the purchase total
	 * @param amortizationGrade the amortization grade
	 * @param netAfterDevalYear the net after deval year
	 * @param serialNo the serial no
	 * @param comments the comments
	 * @param deleted the deleted
	 * @param note the note
	 * @param createdDate the created date
	 * @param name the name
	 * @param assetsStaffAssigns the assets staff assigns
	 * @param assetsDevaluations the assets devaluations
	 * @param purchaseOrders the purchase orders
	 */
	public Assets(Employee employee, Organisation organisation, String barcode,
			String location, boolean inFunction, Boolean damaged,
			Date dateOfPurchase, Double quantity, Double purchaseValue,
			Double purchaseTotal, Double amortizationGrade,
			Double netAfterDevalYear, String serialNo, String comments,
			boolean deleted, String note, Date createdDate, String name,
			Set<AssetsStaffAssign> assetsStaffAssigns,
			Set<AssetsDevaluation> assetsDevaluations,
			Set<PurchaseOrder> purchaseOrders) {
		this.employee = employee;
		this.organisation = organisation;
		this.barcode = barcode;
		this.location = location;
		this.inFunction = inFunction;
		this.damaged = damaged;
		this.dateOfPurchase = dateOfPurchase;
		this.quantity = quantity;
		this.purchaseValue = purchaseValue;
		this.purchaseTotal = purchaseTotal;
		this.amortizationGrade = amortizationGrade;
		this.netAfterDevalYear = netAfterDevalYear;
		this.serialNo = serialNo;
		this.comments = comments;
		this.deleted = deleted;
		this.note = note;
		this.createdDate = createdDate;
		this.name = name;
		this.assetsStaffAssigns = assetsStaffAssigns;
		this.assetsDevaluations = assetsDevaluations;
		this.purchaseOrders = purchaseOrders;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the employee.
	 *
	 * @return the employee
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	/**
	 * Sets the employee.
	 *
	 * @param employee the new employee
	 */
	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	/**
	 * Gets the organisation.
	 *
	 * @return the organisation
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "department_id")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	/**
	 * Sets the organisation.
	 *
	 * @param organisation the new organisation
	 */
	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	/**
	 * Gets the barcode.
	 *
	 * @return the barcode
	 */
	@Column(name = "barcode", length = 50)
	public String getBarcode() {
		return this.barcode;
	}

	/**
	 * Sets the barcode.
	 *
	 * @param barcode the new barcode
	 */
	public void setBarcode(String barcode) {
		this.barcode = barcode;
	}

	/**
	 * Gets the location.
	 *
	 * @return the location
	 */
	@Column(name = "location")
	public String getLocation() {
		return this.location;
	}

	/**
	 * Sets the location.
	 *
	 * @param location the new location
	 */
	public void setLocation(String location) {
		this.location = location;
	}

	/**
	 * Checks if is in function.
	 *
	 * @return true, if is in function
	 */
	@Column(name = "in_function", nullable = false)
	public boolean isInFunction() {
		return this.inFunction;
	}

	/**
	 * Sets the in function.
	 *
	 * @param inFunction the new in function
	 */
	public void setInFunction(boolean inFunction) {
		this.inFunction = inFunction;
	}

	/**
	 * Gets the damaged.
	 *
	 * @return the damaged
	 */
	@Column(name = "damaged")
	public Boolean getDamaged() {
		return this.damaged;
	}

	/**
	 * Sets the damaged.
	 *
	 * @param damaged the new damaged
	 */
	public void setDamaged(Boolean damaged) {
		this.damaged = damaged;
	}

	/**
	 * Gets the date of purchase.
	 *
	 * @return the date of purchase
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_of_purchase", length = 29)
	public Date getDateOfPurchase() {
		return this.dateOfPurchase;
	}

	/**
	 * Sets the date of purchase.
	 *
	 * @param dateOfPurchase the new date of purchase
	 */
	public void setDateOfPurchase(Date dateOfPurchase) {
		this.dateOfPurchase = dateOfPurchase;
	}

	/**
	 * Gets the quantity.
	 *
	 * @return the quantity
	 */
	@Column(name = "quantity", precision = 17, scale = 17)
	public Double getQuantity() {
		return this.quantity;
	}

	/**
	 * Sets the quantity.
	 *
	 * @param quantity the new quantity
	 */
	public void setQuantity(Double quantity) {
		this.quantity = quantity;
	}

	/**
	 * Gets the purchase value.
	 *
	 * @return the purchase value
	 */
	@Column(name = "purchase_value", precision = 17, scale = 17)
	public Double getPurchaseValue() {
		return this.purchaseValue;
	}

	/**
	 * Sets the purchase value.
	 *
	 * @param purchaseValue the new purchase value
	 */
	public void setPurchaseValue(Double purchaseValue) {
		this.purchaseValue = purchaseValue;
	}

	/**
	 * Gets the purchase total.
	 *
	 * @return the purchase total
	 */
	@Column(name = "purchase_total", precision = 17, scale = 17)
	public Double getPurchaseTotal() {
		return this.purchaseTotal;
	}

	/**
	 * Sets the purchase total.
	 *
	 * @param purchaseTotal the new purchase total
	 */
	public void setPurchaseTotal(Double purchaseTotal) {
		this.purchaseTotal = purchaseTotal;
	}

	/**
	 * Gets the amortization grade.
	 *
	 * @return the amortization grade
	 */
	@Column(name = "amortization_grade", precision = 17, scale = 17)
	public Double getAmortizationGrade() {
		return this.amortizationGrade;
	}

	/**
	 * Sets the amortization grade.
	 *
	 * @param amortizationGrade the new amortization grade
	 */
	public void setAmortizationGrade(Double amortizationGrade) {
		this.amortizationGrade = amortizationGrade;
	}

	/**
	 * Gets the net after deval year.
	 *
	 * @return the net after deval year
	 */
	@Column(name = "net_after_deval_year", precision = 17, scale = 17)
	public Double getNetAfterDevalYear() {
		return this.netAfterDevalYear;
	}

	/**
	 * Sets the net after deval year.
	 *
	 * @param netAfterDevalYear the new net after deval year
	 */
	public void setNetAfterDevalYear(Double netAfterDevalYear) {
		this.netAfterDevalYear = netAfterDevalYear;
	}

	/**
	 * Gets the serial no.
	 *
	 * @return the serial no
	 */
	@Column(name = "serial_no", length = 100)
	public String getSerialNo() {
		return this.serialNo;
	}

	/**
	 * Sets the serial no.
	 *
	 * @param serialNo the new serial no
	 */
	public void setSerialNo(String serialNo) {
		this.serialNo = serialNo;
	}

	/**
	 * Gets the comments.
	 *
	 * @return the comments
	 */
	@Column(name = "comments", length = 500)
	public String getComments() {
		return this.comments;
	}

	/**
	 * Sets the comments.
	 *
	 * @param comments the new comments
	 */
	public void setComments(String comments) {
		this.comments = comments;
	}

	/**
	 * Checks if is deleted.
	 *
	 * @return true, if is deleted
	 */
	@Column(name = "deleted", nullable = false)
	public boolean isDeleted() {
		return this.deleted;
	}

	/**
	 * Sets the deleted.
	 *
	 * @param deleted the new deleted
	 */
	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

	/**
	 * Gets the note.
	 *
	 * @return the note
	 */
	@Column(name = "note")
	public String getNote() {
		return this.note;
	}

	/**
	 * Sets the note.
	 *
	 * @param note the new note
	 */
	public void setNote(String note) {
		this.note = note;
	}

	/**
	 * Gets the created date.
	 *
	 * @return the created date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	/**
	 * Sets the created date.
	 *
	 * @param createdDate the new created date
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the assets staff assigns.
	 *
	 * @return the assets staff assigns
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "assets")
	public Set<AssetsStaffAssign> getAssetsStaffAssigns() {
		return this.assetsStaffAssigns;
	}

	/**
	 * Sets the assets staff assigns.
	 *
	 * @param assetsStaffAssigns the new assets staff assigns
	 */
	public void setAssetsStaffAssigns(Set<AssetsStaffAssign> assetsStaffAssigns) {
		this.assetsStaffAssigns = assetsStaffAssigns;
	}

	/**
	 * Gets the assets devaluations.
	 *
	 * @return the assets devaluations
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "assets")
	public Set<AssetsDevaluation> getAssetsDevaluations() {
		return this.assetsDevaluations;
	}

	/**
	 * Sets the assets devaluations.
	 *
	 * @param assetsDevaluations the new assets devaluations
	 */
	public void setAssetsDevaluations(Set<AssetsDevaluation> assetsDevaluations) {
		this.assetsDevaluations = assetsDevaluations;
	}

	/**
	 * Gets the purchase orders.
	 *
	 * @return the purchase orders
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "assets")
	public Set<PurchaseOrder> getPurchaseOrders() {
		return this.purchaseOrders;
	}

	/**
	 * Sets the purchase orders.
	 *
	 * @param purchaseOrders the new purchase orders
	 */
	public void setPurchaseOrders(Set<PurchaseOrder> purchaseOrders) {
		this.purchaseOrders = purchaseOrders;
	}

}
