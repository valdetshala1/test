package com.geoland.kfis.model;

// Generated Oct 21, 2015 11:45:21 AM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;
import org.hibernate.spatial.GeometryType;
import com.vividsolutions.jts.geom.Geometry;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;

// TODO: Auto-generated Javadoc
/**
 * Plot generated by hbm2java.
 */
@Entity
@Table(name = "tgis_plots", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"stand_id", "plot_nr" }))
@TypeDef(name = "geometry", typeClass = GeometryType.class)
public class Plot extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The stand. */
	private Stand stand;
	
	/** The plot nr. */
	private Long plotNr;
	
	/** The visited. */
	private Short visited;
	
	/** The plottype. */
	private Short plottype;
	
	/** The slope. */
	private Short slope;
	
	/** The littercov. */
	private Short littercov;
	
	/** The age. */
	private Short age;
	
	/** The crowncov. */
	private Short crowncov;
	
	/** The C stems 1. */
	private Short CStems1;
	
	/** The C stems 2. */
	private Short CStems2;
	
	/** The C damage. */
	private Short CDamage;
	
	/** The C supress. */
	private Short CSupress;
	
	/** The C distrib. */
	private Short CDistrib;
	
	/** The B stems 1. */
	private Short BStems1;
	
	/** The B stems 2. */
	private Short BStems2;
	
	/** The B damage. */
	private Short BDamage;
	
	/** The B supress. */
	private Short BSupress;
	
	/** The B distrib. */
	private Short BDistrib;
	
	/** The time. */
	private String time;
	
	/** The date. */
	private Date date;
	
	/** The taksator. */
	private String taksator;
	
	/** The geom. */
	private Geometry geom;
	
	/** The plot trees. */
	private Set<PlotTree> plotTrees = new HashSet<PlotTree>(0);

	/**
	 * Instantiates a new plot.
	 */
	public Plot() {
	}

	/**
	 * Instantiates a new plot.
	 *
	 * @param stand the stand
	 */
	public Plot(Stand stand) {
		this.stand = stand;
	}

	/**
	 * Instantiates a new plot.
	 *
	 * @param stand the stand
	 * @param plotNr the plot nr
	 * @param visited the visited
	 * @param plottype the plottype
	 * @param slope the slope
	 * @param littercov the littercov
	 * @param age the age
	 * @param crowncov the crowncov
	 * @param CStems1 the c stems 1
	 * @param CStems2 the c stems 2
	 * @param CDamage the c damage
	 * @param CSupress the c supress
	 * @param CDistrib the c distrib
	 * @param BStems1 the b stems 1
	 * @param BStems2 the b stems 2
	 * @param BDamage the b damage
	 * @param BSupress the b supress
	 * @param BDistrib the b distrib
	 * @param time the time
	 * @param date the date
	 * @param taksator the taksator
	 * @param geom the geom
	 * @param plotTrees the plot trees
	 */
	public Plot(Stand stand, Long plotNr, Short visited, Short plottype,
			Short slope, Short littercov, Short age, Short crowncov,
			Short CStems1, Short CStems2, Short CDamage, Short CSupress,
			Short CDistrib, Short BStems1, Short BStems2, Short BDamage,
			Short BSupress, Short BDistrib, String time, Date date,
			String taksator, Geometry geom, Set<PlotTree> plotTrees) {
		this.stand = stand;
		this.plotNr = plotNr;
		this.visited = visited;
		this.plottype = plottype;
		this.slope = slope;
		this.littercov = littercov;
		this.age = age;
		this.crowncov = crowncov;
		this.CStems1 = CStems1;
		this.CStems2 = CStems2;
		this.CDamage = CDamage;
		this.CSupress = CSupress;
		this.CDistrib = CDistrib;
		this.BStems1 = BStems1;
		this.BStems2 = BStems2;
		this.BDamage = BDamage;
		this.BSupress = BSupress;
		this.BDistrib = BDistrib;
		this.time = time;
		this.date = date;
		this.taksator = taksator;
		this.geom = geom;
		this.plotTrees = plotTrees;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the stand.
	 *
	 * @return the stand
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "stand_id", nullable = false)
	public Stand getStand() {
		return this.stand;
	}

	/**
	 * Sets the stand.
	 *
	 * @param stand the new stand
	 */
	public void setStand(Stand stand) {
		this.stand = stand;
	}

	/**
	 * Gets the plot nr.
	 *
	 * @return the plot nr
	 */
	@Column(name = "plot_nr")
	public Long getPlotNr() {
		return this.plotNr;
	}

	/**
	 * Sets the plot nr.
	 *
	 * @param plotNr the new plot nr
	 */
	public void setPlotNr(Long plotNr) {
		this.plotNr = plotNr;
	}

	/**
	 * Gets the visited.
	 *
	 * @return the visited
	 */
	@Column(name = "visited")
	public Short getVisited() {
		return this.visited;
	}

	/**
	 * Sets the visited.
	 *
	 * @param visited the new visited
	 */
	public void setVisited(Short visited) {
		this.visited = visited;
	}

	/**
	 * Gets the plottype.
	 *
	 * @return the plottype
	 */
	@Column(name = "plottype")
	public Short getPlottype() {
		return this.plottype;
	}

	/**
	 * Sets the plottype.
	 *
	 * @param plottype the new plottype
	 */
	public void setPlottype(Short plottype) {
		this.plottype = plottype;
	}

	/**
	 * Gets the slope.
	 *
	 * @return the slope
	 */
	@Column(name = "slope")
	public Short getSlope() {
		return this.slope;
	}

	/**
	 * Sets the slope.
	 *
	 * @param slope the new slope
	 */
	public void setSlope(Short slope) {
		this.slope = slope;
	}

	/**
	 * Gets the littercov.
	 *
	 * @return the littercov
	 */
	@Column(name = "littercov")
	public Short getLittercov() {
		return this.littercov;
	}

	/**
	 * Sets the littercov.
	 *
	 * @param littercov the new littercov
	 */
	public void setLittercov(Short littercov) {
		this.littercov = littercov;
	}

	/**
	 * Gets the age.
	 *
	 * @return the age
	 */
	@Column(name = "age")
	public Short getAge() {
		return this.age;
	}

	/**
	 * Sets the age.
	 *
	 * @param age the new age
	 */
	public void setAge(Short age) {
		this.age = age;
	}

	/**
	 * Gets the crowncov.
	 *
	 * @return the crowncov
	 */
	@Column(name = "crowncov")
	public Short getCrowncov() {
		return this.crowncov;
	}

	/**
	 * Sets the crowncov.
	 *
	 * @param crowncov the new crowncov
	 */
	public void setCrowncov(Short crowncov) {
		this.crowncov = crowncov;
	}

	/**
	 * Gets the c stems 1.
	 *
	 * @return the c stems 1
	 */
	@Column(name = "c_stems1")
	public Short getCStems1() {
		return this.CStems1;
	}

	/**
	 * Sets the c stems 1.
	 *
	 * @param CStems1 the new c stems 1
	 */
	public void setCStems1(Short CStems1) {
		this.CStems1 = CStems1;
	}

	/**
	 * Gets the c stems 2.
	 *
	 * @return the c stems 2
	 */
	@Column(name = "c_stems2")
	public Short getCStems2() {
		return this.CStems2;
	}

	/**
	 * Sets the c stems 2.
	 *
	 * @param CStems2 the new c stems 2
	 */
	public void setCStems2(Short CStems2) {
		this.CStems2 = CStems2;
	}

	/**
	 * Gets the c damage.
	 *
	 * @return the c damage
	 */
	@Column(name = "c_damage")
	public Short getCDamage() {
		return this.CDamage;
	}

	/**
	 * Sets the c damage.
	 *
	 * @param CDamage the new c damage
	 */
	public void setCDamage(Short CDamage) {
		this.CDamage = CDamage;
	}

	/**
	 * Gets the c supress.
	 *
	 * @return the c supress
	 */
	@Column(name = "c_supress")
	public Short getCSupress() {
		return this.CSupress;
	}

	/**
	 * Sets the c supress.
	 *
	 * @param CSupress the new c supress
	 */
	public void setCSupress(Short CSupress) {
		this.CSupress = CSupress;
	}

	/**
	 * Gets the c distrib.
	 *
	 * @return the c distrib
	 */
	@Column(name = "c_distrib")
	public Short getCDistrib() {
		return this.CDistrib;
	}

	/**
	 * Sets the c distrib.
	 *
	 * @param CDistrib the new c distrib
	 */
	public void setCDistrib(Short CDistrib) {
		this.CDistrib = CDistrib;
	}

	/**
	 * Gets the b stems 1.
	 *
	 * @return the b stems 1
	 */
	@Column(name = "b_stems1")
	public Short getBStems1() {
		return this.BStems1;
	}

	/**
	 * Sets the b stems 1.
	 *
	 * @param BStems1 the new b stems 1
	 */
	public void setBStems1(Short BStems1) {
		this.BStems1 = BStems1;
	}

	/**
	 * Gets the b stems 2.
	 *
	 * @return the b stems 2
	 */
	@Column(name = "b_stems2")
	public Short getBStems2() {
		return this.BStems2;
	}

	/**
	 * Sets the b stems 2.
	 *
	 * @param BStems2 the new b stems 2
	 */
	public void setBStems2(Short BStems2) {
		this.BStems2 = BStems2;
	}

	/**
	 * Gets the b damage.
	 *
	 * @return the b damage
	 */
	@Column(name = "b_damage")
	public Short getBDamage() {
		return this.BDamage;
	}

	/**
	 * Sets the b damage.
	 *
	 * @param BDamage the new b damage
	 */
	public void setBDamage(Short BDamage) {
		this.BDamage = BDamage;
	}

	/**
	 * Gets the b supress.
	 *
	 * @return the b supress
	 */
	@Column(name = "b_supress")
	public Short getBSupress() {
		return this.BSupress;
	}

	/**
	 * Sets the b supress.
	 *
	 * @param BSupress the new b supress
	 */
	public void setBSupress(Short BSupress) {
		this.BSupress = BSupress;
	}

	/**
	 * Gets the b distrib.
	 *
	 * @return the b distrib
	 */
	@Column(name = "b_distrib")
	public Short getBDistrib() {
		return this.BDistrib;
	}

	/**
	 * Sets the b distrib.
	 *
	 * @param BDistrib the new b distrib
	 */
	public void setBDistrib(Short BDistrib) {
		this.BDistrib = BDistrib;
	}

	/**
	 * Gets the time.
	 *
	 * @return the time
	 */
	@Column(name = "time_", length = 12)
	public String getTime() {
		return this.time;
	}

	/**
	 * Sets the time.
	 *
	 * @param time the new time
	 */
	public void setTime(String time) {
		this.time = time;
	}

	/**
	 * Gets the date.
	 *
	 * @return the date
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "date_", length = 13)
	public Date getDate() {
		return this.date;
	}

	/**
	 * Sets the date.
	 *
	 * @param date the new date
	 */
	public void setDate(Date date) {
		this.date = date;
	}

	/**
	 * Gets the taksator.
	 *
	 * @return the taksator
	 */
	@Column(name = "taksator", length = 20)
	public String getTaksator() {
		return this.taksator;
	}

	/**
	 * Sets the taksator.
	 *
	 * @param taksator the new taksator
	 */
	public void setTaksator(String taksator) {
		this.taksator = taksator;
	}

	/**
	 * Gets the geom.
	 *
	 * @return the geom
	 */
	@Column(name = "geom")
	@Type(type = "org.hibernate.spatial.GeometryType")
	public Geometry getGeom() {
		return this.geom;
	}

	/**
	 * Sets the geom.
	 *
	 * @param geom the new geom
	 */
	public void setGeom(Geometry geom) {
		this.geom = geom;
	}

	/**
	 * Gets the plot trees.
	 *
	 * @return the plot trees
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "plot")
	public Set<PlotTree> getPlotTrees() {
		return this.plotTrees;
	}

	/**
	 * Sets the plot trees.
	 *
	 * @param plotTrees the new plot trees
	 */
	public void setPlotTrees(Set<PlotTree> plotTrees) {
		this.plotTrees = plotTrees;
	}

}
