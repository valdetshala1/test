package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * EmployeeSosContact generated by hbm2java.
 */
@Entity
@Table(name = "thrm_employee_sos_contact", schema = "public")
public class EmployeeSosContact extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The party. */
	private Party party;
	
	/** The employee. */
	private Employee employee;
	
	/** The contact name. */
	private String contactName;
	
	/** The relationship. */
	private String relationship;
	
	/** The home phone. */
	private String homePhone;
	
	/** The work phone. */
	private String workPhone;
	
	/** The mobile phone. */
	private String mobilePhone;
	
	/** The email. */
	private String email;
	
	/** The note. */
	private String note;
	
	/** The created date. */
	private Date createdDate;

	/**
	 * Instantiates a new employee sos contact.
	 */
	public EmployeeSosContact() {
	}

	/**
	 * Instantiates a new employee sos contact.
	 *
	 * @param party the party
	 * @param employee the employee
	 * @param contactName the contact name
	 * @param createdDate the created date
	 */
	public EmployeeSosContact(Party party, Employee employee,
			String contactName, Date createdDate) {
		this.party = party;
		this.employee = employee;
		this.contactName = contactName;
		this.createdDate = createdDate;
	}

	/**
	 * Instantiates a new employee sos contact.
	 *
	 * @param party the party
	 * @param employee the employee
	 * @param contactName the contact name
	 * @param relationship the relationship
	 * @param homePhone the home phone
	 * @param workPhone the work phone
	 * @param mobilePhone the mobile phone
	 * @param email the email
	 * @param note the note
	 * @param createdDate the created date
	 */
	public EmployeeSosContact(Party party, Employee employee,
			String contactName, String relationship, String homePhone,
			String workPhone, String mobilePhone, String email, String note,
			Date createdDate) {
		this.party = party;
		this.employee = employee;
		this.contactName = contactName;
		this.relationship = relationship;
		this.homePhone = homePhone;
		this.workPhone = workPhone;
		this.mobilePhone = mobilePhone;
		this.email = email;
		this.note = note;
		this.createdDate = createdDate;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the party.
	 *
	 * @return the party
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Party getParty() {
		return this.party;
	}

	/**
	 * Sets the party.
	 *
	 * @param party the new party
	 */
	public void setParty(Party party) {
		this.party = party;
	}

	/**
	 * Gets the employee.
	 *
	 * @return the employee
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "employee_id", nullable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	/**
	 * Sets the employee.
	 *
	 * @param employee the new employee
	 */
	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	/**
	 * Gets the contact name.
	 *
	 * @return the contact name
	 */
	@Column(name = "contact_name", nullable = false, length = 100)
	public String getContactName() {
		return this.contactName;
	}

	/**
	 * Sets the contact name.
	 *
	 * @param contactName the new contact name
	 */
	public void setContactName(String contactName) {
		this.contactName = contactName;
	}

	/**
	 * Gets the relationship.
	 *
	 * @return the relationship
	 */
	@Column(name = "relationship", length = 50)
	public String getRelationship() {
		return this.relationship;
	}

	/**
	 * Sets the relationship.
	 *
	 * @param relationship the new relationship
	 */
	public void setRelationship(String relationship) {
		this.relationship = relationship;
	}

	/**
	 * Gets the home phone.
	 *
	 * @return the home phone
	 */
	@Column(name = "home_phone", length = 20)
	public String getHomePhone() {
		return this.homePhone;
	}

	/**
	 * Sets the home phone.
	 *
	 * @param homePhone the new home phone
	 */
	public void setHomePhone(String homePhone) {
		this.homePhone = homePhone;
	}

	/**
	 * Gets the work phone.
	 *
	 * @return the work phone
	 */
	@Column(name = "work_phone", length = 20)
	public String getWorkPhone() {
		return this.workPhone;
	}

	/**
	 * Sets the work phone.
	 *
	 * @param workPhone the new work phone
	 */
	public void setWorkPhone(String workPhone) {
		this.workPhone = workPhone;
	}

	/**
	 * Gets the mobile phone.
	 *
	 * @return the mobile phone
	 */
	@Column(name = "mobile_phone", length = 20)
	public String getMobilePhone() {
		return this.mobilePhone;
	}

	/**
	 * Sets the mobile phone.
	 *
	 * @param mobilePhone the new mobile phone
	 */
	public void setMobilePhone(String mobilePhone) {
		this.mobilePhone = mobilePhone;
	}

	/**
	 * Gets the email.
	 *
	 * @return the email
	 */
	@Column(name = "email", length = 20)
	public String getEmail() {
		return this.email;
	}

	/**
	 * Sets the email.
	 *
	 * @param email the new email
	 */
	public void setEmail(String email) {
		this.email = email;
	}

	/**
	 * Gets the note.
	 *
	 * @return the note
	 */
	@Column(name = "note")
	public String getNote() {
		return this.note;
	}

	/**
	 * Sets the note.
	 *
	 * @param note the new note
	 */
	public void setNote(String note) {
		this.note = note;
	}

	/**
	 * Gets the created date.
	 *
	 * @return the created date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	/**
	 * Sets the created date.
	 *
	 * @param createdDate the new created date
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

}
