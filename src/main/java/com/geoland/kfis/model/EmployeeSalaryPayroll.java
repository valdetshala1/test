package com.geoland.kfis.model;
// Generated 11.06.2020 23:02:56 by Hibernate Tools 5.2.11.Final

import com.geoland.framework.persistence.base.*;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;

/**
 * EmployeeSalaryPayroll generated by hbm2java
 */
@Entity
@Table(name = "thrm_employee_salary_payroll", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"employee_id", "fiscal_year", "pay_month" }))
public class EmployeeSalaryPayroll extends AbstractPersistentObject implements java.io.Serializable {

	private Long id;
	private FinancialType financialType;
	private Employee employee;
	private EmployeeSalary employeeSalary;
	private Person createdBy;
	private Long fiscalYear;
	private Short payMonth;
	private Date payrollDate;
	private Date startDate;
	private Date endDate;
	private BigDecimal taxpay;
	private BigDecimal grosspay;
	private BigDecimal netpay;
	private BigDecimal salaryyear;
	private BigDecimal salarymonth;
	private BigDecimal hoursworked;
	private String status;
	private Date finDate;
	private Date createdDate;
	private Set<EmployeeSalaryPayrollAdjustment> employeeSalaryPayrollAdjustments = new HashSet<EmployeeSalaryPayrollAdjustment>(
			0);

	public EmployeeSalaryPayroll() {
	}

	public EmployeeSalaryPayroll(Employee employee, EmployeeSalary employeeSalary, Person createdBy, Long fiscalYear,
			Short payMonth, Date payrollDate, Date startDate, Date endDate, BigDecimal taxpay, BigDecimal grosspay,
			BigDecimal netpay, BigDecimal salaryyear, BigDecimal salarymonth, String status, Date createdDate) {
		this.employee = employee;
		this.employeeSalary = employeeSalary;
		this.createdBy = createdBy;
		this.fiscalYear = fiscalYear;
		this.payMonth = payMonth;
		this.payrollDate = payrollDate;
		this.startDate = startDate;
		this.endDate = endDate;
		this.taxpay = taxpay;
		this.grosspay = grosspay;
		this.netpay = netpay;
		this.salaryyear = salaryyear;
		this.salarymonth = salarymonth;
		this.status = status;
		this.createdDate = createdDate;
	}

	public EmployeeSalaryPayroll(FinancialType financialType, Employee employee, EmployeeSalary employeeSalary,
			Person createdBy, Long fiscalYear, Short payMonth, Date payrollDate, Date startDate, Date endDate,
			BigDecimal taxpay, BigDecimal grosspay, BigDecimal netpay, BigDecimal salaryyear, BigDecimal salarymonth,
			BigDecimal hoursworked, String status, Date finDate, Date createdDate,
			Set<EmployeeSalaryPayrollAdjustment> employeeSalaryPayrollAdjustments) {
		this.financialType = financialType;
		this.employee = employee;
		this.employeeSalary = employeeSalary;
		this.createdBy = createdBy;
		this.fiscalYear = fiscalYear;
		this.payMonth = payMonth;
		this.payrollDate = payrollDate;
		this.startDate = startDate;
		this.endDate = endDate;
		this.taxpay = taxpay;
		this.grosspay = grosspay;
		this.netpay = netpay;
		this.salaryyear = salaryyear;
		this.salarymonth = salarymonth;
		this.hoursworked = hoursworked;
		this.status = status;
		this.finDate = finDate;
		this.createdDate = createdDate;
		this.employeeSalaryPayrollAdjustments = employeeSalaryPayrollAdjustments;
	}

	@GenericGenerator(name = "com.geoland.kfis.model.EmployeeSalaryPayrollIdGenerator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "com.geoland.kfis.model.EmployeeSalaryPayrollIdGenerator")

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fin_type_id")
	public FinancialType getFinancialType() {
		return this.financialType;
	}

	public void setFinancialType(FinancialType financialType) {
		this.financialType = financialType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "employee_id", nullable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "salary_id", nullable = false)
	public EmployeeSalary getEmployeeSalary() {
		return this.employeeSalary;
	}

	public void setEmployeeSalary(EmployeeSalary employeeSalary) {
		this.employeeSalary = employeeSalary;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Person getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Person createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "fiscal_year", nullable = false)
	public Long getFiscalYear() {
		return this.fiscalYear;
	}

	public void setFiscalYear(Long fiscalYear) {
		this.fiscalYear = fiscalYear;
	}

	@Column(name = "pay_month", nullable = false)
	public Short getPayMonth() {
		return this.payMonth;
	}

	public void setPayMonth(Short payMonth) {
		this.payMonth = payMonth;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "payroll_date", nullable = false, length = 13)
	public Date getPayrollDate() {
		return this.payrollDate;
	}

	public void setPayrollDate(Date payrollDate) {
		this.payrollDate = payrollDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "start_date", nullable = false, length = 13)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "end_date", nullable = false, length = 13)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "taxpay", nullable = false, precision = 8)
	public BigDecimal getTaxpay() {
		return this.taxpay;
	}

	public void setTaxpay(BigDecimal taxpay) {
		this.taxpay = taxpay;
	}

	@Column(name = "grosspay", nullable = false, precision = 8)
	public BigDecimal getGrosspay() {
		return this.grosspay;
	}

	public void setGrosspay(BigDecimal grosspay) {
		this.grosspay = grosspay;
	}

	@Column(name = "netpay", nullable = false, precision = 8)
	public BigDecimal getNetpay() {
		return this.netpay;
	}

	public void setNetpay(BigDecimal netpay) {
		this.netpay = netpay;
	}

	@Column(name = "salaryyear", nullable = false, precision = 8)
	public BigDecimal getSalaryyear() {
		return this.salaryyear;
	}

	public void setSalaryyear(BigDecimal salaryyear) {
		this.salaryyear = salaryyear;
	}

	@Column(name = "salarymonth", nullable = false, precision = 8)
	public BigDecimal getSalarymonth() {
		return this.salarymonth;
	}

	public void setSalarymonth(BigDecimal salarymonth) {
		this.salarymonth = salarymonth;
	}

	@Column(name = "hoursworked", precision = 8)
	public BigDecimal getHoursworked() {
		return this.hoursworked;
	}

	public void setHoursworked(BigDecimal hoursworked) {
		this.hoursworked = hoursworked;
	}

	@Column(name = "status", nullable = false, length = 3)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fin_date", length = 29)
	public Date getFinDate() {
		return this.finDate;
	}

	public void setFinDate(Date finDate) {
		this.finDate = finDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeSalaryPayroll")
	public Set<EmployeeSalaryPayrollAdjustment> getEmployeeSalaryPayrollAdjustments() {
		return this.employeeSalaryPayrollAdjustments;
	}

	public void setEmployeeSalaryPayrollAdjustments(
			Set<EmployeeSalaryPayrollAdjustment> employeeSalaryPayrollAdjustments) {
		this.employeeSalaryPayrollAdjustments = employeeSalaryPayrollAdjustments;
	}

}
