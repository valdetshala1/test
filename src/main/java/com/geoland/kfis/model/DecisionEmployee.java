package com.geoland.kfis.model;

// Generated Jun 5, 2015 9:10:05 AM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * DecisionEmployee generated by hbm2java.
 */
@Entity
@Table(name = "thrm_decision_employee", schema = "public")
public class DecisionEmployee extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The decision. */
	private Decision decision;
	
	/** The employee. */
	private Employee employee;

	/**
	 * Instantiates a new decision employee.
	 */
	public DecisionEmployee() {
	}

	/**
	 * Instantiates a new decision employee.
	 *
	 * @param decision the decision
	 * @param employee the employee
	 */
	public DecisionEmployee(Decision decision, Employee employee) {
		this.decision = decision;
		this.employee = employee;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the decision.
	 *
	 * @return the decision
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "decision_id", nullable = false)
	public Decision getDecision() {
		return this.decision;
	}

	/**
	 * Sets the decision.
	 *
	 * @param decision the new decision
	 */
	public void setDecision(Decision decision) {
		this.decision = decision;
	}

	/**
	 * Gets the employee.
	 *
	 * @return the employee
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "employee_id", nullable = false)
	public Employee getEmployee() {
		return this.employee;
	}

	/**
	 * Sets the employee.
	 *
	 * @param employee the new employee
	 */
	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

}
