package com.geoland.kfis.model;

// Generated Feb 16, 2015 12:17:29 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * DpMngmtAttach generated by hbm2java.
 */
@Entity
@Table(name = "tdp_mngmt_attach", schema = "public")
public class DpMngmtAttach extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The person by updatedby. */
	private Person personByUpdatedby;
	
	/** The person by createdby. */
	private Person personByCreatedby;
	
	/** The dp mngmt. */
	private DpMngmt dpMngmt;
	
	/** The doc name. */
	private String docName;
	
	/** The doc content type. */
	private String docContentType;
	
	/** The doc type. */
	private String docType;
	
	/** The doc size. */
	private Long docSize;
	
	/** The doc. */
	private byte[] doc;
	
	/** The created. */
	private Date created;
	
	/** The updated. */
	private Date updated;

	/**
	 * Instantiates a new dp mngmt attach.
	 */
	public DpMngmtAttach() {
	}

	/**
	 * Instantiates a new dp mngmt attach.
	 *
	 * @param personByUpdatedby the person by updatedby
	 * @param personByCreatedby the person by createdby
	 * @param dpMngmt the dp mngmt
	 * @param docName the doc name
	 * @param docContentType the doc content type
	 * @param docType the doc type
	 * @param created the created
	 * @param updated the updated
	 */
	public DpMngmtAttach(Person personByUpdatedby, Person personByCreatedby,
			DpMngmt dpMngmt, String docName, String docContentType,
			String docType, Date created, Date updated) {
		this.personByUpdatedby = personByUpdatedby;
		this.personByCreatedby = personByCreatedby;
		this.dpMngmt = dpMngmt;
		this.docName = docName;
		this.docContentType = docContentType;
		this.docType = docType;
		this.created = created;
		this.updated = updated;
	}

	/**
	 * Instantiates a new dp mngmt attach.
	 *
	 * @param personByUpdatedby the person by updatedby
	 * @param personByCreatedby the person by createdby
	 * @param dpMngmt the dp mngmt
	 * @param docName the doc name
	 * @param docContentType the doc content type
	 * @param docType the doc type
	 * @param docSize the doc size
	 * @param doc the doc
	 * @param created the created
	 * @param updated the updated
	 */
	public DpMngmtAttach(Person personByUpdatedby, Person personByCreatedby,
			DpMngmt dpMngmt, String docName, String docContentType,
			String docType, Long docSize, byte[] doc, Date created, Date updated) {
		this.personByUpdatedby = personByUpdatedby;
		this.personByCreatedby = personByCreatedby;
		this.dpMngmt = dpMngmt;
		this.docName = docName;
		this.docContentType = docContentType;
		this.docType = docType;
		this.docSize = docSize;
		this.doc = doc;
		this.created = created;
		this.updated = updated;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the person by updatedby.
	 *
	 * @return the person by updatedby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedby", nullable = false)
	public Person getPersonByUpdatedby() {
		return this.personByUpdatedby;
	}

	/**
	 * Sets the person by updatedby.
	 *
	 * @param personByUpdatedby the new person by updatedby
	 */
	public void setPersonByUpdatedby(Person personByUpdatedby) {
		this.personByUpdatedby = personByUpdatedby;
	}

	/**
	 * Gets the person by createdby.
	 *
	 * @return the person by createdby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdby", nullable = false)
	public Person getPersonByCreatedby() {
		return this.personByCreatedby;
	}

	/**
	 * Sets the person by createdby.
	 *
	 * @param personByCreatedby the new person by createdby
	 */
	public void setPersonByCreatedby(Person personByCreatedby) {
		this.personByCreatedby = personByCreatedby;
	}

	/**
	 * Gets the dp mngmt.
	 *
	 * @return the dp mngmt
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dp_mngm_id", nullable = false)
	public DpMngmt getDpMngmt() {
		return this.dpMngmt;
	}

	/**
	 * Sets the dp mngmt.
	 *
	 * @param dpMngmt the new dp mngmt
	 */
	public void setDpMngmt(DpMngmt dpMngmt) {
		this.dpMngmt = dpMngmt;
	}

	/**
	 * Gets the doc name.
	 *
	 * @return the doc name
	 */
	@Column(name = "doc_name", nullable = false, length = 100)
	public String getDocName() {
		return this.docName;
	}

	/**
	 * Sets the doc name.
	 *
	 * @param docName the new doc name
	 */
	public void setDocName(String docName) {
		this.docName = docName;
	}

	/**
	 * Gets the doc content type.
	 *
	 * @return the doc content type
	 */
	@Column(name = "doc_content_type", nullable = false, length = 100)
	public String getDocContentType() {
		return this.docContentType;
	}

	/**
	 * Sets the doc content type.
	 *
	 * @param docContentType the new doc content type
	 */
	public void setDocContentType(String docContentType) {
		this.docContentType = docContentType;
	}

	/**
	 * Gets the doc type.
	 *
	 * @return the doc type
	 */
	@Column(name = "doc_type", nullable = false, length = 10)
	public String getDocType() {
		return this.docType;
	}

	/**
	 * Sets the doc type.
	 *
	 * @param docType the new doc type
	 */
	public void setDocType(String docType) {
		this.docType = docType;
	}

	/**
	 * Gets the doc size.
	 *
	 * @return the doc size
	 */
	@Column(name = "doc_size")
	public Long getDocSize() {
		return this.docSize;
	}

	/**
	 * Sets the doc size.
	 *
	 * @param docSize the new doc size
	 */
	public void setDocSize(Long docSize) {
		this.docSize = docSize;
	}

	/**
	 * Gets the doc.
	 *
	 * @return the doc
	 */
	@Column(name = "doc")
	public byte[] getDoc() {
		return this.doc;
	}

	/**
	 * Sets the doc.
	 *
	 * @param doc the new doc
	 */
	public void setDoc(byte[] doc) {
		this.doc = doc;
	}

	/**
	 * Gets the created.
	 *
	 * @return the created
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	/**
	 * Sets the created.
	 *
	 * @param created the new created
	 */
	public void setCreated(Date created) {
		this.created = created;
	}

	/**
	 * Gets the updated.
	 *
	 * @return the updated
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	/**
	 * Sets the updated.
	 *
	 * @param updated the new updated
	 */
	public void setUpdated(Date updated) {
		this.updated = updated;
	}

}
