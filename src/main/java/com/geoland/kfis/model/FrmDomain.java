package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * FrmDomain generated by hbm2java.
 */
@Entity
@Table(name = "tfrm_domain", schema = "public", uniqueConstraints = {
		@UniqueConstraint(columnNames = "domain_code"),
		@UniqueConstraint(columnNames = "domain_value") })
public class FrmDomain extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The domain code. */
	private String domainCode;
	
	/** The domain value. */
	private String domainValue;
	
	/** The domain category. */
	private String domainCategory;
	
	/** The domain type. */
	private String domainType;
	
	/** The domain activity. */
	private String domainActivity;
	
	/** The domain category sort. */
	private Short domainCategorySort;
	
	/** The domain type sort. */
	private Short domainTypeSort;
	
	/** The domain activity sort. */
	private Short domainActivitySort;
	
	/** The frm domain names. */
	private Set<FrmDomainName> frmDomainNames = new HashSet<FrmDomainName>(0);

	/**
	 * Instantiates a new frm domain.
	 */
	public FrmDomain() {
	}

	/**
	 * Instantiates a new frm domain.
	 *
	 * @param domainCode the domain code
	 * @param domainValue the domain value
	 * @param domainCategory the domain category
	 * @param domainType the domain type
	 * @param domainActivity the domain activity
	 * @param domainCategorySort the domain category sort
	 * @param domainTypeSort the domain type sort
	 * @param domainActivitySort the domain activity sort
	 */
	public FrmDomain(String domainCode, String domainValue,
			String domainCategory, String domainType, String domainActivity,
			Short domainCategorySort, Short domainTypeSort,
			Short domainActivitySort) {
		this.domainCode = domainCode;
		this.domainValue = domainValue;
		this.domainCategory = domainCategory;
		this.domainType = domainType;
		this.domainActivity = domainActivity;
		this.domainCategorySort = domainCategorySort;
		this.domainTypeSort = domainTypeSort;
		this.domainActivitySort = domainActivitySort;
	}

	/**
	 * Instantiates a new frm domain.
	 *
	 * @param domainCode the domain code
	 * @param domainValue the domain value
	 * @param domainCategory the domain category
	 * @param domainType the domain type
	 * @param domainActivity the domain activity
	 * @param domainCategorySort the domain category sort
	 * @param domainTypeSort the domain type sort
	 * @param domainActivitySort the domain activity sort
	 * @param frmDomainNames the frm domain names
	 */
	public FrmDomain(String domainCode, String domainValue,
			String domainCategory, String domainType, String domainActivity,
			Short domainCategorySort, Short domainTypeSort,
			Short domainActivitySort, Set<FrmDomainName> frmDomainNames) {
		this.domainCode = domainCode;
		this.domainValue = domainValue;
		this.domainCategory = domainCategory;
		this.domainType = domainType;
		this.domainActivity = domainActivity;
		this.domainCategorySort = domainCategorySort;
		this.domainTypeSort = domainTypeSort;
		this.domainActivitySort = domainActivitySort;
		this.frmDomainNames = frmDomainNames;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the domain code.
	 *
	 * @return the domain code
	 */
	@Column(name = "domain_code", unique = true, nullable = false, length = 50)
	public String getDomainCode() {
		return this.domainCode;
	}

	/**
	 * Sets the domain code.
	 *
	 * @param domainCode the new domain code
	 */
	public void setDomainCode(String domainCode) {
		this.domainCode = domainCode;
	}

	/**
	 * Gets the domain value.
	 *
	 * @return the domain value
	 */
	@Column(name = "domain_value", unique = true, nullable = false, length = 50)
	public String getDomainValue() {
		return this.domainValue;
	}

	/**
	 * Sets the domain value.
	 *
	 * @param domainValue the new domain value
	 */
	public void setDomainValue(String domainValue) {
		this.domainValue = domainValue;
	}

	/**
	 * Gets the domain category.
	 *
	 * @return the domain category
	 */
	@Column(name = "domain_category", nullable = false, length = 50)
	public String getDomainCategory() {
		return this.domainCategory;
	}

	/**
	 * Sets the domain category.
	 *
	 * @param domainCategory the new domain category
	 */
	public void setDomainCategory(String domainCategory) {
		this.domainCategory = domainCategory;
	}

	/**
	 * Gets the domain type.
	 *
	 * @return the domain type
	 */
	@Column(name = "domain_type", nullable = false, length = 50)
	public String getDomainType() {
		return this.domainType;
	}

	/**
	 * Sets the domain type.
	 *
	 * @param domainType the new domain type
	 */
	public void setDomainType(String domainType) {
		this.domainType = domainType;
	}

	/**
	 * Gets the domain activity.
	 *
	 * @return the domain activity
	 */
	@Column(name = "domain_activity", nullable = false, length = 50)
	public String getDomainActivity() {
		return this.domainActivity;
	}

	/**
	 * Sets the domain activity.
	 *
	 * @param domainActivity the new domain activity
	 */
	public void setDomainActivity(String domainActivity) {
		this.domainActivity = domainActivity;
	}

	/**
	 * Gets the domain category sort.
	 *
	 * @return the domain category sort
	 */
	@Column(name = "domain_category_sort", nullable = false)
	public Short getDomainCategorySort() {
		return this.domainCategorySort;
	}

	/**
	 * Sets the domain category sort.
	 *
	 * @param domainCategorySort the new domain category sort
	 */
	public void setDomainCategorySort(Short domainCategorySort) {
		this.domainCategorySort = domainCategorySort;
	}

	/**
	 * Gets the domain type sort.
	 *
	 * @return the domain type sort
	 */
	@Column(name = "domain_type_sort", nullable = false)
	public Short getDomainTypeSort() {
		return this.domainTypeSort;
	}

	/**
	 * Sets the domain type sort.
	 *
	 * @param domainTypeSort the new domain type sort
	 */
	public void setDomainTypeSort(Short domainTypeSort) {
		this.domainTypeSort = domainTypeSort;
	}

	/**
	 * Gets the domain activity sort.
	 *
	 * @return the domain activity sort
	 */
	@Column(name = "domain_activity_sort", nullable = false)
	public Short getDomainActivitySort() {
		return this.domainActivitySort;
	}

	/**
	 * Sets the domain activity sort.
	 *
	 * @param domainActivitySort the new domain activity sort
	 */
	public void setDomainActivitySort(Short domainActivitySort) {
		this.domainActivitySort = domainActivitySort;
	}

	/**
	 * Gets the frm domain names.
	 *
	 * @return the frm domain names
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "frmDomain")
	public Set<FrmDomainName> getFrmDomainNames() {
		return this.frmDomainNames;
	}

	/**
	 * Sets the frm domain names.
	 *
	 * @param frmDomainNames the new frm domain names
	 */
	public void setFrmDomainNames(Set<FrmDomainName> frmDomainNames) {
		this.frmDomainNames = frmDomainNames;
	}

}
