package com.geoland.kfis.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;

// Generated Jun 9, 2015 9:58:44 AM by Hibernate Tools 4.0.0
import com.geoland.framework.persistence.base.AbstractPersistentObject;
import com.geoland.kfis.persistence.hibernate.usertypes.Financialtype;

// TODO: Auto-generated Javadoc
/**
 * FinancialType generated by hbm2java.
 */
@Entity
@Table(name = "tfin_type", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "code"))
public class FinancialType extends AbstractPersistentObject implements java.io.Serializable {
	
	private static final long serialVersionUID = 1L;
	
	private Long id;
	private FinancialType parent;
	private String code;
	private Short level;
	private Financialtype type;
	private Boolean allocation;
	private String nameAl;
	private String nameEn;
	private String nameSr;
	private String notes;
	private Date createdDate;
	private Set<FinancialType> childrens = new HashSet<FinancialType>(0);

	@Transient
	private String path[];
	
	@Transient
	private Integer depth;
	
	public FinancialType() {
	}

	public FinancialType(String code, Short level, String nameAl, Date createdDate) {
		this.code = code;
		this.level = level;
		this.nameAl = nameAl;
		this.createdDate = createdDate;
	}


	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_id")
	public FinancialType getParent() {
		return this.parent;
	}

	public void setParent(FinancialType parent) {
		this.parent = parent;
	}

	@Column(name = "code", unique = true, nullable = false, length = 20)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "level", nullable = false)
	public Short getLevel() {
		return this.level;
	}

	public void setLevel(Short level) {
		this.level = level;
	}

	@Column(name = "type", length = 2)
	@Type(type = "com.geoland.kfis.persistence.hibernate.usertypes.FinancialtypeUserType")
	public Financialtype getType() {
		return this.type;
	}

	public void setType(Financialtype type) {
		this.type = type;
	}
	
	@Column(name = "allocation")
	public Boolean getAllocation() {
		return this.allocation;
	}

	public void setAllocation(Boolean allocation) {
		this.allocation = allocation;
	}
	
	@Column(name = "name_al", nullable = false, length = 100)
	public String getNameAl() {
		return this.nameAl;
	}

	public void setNameAl(String nameAl) {
		this.nameAl = nameAl;
	}

	@Column(name = "name_en", length = 100)
	public String getNameEn() {
		return this.nameEn;
	}

	public void setNameEn(String nameEn) {
		this.nameEn = nameEn;
	}

	@Column(name = "name_sr", length = 100)
	public String getNameSr() {
		return this.nameSr;
	}

	public void setNameSr(String nameSr) {
		this.nameSr = nameSr;
	}
	
	@Column(name = "notes")
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}	

	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", nullable = false, length = 13)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parent")
	public Set<FinancialType> getChildrens() {
		return this.childrens;
	}

	public void setChildrens(Set<FinancialType> childrens) {
		this.childrens = childrens;
	}

	@Transient
	public String[] getPath() {
		return path;
	}

	public void setPath(String[] path) {
		this.path = path;
	}

	@Transient
	public Integer getDepth() {
		return depth;
	}

	public void setDepth(Integer depth) {
		this.depth = depth;
	}

	
}
