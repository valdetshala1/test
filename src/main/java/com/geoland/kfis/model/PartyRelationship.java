package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * PartyRelationship generated by hbm2java.
 */
@Entity
@Table(name = "tparty_relationship", schema = "public")
public class PartyRelationship extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The party by from relationship. */
	private Party partyByFromRelationship;
	
	/** The party by to relationship. */
	private Party partyByToRelationship;
	
	/** The from party role name. */
	private String fromPartyRoleName;
	
	/** The to party role name. */
	private String toPartyRoleName;
	
	/** The start data. */
	private Date startData;
	
	/** The end date. */
	private Date endDate;

	/**
	 * Instantiates a new party relationship.
	 */
	public PartyRelationship() {
	}

	/**
	 * Instantiates a new party relationship.
	 *
	 * @param partyByFromRelationship the party by from relationship
	 * @param partyByToRelationship the party by to relationship
	 * @param fromPartyRoleName the from party role name
	 * @param toPartyRoleName the to party role name
	 * @param startData the start data
	 */
	public PartyRelationship(Party partyByFromRelationship,
			Party partyByToRelationship, String fromPartyRoleName,
			String toPartyRoleName, Date startData) {
		this.partyByFromRelationship = partyByFromRelationship;
		this.partyByToRelationship = partyByToRelationship;
		this.fromPartyRoleName = fromPartyRoleName;
		this.toPartyRoleName = toPartyRoleName;
		this.startData = startData;
	}

	/**
	 * Instantiates a new party relationship.
	 *
	 * @param partyByFromRelationship the party by from relationship
	 * @param partyByToRelationship the party by to relationship
	 * @param fromPartyRoleName the from party role name
	 * @param toPartyRoleName the to party role name
	 * @param startData the start data
	 * @param endDate the end date
	 */
	public PartyRelationship(Party partyByFromRelationship,
			Party partyByToRelationship, String fromPartyRoleName,
			String toPartyRoleName, Date startData, Date endDate) {
		this.partyByFromRelationship = partyByFromRelationship;
		this.partyByToRelationship = partyByToRelationship;
		this.fromPartyRoleName = fromPartyRoleName;
		this.toPartyRoleName = toPartyRoleName;
		this.startData = startData;
		this.endDate = endDate;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the party by from relationship.
	 *
	 * @return the party by from relationship
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "from_relationship", nullable = false)
	public Party getPartyByFromRelationship() {
		return this.partyByFromRelationship;
	}

	/**
	 * Sets the party by from relationship.
	 *
	 * @param partyByFromRelationship the new party by from relationship
	 */
	public void setPartyByFromRelationship(Party partyByFromRelationship) {
		this.partyByFromRelationship = partyByFromRelationship;
	}

	/**
	 * Gets the party by to relationship.
	 *
	 * @return the party by to relationship
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "to_relationship", nullable = false)
	public Party getPartyByToRelationship() {
		return this.partyByToRelationship;
	}

	/**
	 * Sets the party by to relationship.
	 *
	 * @param partyByToRelationship the new party by to relationship
	 */
	public void setPartyByToRelationship(Party partyByToRelationship) {
		this.partyByToRelationship = partyByToRelationship;
	}

	/**
	 * Gets the from party role name.
	 *
	 * @return the from party role name
	 */
	@Column(name = "from_party_role_name", nullable = false, length = 10)
	public String getFromPartyRoleName() {
		return this.fromPartyRoleName;
	}

	/**
	 * Sets the from party role name.
	 *
	 * @param fromPartyRoleName the new from party role name
	 */
	public void setFromPartyRoleName(String fromPartyRoleName) {
		this.fromPartyRoleName = fromPartyRoleName;
	}

	/**
	 * Gets the to party role name.
	 *
	 * @return the to party role name
	 */
	@Column(name = "to_party_role_name", nullable = false, length = 10)
	public String getToPartyRoleName() {
		return this.toPartyRoleName;
	}

	/**
	 * Sets the to party role name.
	 *
	 * @param toPartyRoleName the new to party role name
	 */
	public void setToPartyRoleName(String toPartyRoleName) {
		this.toPartyRoleName = toPartyRoleName;
	}

	/**
	 * Gets the start data.
	 *
	 * @return the start data
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "start_data", nullable = false, length = 13)
	public Date getStartData() {
		return this.startData;
	}

	/**
	 * Sets the start data.
	 *
	 * @param startData the new start data
	 */
	public void setStartData(Date startData) {
		this.startData = startData;
	}

	/**
	 * Gets the end date.
	 *
	 * @return the end date
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "end_date", length = 13)
	public Date getEndDate() {
		return this.endDate;
	}

	/**
	 * Sets the end date.
	 *
	 * @param endDate the new end date
	 */
	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

}
