package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * EstimateVolume generated by hbm2java.
 */
@Entity
@Table(name = "tfrm_estimate_volume", schema = "public")
public class EstimateVolume extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The code. */
	private Long code;
	
	/** The description. */
	private String description;
	
	/** The minimum. */
	private Long minimum;
	
	/** The maximum. */
	private Long maximum;
	
	/** The stands. */
	private Set<Stand> stands = new HashSet<Stand>(0);

	/**
	 * Instantiates a new estimate volume.
	 */
	public EstimateVolume() {
	}

	/**
	 * Instantiates a new estimate volume.
	 *
	 * @param description the description
	 * @param minimum the minimum
	 * @param maximum the maximum
	 */
	public EstimateVolume(String description, Long minimum, Long maximum) {
		this.description = description;
		this.minimum = minimum;
		this.maximum = maximum;
	}

	/**
	 * Instantiates a new estimate volume.
	 *
	 * @param description the description
	 * @param minimum the minimum
	 * @param maximum the maximum
	 * @param stands the stands
	 */
	public EstimateVolume(String description, Long minimum, Long maximum,
			Set<Stand> stands) {
		this.description = description;
		this.minimum = minimum;
		this.maximum = maximum;
		this.stands = stands;
	}

	/**
	 * Gets the code.
	 *
	 * @return the code
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "code", unique = true, nullable = false)
	public Long getCode() {
		return this.code;
	}

	/**
	 * Sets the code.
	 *
	 * @param code the new code
	 */
	public void setCode(Long code) {
		this.code = code;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description", nullable = false, length = 100)
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the minimum.
	 *
	 * @return the minimum
	 */
	@Column(name = "minimum", nullable = false)
	public Long getMinimum() {
		return this.minimum;
	}

	/**
	 * Sets the minimum.
	 *
	 * @param minimum the new minimum
	 */
	public void setMinimum(Long minimum) {
		this.minimum = minimum;
	}

	/**
	 * Gets the maximum.
	 *
	 * @return the maximum
	 */
	@Column(name = "maximum", nullable = false)
	public Long getMaximum() {
		return this.maximum;
	}

	/**
	 * Sets the maximum.
	 *
	 * @param maximum the new maximum
	 */
	public void setMaximum(Long maximum) {
		this.maximum = maximum;
	}

	/**
	 * Gets the stands.
	 *
	 * @return the stands
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estimateVolume")
	public Set<Stand> getStands() {
		return this.stands;
	}

	/**
	 * Sets the stands.
	 *
	 * @param stands the new stands
	 */
	public void setStands(Set<Stand> stands) {
		this.stands = stands;
	}

}
