package com.geoland.kfis.model;
// Generated Sep 29, 2017 10:01:37 AM by Hibernate Tools 4.0.1.Final

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * StandHarvestImplTransport generated by hbm2java.
 */
@Entity
@Table(name = "tfrm_harvest_impl_transport", schema = "public")
public class StandHarvestImplTransport extends AbstractPersistentObject implements java.io.Serializable {

	/** The id. */
	private Long id;
	
	/** The person. */
	private Person person;
	
	/** The doc type. */
	private String docType;
	
	/** The doc name. */
	private String docName;
	
	/** The doc. */
	private byte[] doc;
	
	/** The remark. */
	private String remark;
	
	/** The trans date. */
	private Date transDate;
	
	/** The created date. */
	private Date createdDate;
	
	/** The stand harvest impl declares. */
	private Set<StandHarvestImplDeclare> standHarvestImplDeclares = new HashSet<StandHarvestImplDeclare>(0);

	/**
	 * Instantiates a new stand harvest impl transport.
	 */
	public StandHarvestImplTransport() {
	}

	/**
	 * Instantiates a new stand harvest impl transport.
	 *
	 * @param person the person
	 * @param transDate the trans date
	 * @param createdDate the created date
	 */
	public StandHarvestImplTransport(Person person, Date transDate, Date createdDate) {
		this.person = person;
		this.transDate = transDate;
		this.createdDate = createdDate;
	}

	/**
	 * Instantiates a new stand harvest impl transport.
	 *
	 * @param person the person
	 * @param docType the doc type
	 * @param docName the doc name
	 * @param doc the doc
	 * @param remark the remark
	 * @param transDate the trans date
	 * @param createdDate the created date
	 * @param standHarvestImplDeclares the stand harvest impl declares
	 */
	public StandHarvestImplTransport(Person person, String docType, String docName, byte[] doc, String remark,
			Date transDate, Date createdDate, Set<StandHarvestImplDeclare> standHarvestImplDeclares) {
		this.person = person;
		this.docType = docType;
		this.docName = docName;
		this.doc = doc;
		this.remark = remark;
		this.transDate = transDate;
		this.createdDate = createdDate;
		this.standHarvestImplDeclares = standHarvestImplDeclares;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the person.
	 *
	 * @return the person
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	/**
	 * Sets the person.
	 *
	 * @param person the new person
	 */
	public void setPerson(Person person) {
		this.person = person;
	}

	/**
	 * Gets the doc type.
	 *
	 * @return the doc type
	 */
	@Column(name = "doc_type", length = 100)
	public String getDocType() {
		return this.docType;
	}

	/**
	 * Sets the doc type.
	 *
	 * @param docType the new doc type
	 */
	public void setDocType(String docType) {
		this.docType = docType;
	}

	/**
	 * Gets the doc name.
	 *
	 * @return the doc name
	 */
	@Column(name = "doc_name", length = 100)
	public String getDocName() {
		return this.docName;
	}

	/**
	 * Sets the doc name.
	 *
	 * @param docName the new doc name
	 */
	public void setDocName(String docName) {
		this.docName = docName;
	}

	/**
	 * Gets the doc.
	 *
	 * @return the doc
	 */
	@Column(name = "doc")
	public byte[] getDoc() {
		return this.doc;
	}

	/**
	 * Sets the doc.
	 *
	 * @param doc the new doc
	 */
	public void setDoc(byte[] doc) {
		this.doc = doc;
	}

	/**
	 * Gets the remark.
	 *
	 * @return the remark
	 */
	@Column(name = "remark")
	public String getRemark() {
		return this.remark;
	}

	/**
	 * Sets the remark.
	 *
	 * @param remark the new remark
	 */
	public void setRemark(String remark) {
		this.remark = remark;
	}

	/**
	 * Gets the trans date.
	 *
	 * @return the trans date
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "trans_date", nullable = false, length = 13)
	public Date getTransDate() {
		return this.transDate;
	}

	/**
	 * Sets the trans date.
	 *
	 * @param transDate the new trans date
	 */
	public void setTransDate(Date transDate) {
		this.transDate = transDate;
	}

	/**
	 * Gets the created date.
	 *
	 * @return the created date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	/**
	 * Sets the created date.
	 *
	 * @param createdDate the new created date
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	/**
	 * Gets the stand harvest impl declares.
	 *
	 * @return the stand harvest impl declares
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "standHarvestImplTransport")
	public Set<StandHarvestImplDeclare> getStandHarvestImplDeclares() {
		return this.standHarvestImplDeclares;
	}

	/**
	 * Sets the stand harvest impl declares.
	 *
	 * @param standHarvestImplDeclares the new stand harvest impl declares
	 */
	public void setStandHarvestImplDeclares(Set<StandHarvestImplDeclare> standHarvestImplDeclares) {
		this.standHarvestImplDeclares = standHarvestImplDeclares;
	}

}
