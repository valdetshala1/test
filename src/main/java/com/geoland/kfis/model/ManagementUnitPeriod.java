package com.geoland.kfis.model;

// Generated Oct 6, 2015 3:26:51 PM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import org.hibernate.annotations.TypeDef;
import org.hibernate.spatial.GeometryType;
import com.vividsolutions.jts.geom.Geometry;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;

// TODO: Auto-generated Javadoc
/**
 * ManagementUnitPeriod generated by hbm2java.
 */
@Entity
@Table(name = "tgis_mu_period", schema = "public")
@TypeDef(name = "geometry", typeClass = GeometryType.class)
public class ManagementUnitPeriod extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The employee by created by. */
	private Employee employeeByCreatedBy;
	
	/** The employee by updated by. */
	private Employee employeeByUpdatedBy;
	
	/** The management unit. */
	private ManagementUnit managementUnit;
	
	/** The trnx id. */
	private String trnxId;
	
	/** The geom. */
	private Geometry theGeom;
	
	/** The isactive. */
	private String isactive;
	
	/** The start date. */
	private Date startDate;
	
	/** The end date. */
	private Date endDate;
	
	/** The created date. */
	private Date createdDate;
	
	/** The updated date. */
	private Date updatedDate;
	
	/** The note. */
	private String note;
	
	/** The compartments. */
	private Set<Compartment> compartments = new HashSet<Compartment>(0);

	/**
	 * Instantiates a new management unit period.
	 */
	public ManagementUnitPeriod() {
	}

	/**
	 * Instantiates a new management unit period.
	 *
	 * @param employeeByCreatedBy the employee by created by
	 * @param managementUnit the management unit
	 * @param trnxId the trnx id
	 * @param isactive the isactive
	 * @param startDate the start date
	 * @param endDate the end date
	 * @param createdDate the created date
	 */
	public ManagementUnitPeriod(Employee employeeByCreatedBy,
			ManagementUnit managementUnit, String trnxId, String isactive,
			Date startDate, Date endDate, Date createdDate) {
		this.employeeByCreatedBy = employeeByCreatedBy;
		this.managementUnit = managementUnit;
		this.trnxId = trnxId;
		this.isactive = isactive;
		this.startDate = startDate;
		this.endDate = endDate;
		this.createdDate = createdDate;
	}

	/**
	 * Instantiates a new management unit period.
	 *
	 * @param employeeByCreatedBy the employee by created by
	 * @param employeeByUpdatedBy the employee by updated by
	 * @param managementUnit the management unit
	 * @param trnxId the trnx id
	 * @param theGeom the the geom
	 * @param isactive the isactive
	 * @param startDate the start date
	 * @param endDate the end date
	 * @param createdDate the created date
	 * @param updatedDate the updated date
	 * @param note the note
	 * @param compartments the compartments
	 */
	public ManagementUnitPeriod(Employee employeeByCreatedBy,
			Employee employeeByUpdatedBy, ManagementUnit managementUnit,
			String trnxId, Geometry theGeom, String isactive, Date startDate,
			Date endDate, Date createdDate, Date updatedDate, String note,
			Set<Compartment> compartments) {
		this.employeeByCreatedBy = employeeByCreatedBy;
		this.employeeByUpdatedBy = employeeByUpdatedBy;
		this.managementUnit = managementUnit;
		this.trnxId = trnxId;
		this.theGeom = theGeom;
		this.isactive = isactive;
		this.startDate = startDate;
		this.endDate = endDate;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.note = note;
		this.compartments = compartments;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the employee by created by.
	 *
	 * @return the employee by created by
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Employee getEmployeeByCreatedBy() {
		return this.employeeByCreatedBy;
	}

	/**
	 * Sets the employee by created by.
	 *
	 * @param employeeByCreatedBy the new employee by created by
	 */
	public void setEmployeeByCreatedBy(Employee employeeByCreatedBy) {
		this.employeeByCreatedBy = employeeByCreatedBy;
	}

	/**
	 * Gets the employee by updated by.
	 *
	 * @return the employee by updated by
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updated_by")
	public Employee getEmployeeByUpdatedBy() {
		return this.employeeByUpdatedBy;
	}

	/**
	 * Sets the employee by updated by.
	 *
	 * @param employeeByUpdatedBy the new employee by updated by
	 */
	public void setEmployeeByUpdatedBy(Employee employeeByUpdatedBy) {
		this.employeeByUpdatedBy = employeeByUpdatedBy;
	}

	/**
	 * Gets the management unit.
	 *
	 * @return the management unit
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mu_id", nullable = false)
	public ManagementUnit getManagementUnit() {
		return this.managementUnit;
	}

	/**
	 * Sets the management unit.
	 *
	 * @param managementUnit the new management unit
	 */
	public void setManagementUnit(ManagementUnit managementUnit) {
		this.managementUnit = managementUnit;
	}

	/**
	 * Gets the trnx id.
	 *
	 * @return the trnx id
	 */
	@Column(name = "trnx_id", nullable = false, length = 36)
	public String getTrnxId() {
		return this.trnxId;
	}

	/**
	 * Sets the trnx id.
	 *
	 * @param trnxId the new trnx id
	 */
	public void setTrnxId(String trnxId) {
		this.trnxId = trnxId;
	}

	/**
	 * Gets the the geom.
	 *
	 * @return the the geom
	 */
	@Column(name = "the_geom")
	@Type(type = "org.hibernate.spatial.GeometryType")
	public Geometry getTheGeom() {
		return this.theGeom;
	}

	/**
	 * Sets the the geom.
	 *
	 * @param theGeom the new the geom
	 */
	public void setTheGeom(Geometry theGeom) {
		this.theGeom = theGeom;
	}

	/**
	 * Gets the isactive.
	 *
	 * @return the isactive
	 */
	@Column(name = "isactive", nullable = false, length = 1)
	public String getIsactive() {
		return this.isactive;
	}

	/**
	 * Sets the isactive.
	 *
	 * @param isactive the new isactive
	 */
	public void setIsactive(String isactive) {
		this.isactive = isactive;
	}

	/**
	 * Gets the start date.
	 *
	 * @return the start date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date", nullable = false, length = 29)
	public Date getStartDate() {
		return this.startDate;
	}

	/**
	 * Sets the start date.
	 *
	 * @param startDate the new start date
	 */
	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	/**
	 * Gets the end date.
	 *
	 * @return the end date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_date", nullable = false, length = 29)
	public Date getEndDate() {
		return this.endDate;
	}

	/**
	 * Sets the end date.
	 *
	 * @param endDate the new end date
	 */
	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	/**
	 * Gets the created date.
	 *
	 * @return the created date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	/**
	 * Sets the created date.
	 *
	 * @param createdDate the new created date
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	/**
	 * Gets the updated date.
	 *
	 * @return the updated date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	/**
	 * Sets the updated date.
	 *
	 * @param updatedDate the new updated date
	 */
	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	/**
	 * Gets the note.
	 *
	 * @return the note
	 */
	@Column(name = "note")
	public String getNote() {
		return this.note;
	}

	/**
	 * Sets the note.
	 *
	 * @param note the new note
	 */
	public void setNote(String note) {
		this.note = note;
	}

	/**
	 * Gets the compartments.
	 *
	 * @return the compartments
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "managementUnitPeriod")
	public Set<Compartment> getCompartments() {
		return this.compartments;
	}

	/**
	 * Sets the compartments.
	 *
	 * @param compartments the new compartments
	 */
	public void setCompartments(Set<Compartment> compartments) {
		this.compartments = compartments;
	}

}
