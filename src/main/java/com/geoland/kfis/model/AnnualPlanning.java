package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * AnnualPlanning generated by hbm2java.
 */
@Entity
@Table(name = "tfrm_annual_planning", schema = "public")
public class AnnualPlanning extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The person. */
	private Person person;
	
	/** The cadastral municipality. */
	private CadastralMunicipality cadastralMunicipality;
	
	/** The annual planning status. */
	private AnnualPlanningStatus annualPlanningStatus;
	
	/** The year. */
	private Short year;
	
	/** The operation level. */
	private Short operationLevel;
	
	/** The created date. */
	private Date createdDate;
	
	/** The remarks. */
	private String remarks;
	
	/** The annual planning statuses. */
	private Set<AnnualPlanningStatus> annualPlanningStatuses = new HashSet<AnnualPlanningStatus>(
			0);
	
	/** The activities. */
	private Set<Activity> activities = new HashSet<Activity>(0);

	/**
	 * Instantiates a new annual planning.
	 */
	public AnnualPlanning() {
	}

	/**
	 * Instantiates a new annual planning.
	 *
	 * @param person the person
	 * @param year the year
	 * @param operationLevel the operation level
	 * @param createdDate the created date
	 */
	public AnnualPlanning(Person person, Short year, Short operationLevel,
			Date createdDate) {
		this.person = person;
		this.year = year;
		this.operationLevel = operationLevel;
		this.createdDate = createdDate;
	}

	/**
	 * Instantiates a new annual planning.
	 *
	 * @param person the person
	 * @param cadastralMunicipality the cadastral municipality
	 * @param annualPlanningStatus the annual planning status
	 * @param year the year
	 * @param operationLevel the operation level
	 * @param createdDate the created date
	 * @param remarks the remarks
	 * @param annualPlanningStatuses the annual planning statuses
	 * @param activities the activities
	 */
	public AnnualPlanning(Person person,
			CadastralMunicipality cadastralMunicipality,
			AnnualPlanningStatus annualPlanningStatus, Short year,
			Short operationLevel, Date createdDate, String remarks,
			Set<AnnualPlanningStatus> annualPlanningStatuses,
			Set<Activity> activities) {
		this.person = person;
		this.cadastralMunicipality = cadastralMunicipality;
		this.annualPlanningStatus = annualPlanningStatus;
		this.year = year;
		this.operationLevel = operationLevel;
		this.createdDate = createdDate;
		this.remarks = remarks;
		this.annualPlanningStatuses = annualPlanningStatuses;
		this.activities = activities;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the person.
	 *
	 * @return the person
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	/**
	 * Sets the person.
	 *
	 * @param person the new person
	 */
	public void setPerson(Person person) {
		this.person = person;
	}

	/**
	 * Gets the cadastral municipality.
	 *
	 * @return the cadastral municipality
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mun_id")
	public CadastralMunicipality getCadastralMunicipality() {
		return this.cadastralMunicipality;
	}

	/**
	 * Sets the cadastral municipality.
	 *
	 * @param cadastralMunicipality the new cadastral municipality
	 */
	public void setCadastralMunicipality(
			CadastralMunicipality cadastralMunicipality) {
		this.cadastralMunicipality = cadastralMunicipality;
	}

	/**
	 * Gets the annual planning status.
	 *
	 * @return the annual planning status
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status_id")
	public AnnualPlanningStatus getAnnualPlanningStatus() {
		return this.annualPlanningStatus;
	}

	/**
	 * Sets the annual planning status.
	 *
	 * @param annualPlanningStatus the new annual planning status
	 */
	public void setAnnualPlanningStatus(
			AnnualPlanningStatus annualPlanningStatus) {
		this.annualPlanningStatus = annualPlanningStatus;
	}

	/**
	 * Gets the year.
	 *
	 * @return the year
	 */
	@Column(name = "year", nullable = false)
	public Short getYear() {
		return this.year;
	}

	/**
	 * Sets the year.
	 *
	 * @param year the new year
	 */
	public void setYear(Short year) {
		this.year = year;
	}

	/**
	 * Gets the operation level.
	 *
	 * @return the operation level
	 */
	@Column(name = "operation_level", nullable = false)
	public Short getOperationLevel() {
		return this.operationLevel;
	}

	/**
	 * Sets the operation level.
	 *
	 * @param operationLevel the new operation level
	 */
	public void setOperationLevel(Short operationLevel) {
		this.operationLevel = operationLevel;
	}

	/**
	 * Gets the created date.
	 *
	 * @return the created date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	/**
	 * Sets the created date.
	 *
	 * @param createdDate the new created date
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	/**
	 * Gets the remarks.
	 *
	 * @return the remarks
	 */
	@Column(name = "remarks")
	public String getRemarks() {
		return this.remarks;
	}

	/**
	 * Sets the remarks.
	 *
	 * @param remarks the new remarks
	 */
	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	/**
	 * Gets the annual planning statuses.
	 *
	 * @return the annual planning statuses
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "annualPlanning")
	public Set<AnnualPlanningStatus> getAnnualPlanningStatuses() {
		return this.annualPlanningStatuses;
	}

	/**
	 * Sets the annual planning statuses.
	 *
	 * @param annualPlanningStatuses the new annual planning statuses
	 */
	public void setAnnualPlanningStatuses(
			Set<AnnualPlanningStatus> annualPlanningStatuses) {
		this.annualPlanningStatuses = annualPlanningStatuses;
	}

	/**
	 * Gets the activities.
	 *
	 * @return the activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "annualPlanning")
	public Set<Activity> getActivities() {
		return this.activities;
	}

	/**
	 * Sets the activities.
	 *
	 * @param activities the new activities
	 */
	public void setActivities(Set<Activity> activities) {
		this.activities = activities;
	}

}
