package com.geoland.kfis.model;

// Generated Mar 25, 2015 2:09:17 PM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import org.hibernate.annotations.Type;
import com.geoland.kfis.persistence.hibernate.usertypes.Merpillar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * MerProject generated by hbm2java.
 */
@Entity
@Table(name = "tmer_project", schema = "public")
public class MerProject extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The person. */
	private Person person;
	
	/** The name. */
	private String name;
	
	/** The name en. */
	private String nameEn;
	
	/** The name sr. */
	private String nameSr;
	
	/** The code. */
	private Character code;
	
	/** The pillar. */
	private Merpillar pillar;
	
	/** The description. */
	private String description;
	
	/** The created date. */
	private Date createdDate;
	
	/** The mer sub projects. */
	private Set<MerSubProject> merSubProjects = new HashSet<MerSubProject>(0);

	/**
	 * Instantiates a new mer project.
	 */
	public MerProject() {
	}

	/**
	 * Instantiates a new mer project.
	 *
	 * @param person the person
	 * @param name the name
	 * @param nameEn the name en
	 * @param code the code
	 * @param pillar the pillar
	 * @param createdDate the created date
	 */
	public MerProject(Person person, String name, String nameEn,
			Character code, Merpillar pillar, Date createdDate) {
		this.person = person;
		this.name = name;
		this.nameEn = nameEn;
		this.code = code;
		this.pillar = pillar;
		this.createdDate = createdDate;
	}

	/**
	 * Instantiates a new mer project.
	 *
	 * @param person the person
	 * @param name the name
	 * @param nameEn the name en
	 * @param nameSr the name sr
	 * @param code the code
	 * @param pillar the pillar
	 * @param description the description
	 * @param createdDate the created date
	 * @param merSubProjects the mer sub projects
	 */
	public MerProject(Person person, String name, String nameEn, String nameSr,
			Character code, Merpillar pillar, String description,
			Date createdDate, Set<MerSubProject> merSubProjects) {
		this.person = person;
		this.name = name;
		this.nameEn = nameEn;
		this.nameSr = nameSr;
		this.code = code;
		this.pillar = pillar;
		this.description = description;
		this.createdDate = createdDate;
		this.merSubProjects = merSubProjects;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the person.
	 *
	 * @return the person
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	/**
	 * Sets the person.
	 *
	 * @param person the new person
	 */
	public void setPerson(Person person) {
		this.person = person;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the name en.
	 *
	 * @return the name en
	 */
	@Column(name = "name_en", nullable = false, length = 100)
	public String getNameEn() {
		return this.nameEn;
	}

	/**
	 * Sets the name en.
	 *
	 * @param nameEn the new name en
	 */
	public void setNameEn(String nameEn) {
		this.nameEn = nameEn;
	}

	/**
	 * Gets the name sr.
	 *
	 * @return the name sr
	 */
	@Column(name = "name_sr", length = 100)
	public String getNameSr() {
		return this.nameSr;
	}

	/**
	 * Sets the name sr.
	 *
	 * @param nameSr the new name sr
	 */
	public void setNameSr(String nameSr) {
		this.nameSr = nameSr;
	}

	/**
	 * Gets the code.
	 *
	 * @return the code
	 */
	@Column(name = "code", nullable = false, length = 1)
	public Character getCode() {
		return this.code;
	}

	/**
	 * Sets the code.
	 *
	 * @param code the new code
	 */
	public void setCode(Character code) {
		this.code = code;
	}

	/**
	 * Gets the pillar.
	 *
	 * @return the pillar
	 */
	@Column(name = "pillar", nullable = false, length = 3)
	@Type(type = "com.geoland.kfis.persistence.hibernate.usertypes.MerpillarUserType")
	public Merpillar getPillar() {
		return this.pillar;
	}

	/**
	 * Sets the pillar.
	 *
	 * @param pillar the new pillar
	 */
	public void setPillar(Merpillar pillar) {
		this.pillar = pillar;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the created date.
	 *
	 * @return the created date
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", nullable = false, length = 13)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	/**
	 * Sets the created date.
	 *
	 * @param createdDate the new created date
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	/**
	 * Gets the mer sub projects.
	 *
	 * @return the mer sub projects
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merProject")
	public Set<MerSubProject> getMerSubProjects() {
		return this.merSubProjects;
	}

	/**
	 * Sets the mer sub projects.
	 *
	 * @param merSubProjects the new mer sub projects
	 */
	public void setMerSubProjects(Set<MerSubProject> merSubProjects) {
		this.merSubProjects = merSubProjects;
	}

}
