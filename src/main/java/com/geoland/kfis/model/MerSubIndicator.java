package com.geoland.kfis.model;

// Generated Mar 30, 2015 1:20:49 PM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * MerSubIndicator generated by hbm2java.
 */
@Entity
@Table(name = "tmer_sub_indicator", schema = "public")
public class MerSubIndicator extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The mer indicator. */
	private MerIndicator merIndicator;
	
	/** The person. */
	private Person person;
	
	/** The uom. */
	private Uom uom;
	
	/** The name. */
	private String name;
	
	/** The name en. */
	private String nameEn;
	
	/** The name sr. */
	private String nameSr;
	
	/** The note. */
	private String note;
	
	/** The created date. */
	private Date createdDate;
	
	/** The mer perf evaluations. */
	private Set<MerPerfEvaluation> merPerfEvaluations = new HashSet<MerPerfEvaluation>(
			0);

	/**
	 * Instantiates a new mer sub indicator.
	 */
	public MerSubIndicator() {
	}

	/**
	 * Instantiates a new mer sub indicator.
	 *
	 * @param merIndicator the mer indicator
	 * @param person the person
	 * @param uom the uom
	 * @param name the name
	 * @param nameEn the name en
	 * @param nameSr the name sr
	 * @param createdDate the created date
	 */
	public MerSubIndicator(MerIndicator merIndicator, Person person, Uom uom,
			String name, String nameEn, String nameSr, Date createdDate) {
		this.merIndicator = merIndicator;
		this.person = person;
		this.uom = uom;
		this.name = name;
		this.nameEn = nameEn;
		this.nameSr = nameSr;
		this.createdDate = createdDate;
	}

	/**
	 * Instantiates a new mer sub indicator.
	 *
	 * @param merIndicator the mer indicator
	 * @param person the person
	 * @param uom the uom
	 * @param name the name
	 * @param nameEn the name en
	 * @param nameSr the name sr
	 * @param note the note
	 * @param createdDate the created date
	 * @param merPerfEvaluations the mer perf evaluations
	 */
	public MerSubIndicator(MerIndicator merIndicator, Person person, Uom uom,
			String name, String nameEn, String nameSr, String note,
			Date createdDate, Set<MerPerfEvaluation> merPerfEvaluations) {
		this.merIndicator = merIndicator;
		this.person = person;
		this.uom = uom;
		this.name = name;
		this.nameEn = nameEn;
		this.nameSr = nameSr;
		this.note = note;
		this.createdDate = createdDate;
		this.merPerfEvaluations = merPerfEvaluations;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the mer indicator.
	 *
	 * @return the mer indicator
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "indicator_id", nullable = false)
	public MerIndicator getMerIndicator() {
		return this.merIndicator;
	}

	/**
	 * Sets the mer indicator.
	 *
	 * @param merIndicator the new mer indicator
	 */
	public void setMerIndicator(MerIndicator merIndicator) {
		this.merIndicator = merIndicator;
	}

	/**
	 * Gets the person.
	 *
	 * @return the person
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	/**
	 * Sets the person.
	 *
	 * @param person the new person
	 */
	public void setPerson(Person person) {
		this.person = person;
	}

	/**
	 * Gets the uom.
	 *
	 * @return the uom
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uom_id", nullable = false)
	public Uom getUom() {
		return this.uom;
	}

	/**
	 * Sets the uom.
	 *
	 * @param uom the new uom
	 */
	public void setUom(Uom uom) {
		this.uom = uom;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the name en.
	 *
	 * @return the name en
	 */
	@Column(name = "name_en", nullable = false)
	public String getNameEn() {
		return this.nameEn;
	}

	/**
	 * Sets the name en.
	 *
	 * @param nameEn the new name en
	 */
	public void setNameEn(String nameEn) {
		this.nameEn = nameEn;
	}

	/**
	 * Gets the name sr.
	 *
	 * @return the name sr
	 */
	@Column(name = "name_sr", nullable = false)
	public String getNameSr() {
		return this.nameSr;
	}

	/**
	 * Sets the name sr.
	 *
	 * @param nameSr the new name sr
	 */
	public void setNameSr(String nameSr) {
		this.nameSr = nameSr;
	}

	/**
	 * Gets the note.
	 *
	 * @return the note
	 */
	@Column(name = "note")
	public String getNote() {
		return this.note;
	}

	/**
	 * Sets the note.
	 *
	 * @param note the new note
	 */
	public void setNote(String note) {
		this.note = note;
	}

	/**
	 * Gets the created date.
	 *
	 * @return the created date
	 */
	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", nullable = false, length = 13)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	/**
	 * Sets the created date.
	 *
	 * @param createdDate the new created date
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	/**
	 * Gets the mer perf evaluations.
	 *
	 * @return the mer perf evaluations
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "merSubIndicator")
	public Set<MerPerfEvaluation> getMerPerfEvaluations() {
		return this.merPerfEvaluations;
	}

	/**
	 * Sets the mer perf evaluations.
	 *
	 * @param merPerfEvaluations the new mer perf evaluations
	 */
	public void setMerPerfEvaluations(Set<MerPerfEvaluation> merPerfEvaluations) {
		this.merPerfEvaluations = merPerfEvaluations;
	}

}
