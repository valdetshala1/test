package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * FuelConsum generated by hbm2java.
 */
@Entity
@Table(name = "tfuell_consum", schema = "public")
public class FuelConsum extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The employee by created by. */
	private Employee employeeByCreatedBy;
	
	/** The vehicle. */
	private Vehicle vehicle;
	
	/** The employee by driver id. */
	private Employee employeeByDriverId;
	
	/** The vendor. */
	private String vendor;
	
	/** The invoice no. */
	private String invoiceNo;
	
	/** The date. */
	private Date date;
	
	/** The type feul. */
	private String typeFeul;
	
	/** The liter. */
	private BigDecimal liter;
	
	/** The mileage when filled. */
	private String mileageWhenFilled;
	
	/** The total mileage. */
	private String totalMileage;
	
	/** The created time. */
	private Date createdTime;

	/**
	 * Instantiates a new fuel consum.
	 */
	public FuelConsum() {
	}

	/**
	 * Instantiates a new fuel consum.
	 *
	 * @param employeeByCreatedBy the employee by created by
	 * @param vehicle the vehicle
	 * @param employeeByDriverId the employee by driver id
	 * @param liter the liter
	 * @param createdTime the created time
	 */
	public FuelConsum(Employee employeeByCreatedBy, Vehicle vehicle,
			Employee employeeByDriverId, BigDecimal liter, Date createdTime) {
		this.employeeByCreatedBy = employeeByCreatedBy;
		this.vehicle = vehicle;
		this.employeeByDriverId = employeeByDriverId;
		this.liter = liter;
		this.createdTime = createdTime;
	}

	/**
	 * Instantiates a new fuel consum.
	 *
	 * @param employeeByCreatedBy the employee by created by
	 * @param vehicle the vehicle
	 * @param employeeByDriverId the employee by driver id
	 * @param vendor the vendor
	 * @param invoiceNo the invoice no
	 * @param date the date
	 * @param typeFeul the type feul
	 * @param liter the liter
	 * @param mileageWhenFilled the mileage when filled
	 * @param totalMileage the total mileage
	 * @param createdTime the created time
	 */
	public FuelConsum(Employee employeeByCreatedBy, Vehicle vehicle,
			Employee employeeByDriverId, String vendor, String invoiceNo,
			Date date, String typeFeul, BigDecimal liter,
			String mileageWhenFilled, String totalMileage, Date createdTime) {
		this.employeeByCreatedBy = employeeByCreatedBy;
		this.vehicle = vehicle;
		this.employeeByDriverId = employeeByDriverId;
		this.vendor = vendor;
		this.invoiceNo = invoiceNo;
		this.date = date;
		this.typeFeul = typeFeul;
		this.liter = liter;
		this.mileageWhenFilled = mileageWhenFilled;
		this.totalMileage = totalMileage;
		this.createdTime = createdTime;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the employee by created by.
	 *
	 * @return the employee by created by
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Employee getEmployeeByCreatedBy() {
		return this.employeeByCreatedBy;
	}

	/**
	 * Sets the employee by created by.
	 *
	 * @param employeeByCreatedBy the new employee by created by
	 */
	public void setEmployeeByCreatedBy(Employee employeeByCreatedBy) {
		this.employeeByCreatedBy = employeeByCreatedBy;
	}

	/**
	 * Gets the vehicle.
	 *
	 * @return the vehicle
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "vehicles_id", nullable = false)
	public Vehicle getVehicle() {
		return this.vehicle;
	}

	/**
	 * Sets the vehicle.
	 *
	 * @param vehicle the new vehicle
	 */
	public void setVehicle(Vehicle vehicle) {
		this.vehicle = vehicle;
	}

	/**
	 * Gets the employee by driver id.
	 *
	 * @return the employee by driver id
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "driver_id", nullable = false)
	public Employee getEmployeeByDriverId() {
		return this.employeeByDriverId;
	}

	/**
	 * Sets the employee by driver id.
	 *
	 * @param employeeByDriverId the new employee by driver id
	 */
	public void setEmployeeByDriverId(Employee employeeByDriverId) {
		this.employeeByDriverId = employeeByDriverId;
	}

	/**
	 * Gets the vendor.
	 *
	 * @return the vendor
	 */
	@Column(name = "vendor", length = 50)
	public String getVendor() {
		return this.vendor;
	}

	/**
	 * Sets the vendor.
	 *
	 * @param vendor the new vendor
	 */
	public void setVendor(String vendor) {
		this.vendor = vendor;
	}

	/**
	 * Gets the invoice no.
	 *
	 * @return the invoice no
	 */
	@Column(name = "invoice_no", length = 25)
	public String getInvoiceNo() {
		return this.invoiceNo;
	}

	/**
	 * Sets the invoice no.
	 *
	 * @param invoiceNo the new invoice no
	 */
	public void setInvoiceNo(String invoiceNo) {
		this.invoiceNo = invoiceNo;
	}

	/**
	 * Gets the date.
	 *
	 * @return the date
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date", length = 29)
	public Date getDate() {
		return this.date;
	}

	/**
	 * Sets the date.
	 *
	 * @param date the new date
	 */
	public void setDate(Date date) {
		this.date = date;
	}

	/**
	 * Gets the type feul.
	 *
	 * @return the type feul
	 */
	@Column(name = "type_feul", length = 25)
	public String getTypeFeul() {
		return this.typeFeul;
	}

	/**
	 * Sets the type feul.
	 *
	 * @param typeFeul the new type feul
	 */
	public void setTypeFeul(String typeFeul) {
		this.typeFeul = typeFeul;
	}

	/**
	 * Gets the liter.
	 *
	 * @return the liter
	 */
	@Column(name = "liter", nullable = false, precision = 10)
	public BigDecimal getLiter() {
		return this.liter;
	}

	/**
	 * Sets the liter.
	 *
	 * @param liter the new liter
	 */
	public void setLiter(BigDecimal liter) {
		this.liter = liter;
	}

	/**
	 * Gets the mileage when filled.
	 *
	 * @return the mileage when filled
	 */
	@Column(name = "mileage_when_filled", length = 20)
	public String getMileageWhenFilled() {
		return this.mileageWhenFilled;
	}

	/**
	 * Sets the mileage when filled.
	 *
	 * @param mileageWhenFilled the new mileage when filled
	 */
	public void setMileageWhenFilled(String mileageWhenFilled) {
		this.mileageWhenFilled = mileageWhenFilled;
	}

	/**
	 * Gets the total mileage.
	 *
	 * @return the total mileage
	 */
	@Column(name = "total_mileage", length = 20)
	public String getTotalMileage() {
		return this.totalMileage;
	}

	/**
	 * Sets the total mileage.
	 *
	 * @param totalMileage the new total mileage
	 */
	public void setTotalMileage(String totalMileage) {
		this.totalMileage = totalMileage;
	}

	/**
	 * Gets the created time.
	 *
	 * @return the created time
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_time", nullable = false, length = 29)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	/**
	 * Sets the created time.
	 *
	 * @param createdTime the new created time
	 */
	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

}
