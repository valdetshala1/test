package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * UnitsMetric generated by hbm2java.
 */
@Entity
@Table(name = "tunits_metric", schema = "public")
public class UnitsMetric extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The symbol. */
	private String symbol;
	
	/** The unit. */
	private Double unit;
	
	/** The name. */
	private String name;
	
	/** The name sr. */
	private String nameSr;
	
	/** The name en. */
	private String nameEn;
	
	/** The metric. */
	private String metric;
	
	/** The measurement. */
	private String measurement;
	
	/** The relationship. */
	private String relationship;
	
	/** The active. */
	private Boolean active;
	
	/** The weight. */
	private String weight;
	
	/** The protection activities. */
	private Set<ProtectionActivity> protectionActivities = new HashSet<ProtectionActivity>(
			0);

	/**
	 * Instantiates a new units metric.
	 */
	public UnitsMetric() {
	}

	/**
	 * Instantiates a new units metric.
	 *
	 * @param weight the weight
	 */
	public UnitsMetric(String weight) {
		this.weight = weight;
	}

	/**
	 * Instantiates a new units metric.
	 *
	 * @param symbol the symbol
	 * @param unit the unit
	 * @param name the name
	 * @param nameSr the name sr
	 * @param nameEn the name en
	 * @param metric the metric
	 * @param measurement the measurement
	 * @param relationship the relationship
	 * @param active the active
	 * @param weight the weight
	 * @param protectionActivities the protection activities
	 */
	public UnitsMetric(String symbol, Double unit, String name, String nameSr,
			String nameEn, String metric, String measurement,
			String relationship, Boolean active, String weight,
			Set<ProtectionActivity> protectionActivities) {
		this.symbol = symbol;
		this.unit = unit;
		this.name = name;
		this.nameSr = nameSr;
		this.nameEn = nameEn;
		this.metric = metric;
		this.measurement = measurement;
		this.relationship = relationship;
		this.active = active;
		this.weight = weight;
		this.protectionActivities = protectionActivities;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the symbol.
	 *
	 * @return the symbol
	 */
	@Column(name = "symbol", length = 10)
	public String getSymbol() {
		return this.symbol;
	}

	/**
	 * Sets the symbol.
	 *
	 * @param symbol the new symbol
	 */
	public void setSymbol(String symbol) {
		this.symbol = symbol;
	}

	/**
	 * Gets the unit.
	 *
	 * @return the unit
	 */
	@Column(name = "unit", precision = 17, scale = 17)
	public Double getUnit() {
		return this.unit;
	}

	/**
	 * Sets the unit.
	 *
	 * @param unit the new unit
	 */
	public void setUnit(Double unit) {
		this.unit = unit;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the name sr.
	 *
	 * @return the name sr
	 */
	@Column(name = "name_sr", length = 50)
	public String getNameSr() {
		return this.nameSr;
	}

	/**
	 * Sets the name sr.
	 *
	 * @param nameSr the new name sr
	 */
	public void setNameSr(String nameSr) {
		this.nameSr = nameSr;
	}

	/**
	 * Gets the name en.
	 *
	 * @return the name en
	 */
	@Column(name = "name_en", length = 50)
	public String getNameEn() {
		return this.nameEn;
	}

	/**
	 * Sets the name en.
	 *
	 * @param nameEn the new name en
	 */
	public void setNameEn(String nameEn) {
		this.nameEn = nameEn;
	}

	/**
	 * Gets the metric.
	 *
	 * @return the metric
	 */
	@Column(name = "metric", length = 20)
	public String getMetric() {
		return this.metric;
	}

	/**
	 * Sets the metric.
	 *
	 * @param metric the new metric
	 */
	public void setMetric(String metric) {
		this.metric = metric;
	}

	/**
	 * Gets the measurement.
	 *
	 * @return the measurement
	 */
	@Column(name = "measurement", length = 50)
	public String getMeasurement() {
		return this.measurement;
	}

	/**
	 * Sets the measurement.
	 *
	 * @param measurement the new measurement
	 */
	public void setMeasurement(String measurement) {
		this.measurement = measurement;
	}

	/**
	 * Gets the relationship.
	 *
	 * @return the relationship
	 */
	@Column(name = "relationship", length = 50)
	public String getRelationship() {
		return this.relationship;
	}

	/**
	 * Sets the relationship.
	 *
	 * @param relationship the new relationship
	 */
	public void setRelationship(String relationship) {
		this.relationship = relationship;
	}

	/**
	 * Gets the active.
	 *
	 * @return the active
	 */
	@Column(name = "active")
	public Boolean getActive() {
		return this.active;
	}

	/**
	 * Sets the active.
	 *
	 * @param active the new active
	 */
	public void setActive(Boolean active) {
		this.active = active;
	}

	/**
	 * Gets the weight.
	 *
	 * @return the weight
	 */
	@Column(name = "weight", nullable = false, length = 1)
	public String getWeight() {
		return this.weight;
	}

	/**
	 * Sets the weight.
	 *
	 * @param weight the new weight
	 */
	public void setWeight(String weight) {
		this.weight = weight;
	}

	/**
	 * Gets the protection activities.
	 *
	 * @return the protection activities
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unitsMetric")
	public Set<ProtectionActivity> getProtectionActivities() {
		return this.protectionActivities;
	}

	/**
	 * Sets the protection activities.
	 *
	 * @param protectionActivities the new protection activities
	 */
	public void setProtectionActivities(
			Set<ProtectionActivity> protectionActivities) {
		this.protectionActivities = protectionActivities;
	}

}
