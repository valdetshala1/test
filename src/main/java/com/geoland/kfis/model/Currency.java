package com.geoland.kfis.model;

// Generated Feb 11, 2015 2:26:59 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * Currency generated by hbm2java.
 */
@Entity
@Table(name = "tcurrency", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "iso_code"))
public class Currency extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The person by createdby. */
	private Person personByCreatedby;
	
	/** The person by updatedby. */
	private Person personByUpdatedby;
	
	/** The isactive. */
	private String isactive;
	
	/** The created. */
	private Date created;
	
	/** The updated. */
	private Date updated;
	
	/** The iso code. */
	private String isoCode;
	
	/** The cursymbol. */
	private String cursymbol;
	
	/** The description. */
	private String description;
	
	/** The stdprecision. */
	private BigDecimal stdprecision;
	
	/** The costingprecision. */
	private BigDecimal costingprecision;
	
	/** The priceprecision. */
	private BigDecimal priceprecision;
	
	/** The issymbolrightside. */
	private String issymbolrightside;
	
	/** The requisitions. */
	private Set<Requisition> requisitions = new HashSet<Requisition>(0);
	
	/** The purchase orders. */
	private Set<PurchaseOrder> purchaseOrders = new HashSet<PurchaseOrder>(0);

	/**
	 * Instantiates a new currency.
	 */
	public Currency() {
	}

	/**
	 * Instantiates a new currency.
	 *
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param isactive the isactive
	 * @param created the created
	 * @param updated the updated
	 * @param isoCode the iso code
	 * @param description the description
	 * @param stdprecision the stdprecision
	 * @param costingprecision the costingprecision
	 * @param priceprecision the priceprecision
	 */
	public Currency(Person personByCreatedby, Person personByUpdatedby,
			String isactive, Date created, Date updated, String isoCode,
			String description, BigDecimal stdprecision,
			BigDecimal costingprecision, BigDecimal priceprecision) {
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.isactive = isactive;
		this.created = created;
		this.updated = updated;
		this.isoCode = isoCode;
		this.description = description;
		this.stdprecision = stdprecision;
		this.costingprecision = costingprecision;
		this.priceprecision = priceprecision;
	}

	/**
	 * Instantiates a new currency.
	 *
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param isactive the isactive
	 * @param created the created
	 * @param updated the updated
	 * @param isoCode the iso code
	 * @param cursymbol the cursymbol
	 * @param description the description
	 * @param stdprecision the stdprecision
	 * @param costingprecision the costingprecision
	 * @param priceprecision the priceprecision
	 * @param issymbolrightside the issymbolrightside
	 * @param requisitions the requisitions
	 * @param purchaseOrders the purchase orders
	 */
	public Currency(Person personByCreatedby, Person personByUpdatedby,
			String isactive, Date created, Date updated, String isoCode,
			String cursymbol, String description, BigDecimal stdprecision,
			BigDecimal costingprecision, BigDecimal priceprecision,
			String issymbolrightside, Set<Requisition> requisitions,
			Set<PurchaseOrder> purchaseOrders) {
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.isactive = isactive;
		this.created = created;
		this.updated = updated;
		this.isoCode = isoCode;
		this.cursymbol = cursymbol;
		this.description = description;
		this.stdprecision = stdprecision;
		this.costingprecision = costingprecision;
		this.priceprecision = priceprecision;
		this.issymbolrightside = issymbolrightside;
		this.requisitions = requisitions;
		this.purchaseOrders = purchaseOrders;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the person by createdby.
	 *
	 * @return the person by createdby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdby", nullable = false)
	public Person getPersonByCreatedby() {
		return this.personByCreatedby;
	}

	/**
	 * Sets the person by createdby.
	 *
	 * @param personByCreatedby the new person by createdby
	 */
	public void setPersonByCreatedby(Person personByCreatedby) {
		this.personByCreatedby = personByCreatedby;
	}

	/**
	 * Gets the person by updatedby.
	 *
	 * @return the person by updatedby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedby", nullable = false)
	public Person getPersonByUpdatedby() {
		return this.personByUpdatedby;
	}

	/**
	 * Sets the person by updatedby.
	 *
	 * @param personByUpdatedby the new person by updatedby
	 */
	public void setPersonByUpdatedby(Person personByUpdatedby) {
		this.personByUpdatedby = personByUpdatedby;
	}

	/**
	 * Gets the isactive.
	 *
	 * @return the isactive
	 */
	@Column(name = "isactive", nullable = false, length = 1)
	public String getIsactive() {
		return this.isactive;
	}

	/**
	 * Sets the isactive.
	 *
	 * @param isactive the new isactive
	 */
	public void setIsactive(String isactive) {
		this.isactive = isactive;
	}

	/**
	 * Gets the created.
	 *
	 * @return the created
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	/**
	 * Sets the created.
	 *
	 * @param created the new created
	 */
	public void setCreated(Date created) {
		this.created = created;
	}

	/**
	 * Gets the updated.
	 *
	 * @return the updated
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	/**
	 * Sets the updated.
	 *
	 * @param updated the new updated
	 */
	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	/**
	 * Gets the iso code.
	 *
	 * @return the iso code
	 */
	@Column(name = "iso_code", unique = true, nullable = false, length = 3)
	public String getIsoCode() {
		return this.isoCode;
	}

	/**
	 * Sets the iso code.
	 *
	 * @param isoCode the new iso code
	 */
	public void setIsoCode(String isoCode) {
		this.isoCode = isoCode;
	}

	/**
	 * Gets the cursymbol.
	 *
	 * @return the cursymbol
	 */
	@Column(name = "cursymbol", length = 10)
	public String getCursymbol() {
		return this.cursymbol;
	}

	/**
	 * Sets the cursymbol.
	 *
	 * @param cursymbol the new cursymbol
	 */
	public void setCursymbol(String cursymbol) {
		this.cursymbol = cursymbol;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the stdprecision.
	 *
	 * @return the stdprecision
	 */
	@Column(name = "stdprecision", nullable = false, precision = 10, scale = 0)
	public BigDecimal getStdprecision() {
		return this.stdprecision;
	}

	/**
	 * Sets the stdprecision.
	 *
	 * @param stdprecision the new stdprecision
	 */
	public void setStdprecision(BigDecimal stdprecision) {
		this.stdprecision = stdprecision;
	}

	/**
	 * Gets the costingprecision.
	 *
	 * @return the costingprecision
	 */
	@Column(name = "costingprecision", nullable = false, precision = 10, scale = 0)
	public BigDecimal getCostingprecision() {
		return this.costingprecision;
	}

	/**
	 * Sets the costingprecision.
	 *
	 * @param costingprecision the new costingprecision
	 */
	public void setCostingprecision(BigDecimal costingprecision) {
		this.costingprecision = costingprecision;
	}

	/**
	 * Gets the priceprecision.
	 *
	 * @return the priceprecision
	 */
	@Column(name = "priceprecision", nullable = false, precision = 10, scale = 0)
	public BigDecimal getPriceprecision() {
		return this.priceprecision;
	}

	/**
	 * Sets the priceprecision.
	 *
	 * @param priceprecision the new priceprecision
	 */
	public void setPriceprecision(BigDecimal priceprecision) {
		this.priceprecision = priceprecision;
	}

	/**
	 * Gets the issymbolrightside.
	 *
	 * @return the issymbolrightside
	 */
	@Column(name = "issymbolrightside", length = 1)
	public String getIssymbolrightside() {
		return this.issymbolrightside;
	}

	/**
	 * Sets the issymbolrightside.
	 *
	 * @param issymbolrightside the new issymbolrightside
	 */
	public void setIssymbolrightside(String issymbolrightside) {
		this.issymbolrightside = issymbolrightside;
	}

	/**
	 * Gets the requisitions.
	 *
	 * @return the requisitions
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<Requisition> getRequisitions() {
		return this.requisitions;
	}

	/**
	 * Sets the requisitions.
	 *
	 * @param requisitions the new requisitions
	 */
	public void setRequisitions(Set<Requisition> requisitions) {
		this.requisitions = requisitions;
	}

	/**
	 * Gets the purchase orders.
	 *
	 * @return the purchase orders
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currency")
	public Set<PurchaseOrder> getPurchaseOrders() {
		return this.purchaseOrders;
	}

	/**
	 * Sets the purchase orders.
	 *
	 * @param purchaseOrders the new purchase orders
	 */
	public void setPurchaseOrders(Set<PurchaseOrder> purchaseOrders) {
		this.purchaseOrders = purchaseOrders;
	}

}
