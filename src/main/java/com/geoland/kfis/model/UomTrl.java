package com.geoland.kfis.model;

// Generated Feb 21, 2015 9:32:43 AM by Hibernate Tools 3.4.0.CR1

import com.geoland.framework.persistence.base.*;
import org.hibernate.annotations.Type;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * UomTrl generated by hbm2java.
 */
@Entity
@Table(name = "tuom_trl", schema = "public")
public class UomTrl extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The uom. */
	private Uom uom;
	
	/** The person by createdby. */
	private Person personByCreatedby;
	
	/** The person by updatedby. */
	private Person personByUpdatedby;
	
	/** The ad language. */
	private AdLanguage adLanguage;
	
	/** The isactive. */
	private String isactive;
	
	/** The uomsymbol. */
	private String uomsymbol;
	
	/** The name. */
	private String name;
	
	/** The description. */
	private String description;
	
	/** The istranslated. */
	private String istranslated;
	
	/** The created. */
	private Date created;
	
	/** The updated. */
	private Date updated;

	/**
	 * Instantiates a new uom trl.
	 */
	public UomTrl() {
	}

	/**
	 * Instantiates a new uom trl.
	 *
	 * @param uom the uom
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param adLanguage the ad language
	 * @param isactive the isactive
	 * @param name the name
	 * @param istranslated the istranslated
	 * @param created the created
	 * @param updated the updated
	 */
	public UomTrl(Uom uom, Person personByCreatedby, Person personByUpdatedby,
			AdLanguage adLanguage, String isactive, String name,
			String istranslated, Date created, Date updated) {
		this.uom = uom;
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.adLanguage = adLanguage;
		this.isactive = isactive;
		this.name = name;
		this.istranslated = istranslated;
		this.created = created;
		this.updated = updated;
	}

	/**
	 * Instantiates a new uom trl.
	 *
	 * @param uom the uom
	 * @param personByCreatedby the person by createdby
	 * @param personByUpdatedby the person by updatedby
	 * @param adLanguage the ad language
	 * @param isactive the isactive
	 * @param uomsymbol the uomsymbol
	 * @param name the name
	 * @param description the description
	 * @param istranslated the istranslated
	 * @param created the created
	 * @param updated the updated
	 */
	public UomTrl(Uom uom, Person personByCreatedby, Person personByUpdatedby,
			AdLanguage adLanguage, String isactive, String uomsymbol,
			String name, String description, String istranslated, Date created,
			Date updated) {
		this.uom = uom;
		this.personByCreatedby = personByCreatedby;
		this.personByUpdatedby = personByUpdatedby;
		this.adLanguage = adLanguage;
		this.isactive = isactive;
		this.uomsymbol = uomsymbol;
		this.name = name;
		this.description = description;
		this.istranslated = istranslated;
		this.created = created;
		this.updated = updated;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the uom.
	 *
	 * @return the uom
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "uom_id", nullable = false)
	public Uom getUom() {
		return this.uom;
	}

	/**
	 * Sets the uom.
	 *
	 * @param uom the new uom
	 */
	public void setUom(Uom uom) {
		this.uom = uom;
	}

	/**
	 * Gets the person by createdby.
	 *
	 * @return the person by createdby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdby", nullable = false)
	public Person getPersonByCreatedby() {
		return this.personByCreatedby;
	}

	/**
	 * Sets the person by createdby.
	 *
	 * @param personByCreatedby the new person by createdby
	 */
	public void setPersonByCreatedby(Person personByCreatedby) {
		this.personByCreatedby = personByCreatedby;
	}

	/**
	 * Gets the person by updatedby.
	 *
	 * @return the person by updatedby
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedby", nullable = false)
	public Person getPersonByUpdatedby() {
		return this.personByUpdatedby;
	}

	/**
	 * Sets the person by updatedby.
	 *
	 * @param personByUpdatedby the new person by updatedby
	 */
	public void setPersonByUpdatedby(Person personByUpdatedby) {
		this.personByUpdatedby = personByUpdatedby;
	}

	/**
	 * Gets the ad language.
	 *
	 * @return the ad language
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ad_language", nullable = false)
	public AdLanguage getAdLanguage() {
		return this.adLanguage;
	}

	/**
	 * Sets the ad language.
	 *
	 * @param adLanguage the new ad language
	 */
	public void setAdLanguage(AdLanguage adLanguage) {
		this.adLanguage = adLanguage;
	}

	/**
	 * Gets the isactive.
	 *
	 * @return the isactive
	 */
	@Column(name = "isactive", nullable = false, length = 1)
	public String getIsactive() {
		return this.isactive;
	}

	/**
	 * Sets the isactive.
	 *
	 * @param isactive the new isactive
	 */
	public void setIsactive(String isactive) {
		this.isactive = isactive;
	}

	/**
	 * Gets the uomsymbol.
	 *
	 * @return the uomsymbol
	 */
	@Column(name = "uomsymbol", length = 10)
	public String getUomsymbol() {
		return this.uomsymbol;
	}

	/**
	 * Sets the uomsymbol.
	 *
	 * @param uomsymbol the new uomsymbol
	 */
	public void setUomsymbol(String uomsymbol) {
		this.uomsymbol = uomsymbol;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false, length = 60)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the istranslated.
	 *
	 * @return the istranslated
	 */
	@Column(name = "istranslated", nullable = false, length = 1)
	public String getIstranslated() {
		return this.istranslated;
	}

	/**
	 * Sets the istranslated.
	 *
	 * @param istranslated the new istranslated
	 */
	public void setIstranslated(String istranslated) {
		this.istranslated = istranslated;
	}

	/**
	 * Gets the created.
	 *
	 * @return the created
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	/**
	 * Sets the created.
	 *
	 * @param created the new created
	 */
	public void setCreated(Date created) {
		this.created = created;
	}

	/**
	 * Gets the updated.
	 *
	 * @return the updated
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	/**
	 * Sets the updated.
	 *
	 * @param updated the new updated
	 */
	public void setUpdated(Date updated) {
		this.updated = updated;
	}

}
