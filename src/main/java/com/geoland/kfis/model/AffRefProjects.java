package com.geoland.kfis.model;
// Generated Nov 29, 2017 11:05:21 AM by Hibernate Tools 4.0.1.Final

import com.geoland.framework.persistence.base.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * AffRefProjects generated by hbm2java.
 */
@Entity
@Table(name = "taff_ref_projects", schema = "public")
public class AffRefProjects extends AbstractPersistentObject implements java.io.Serializable {

	/** The id. */
	private Long id;
	
	/** The person. */
	private Person person;
	
	/** The aff ref projects. */
	private AffRefProjects affRefProjects;
	
	/** The name. */
	private String name;
	
	/** The data from. */
	private String dataFrom;
	
	/** The remarks. */
	private String remarks;
	
	/** The created time. */
	private Date createdTime;
	
	/** The aff ref projectses. */
	private Set<AffRefProjects> affRefProjectses = new HashSet<AffRefProjects>(0);

	/**
	 * Instantiates a new aff ref projects.
	 */
	public AffRefProjects() {
	}

	/**
	 * Instantiates a new aff ref projects.
	 *
	 * @param person the person
	 * @param name the name
	 * @param createdTime the created time
	 */
	public AffRefProjects(Person person, String name, Date createdTime) {
		this.person = person;
		this.name = name;
		this.createdTime = createdTime;
	}

	/**
	 * Instantiates a new aff ref projects.
	 *
	 * @param person the person
	 * @param affRefProjects the aff ref projects
	 * @param name the name
	 * @param dataFrom the data from
	 * @param remarks the remarks
	 * @param createdTime the created time
	 * @param affRefProjectses the aff ref projectses
	 */
	public AffRefProjects(Person person, AffRefProjects affRefProjects, String name, String dataFrom, String remarks,
			Date createdTime, Set<AffRefProjects> affRefProjectses) {
		this.person = person;
		this.affRefProjects = affRefProjects;
		this.name = name;
		this.dataFrom = dataFrom;
		this.remarks = remarks;
		this.createdTime = createdTime;
		this.affRefProjectses = affRefProjectses;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the person.
	 *
	 * @return the person
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	/**
	 * Sets the person.
	 *
	 * @param person the new person
	 */
	public void setPerson(Person person) {
		this.person = person;
	}

	/**
	 * Gets the aff ref projects.
	 *
	 * @return the aff ref projects
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "refer_id")
	public AffRefProjects getAffRefProjects() {
		return this.affRefProjects;
	}

	/**
	 * Sets the aff ref projects.
	 *
	 * @param affRefProjects the new aff ref projects
	 */
	public void setAffRefProjects(AffRefProjects affRefProjects) {
		this.affRefProjects = affRefProjects;
	}

	/**
	 * Gets the name.
	 *
	 * @return the name
	 */
	@Column(name = "name", nullable = false, length = 150)
	public String getName() {
		return this.name;
	}

	/**
	 * Sets the name.
	 *
	 * @param name the new name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Gets the data from.
	 *
	 * @return the data from
	 */
	@Column(name = "data_from", length = 250)
	public String getDataFrom() {
		return this.dataFrom;
	}

	/**
	 * Sets the data from.
	 *
	 * @param dataFrom the new data from
	 */
	public void setDataFrom(String dataFrom) {
		this.dataFrom = dataFrom;
	}

	/**
	 * Gets the remarks.
	 *
	 * @return the remarks
	 */
	@Column(name = "remarks")
	public String getRemarks() {
		return this.remarks;
	}

	/**
	 * Sets the remarks.
	 *
	 * @param remarks the new remarks
	 */
	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	/**
	 * Gets the created time.
	 *
	 * @return the created time
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_time", nullable = false, length = 29)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	/**
	 * Sets the created time.
	 *
	 * @param createdTime the new created time
	 */
	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	/**
	 * Gets the aff ref projectses.
	 *
	 * @return the aff ref projectses
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "affRefProjects")
	public Set<AffRefProjects> getAffRefProjectses() {
		return this.affRefProjectses;
	}

	/**
	 * Sets the aff ref projectses.
	 *
	 * @param affRefProjectses the new aff ref projectses
	 */
	public void setAffRefProjectses(Set<AffRefProjects> affRefProjectses) {
		this.affRefProjectses = affRefProjectses;
	}

}
