package com.geoland.kfis.model;

// Generated Jun 2, 2015 4:25:47 PM by Hibernate Tools 4.0.0

import com.geoland.framework.persistence.base.*;
import org.hibernate.annotations.Type;
import com.geoland.kfis.persistence.hibernate.usertypes.Month;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;

// TODO: Auto-generated Javadoc
/**
 * AnnualBudgetAllocation generated by hbm2java.
 */
@Entity
@Table(name = "tfin_annu_budget_alloc", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"municipality_id", "month", "year" }))
public class AnnualBudgetAllocation extends AbstractPersistentObject implements
		java.io.Serializable {
	
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The id. */
	private Long id;
	
	/** The employee. */
	private Employee employee;
	
	/** The organisation. */
	private Organisation organisation;
	
	/** The wood sales. */
	private Double woodSales;
	
	/** The other income. */
	private Double otherIncome;
	
	/** The total. */
	private Double total;
	
	/** The allocation 36. */
	private Double allocation36;
	
	/** The municipality 30 portion. */
	private Double municipality30Portion;
	
	/** The kfa remainder. */
	private Double kfaRemainder;
	
	/** The month. */
	private Month month;
	
	/** The year. */
	private Long year;
	
	/** The created time. */
	private Date createdTime;

	/**
	 * Instantiates a new annual budget allocation.
	 */
	public AnnualBudgetAllocation() {
	}

	/**
	 * Instantiates a new annual budget allocation.
	 *
	 * @param organisation the organisation
	 * @param month the month
	 * @param year the year
	 */
	public AnnualBudgetAllocation(Organisation organisation, Month month,
			Long year) {
		this.organisation = organisation;
		this.month = month;
		this.year = year;
	}

	/**
	 * Instantiates a new annual budget allocation.
	 *
	 * @param employee the employee
	 * @param organisation the organisation
	 * @param woodSales the wood sales
	 * @param otherIncome the other income
	 * @param total the total
	 * @param allocation36 the allocation 36
	 * @param municipality30Portion the municipality 30 portion
	 * @param kfaRemainder the kfa remainder
	 * @param month the month
	 * @param year the year
	 * @param createdTime the created time
	 */
	public AnnualBudgetAllocation(Employee employee, Organisation organisation,
			Double woodSales, Double otherIncome, Double total,
			Double allocation36, Double municipality30Portion,
			Double kfaRemainder, Month month, Long year, Date createdTime) {
		this.employee = employee;
		this.organisation = organisation;
		this.woodSales = woodSales;
		this.otherIncome = otherIncome;
		this.total = total;
		this.allocation36 = allocation36;
		this.municipality30Portion = municipality30Portion;
		this.kfaRemainder = kfaRemainder;
		this.month = month;
		this.year = year;
		this.createdTime = createdTime;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#getId()
	 */
	@GenericGenerator(name = "generator", strategy = "increment")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	/* (non-Javadoc)
	 * @see com.geoland.framework.persistence.base.AbstractPersistentObject#setId(java.lang.Long)
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Gets the employee.
	 *
	 * @return the employee
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by")
	public Employee getEmployee() {
		return this.employee;
	}

	/**
	 * Sets the employee.
	 *
	 * @param employee the new employee
	 */
	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	/**
	 * Gets the organisation.
	 *
	 * @return the organisation
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "municipality_id", nullable = false)
	public Organisation getOrganisation() {
		return this.organisation;
	}

	/**
	 * Sets the organisation.
	 *
	 * @param organisation the new organisation
	 */
	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	/**
	 * Gets the wood sales.
	 *
	 * @return the wood sales
	 */
	@Column(name = "wood_sales", precision = 17, scale = 17)
	public Double getWoodSales() {
		return this.woodSales;
	}

	/**
	 * Sets the wood sales.
	 *
	 * @param woodSales the new wood sales
	 */
	public void setWoodSales(Double woodSales) {
		this.woodSales = woodSales;
	}

	/**
	 * Gets the other income.
	 *
	 * @return the other income
	 */
	@Column(name = "other_income", precision = 17, scale = 17)
	public Double getOtherIncome() {
		return this.otherIncome;
	}

	/**
	 * Sets the other income.
	 *
	 * @param otherIncome the new other income
	 */
	public void setOtherIncome(Double otherIncome) {
		this.otherIncome = otherIncome;
	}

	/**
	 * Gets the total.
	 *
	 * @return the total
	 */
	@Column(name = "total", precision = 17, scale = 17)
	public Double getTotal() {
		return this.total;
	}

	/**
	 * Sets the total.
	 *
	 * @param total the new total
	 */
	public void setTotal(Double total) {
		this.total = total;
	}

	/**
	 * Gets the allocation 36.
	 *
	 * @return the allocation 36
	 */
	@Column(name = "allocation_36", precision = 17, scale = 17)
	public Double getAllocation36() {
		return this.allocation36;
	}

	/**
	 * Sets the allocation 36.
	 *
	 * @param allocation36 the new allocation 36
	 */
	public void setAllocation36(Double allocation36) {
		this.allocation36 = allocation36;
	}

	/**
	 * Gets the municipality 30 portion.
	 *
	 * @return the municipality 30 portion
	 */
	@Column(name = "municipality_30_portion", precision = 17, scale = 17)
	public Double getMunicipality30Portion() {
		return this.municipality30Portion;
	}

	/**
	 * Sets the municipality 30 portion.
	 *
	 * @param municipality30Portion the new municipality 30 portion
	 */
	public void setMunicipality30Portion(Double municipality30Portion) {
		this.municipality30Portion = municipality30Portion;
	}

	/**
	 * Gets the kfa remainder.
	 *
	 * @return the kfa remainder
	 */
	@Column(name = "kfa_remainder", precision = 17, scale = 17)
	public Double getKfaRemainder() {
		return this.kfaRemainder;
	}

	/**
	 * Sets the kfa remainder.
	 *
	 * @param kfaRemainder the new kfa remainder
	 */
	public void setKfaRemainder(Double kfaRemainder) {
		this.kfaRemainder = kfaRemainder;
	}

	/**
	 * Gets the month.
	 *
	 * @return the month
	 */
	@Column(name = "month", nullable = false, length = 2)
	@Type(type = "com.geoland.kfis.persistence.hibernate.usertypes.MonthUserType")
	public Month getMonth() {
		return this.month;
	}

	/**
	 * Sets the month.
	 *
	 * @param month the new month
	 */
	public void setMonth(Month month) {
		this.month = month;
	}

	/**
	 * Gets the year.
	 *
	 * @return the year
	 */
	@Column(name = "year", nullable = false)
	public Long getYear() {
		return this.year;
	}

	/**
	 * Sets the year.
	 *
	 * @param year the new year
	 */
	public void setYear(Long year) {
		this.year = year;
	}

	/**
	 * Gets the created time.
	 *
	 * @return the created time
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_time", length = 29)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	/**
	 * Sets the created time.
	 *
	 * @param createdTime the new created time
	 */
	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

}
